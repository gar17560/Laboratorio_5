

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 22 15:29:55 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.05
    31                           ; Generated 20/12/2018 GMT
    32                           ; 
    33                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0013                     _SSPBUF	set	19
   299  0014                     _SSPCON	set	20
   300  0008                     _PORTDbits	set	8
   301  0008                     _PORTD	set	8
   302  0006                     _PORTB	set	6
   303  0005                     _PORTA	set	5
   304  0063                     _SSPIF	set	99
   305  005E                     _PEIE	set	94
   306  005F                     _GIE	set	95
   307  0091                     _SSPCON2bits	set	145
   308  0087                     _TRISCbits	set	135
   309  0094                     _SSPSTAT	set	148
   310  0093                     _SSPADD	set	147
   311  0091                     _SSPCON2	set	145
   312  0085                     _TRISA	set	133
   313  0088                     _TRISD	set	136
   314  0086                     _TRISB	set	134
   315  0463                     _SSPIE	set	1123
   316  043C                     _TRISC4	set	1084
   317  043B                     _TRISC3	set	1083
   318  0188                     _ANSEL	set	392
   319  0189                     _ANSELH	set	393
   320                           
   321                           	psect	strings
   322  0003                     __pstrings:	
   323  0003                     stringtab:	
   324  0003                     __stringtab:	
   325  0003                     stringcode:	
   326                           ;	String table - string pointers are 1 byte each
   327                           
   328  0003                     stringdir:	
   329  0003  3000               	movlw	high stringdir
   330  0004  008A               	movwf	10
   331  0005  0804               	movf	4,w
   332  0006  0A84               	incf	4,f
   333  0007  0782               	addwf	2,f
   334  0008                     __stringbase:	
   335  0008  3400               	retlw	0
   336  0009                     __end_of__stringtab:	
   337  0009                     STR_1:	
   338  0009  3453               	retlw	83	;'S'
   339  000A  3431               	retlw	49	;'1'
   340  000B  3420               	retlw	32	;' '
   341  000C  3420               	retlw	32	;' '
   342  000D  3453               	retlw	83	;'S'
   343  000E  3432               	retlw	50	;'2'
   344  000F  3420               	retlw	32	;' '
   345  0010  3420               	retlw	32	;' '
   346  0011  3420               	retlw	32	;' '
   347  0012  3420               	retlw	32	;' '
   348  0013  3453               	retlw	83	;'S'
   349  0014  3433               	retlw	51	;'3'
   350  0015  3400               	retlw	0
   351  0016                     STR_4:	
   352  0016  3448               	retlw	72	;'H'
   353  0017  344F               	retlw	79	;'O'
   354  0018  344C               	retlw	76	;'L'
   355  0019  3441               	retlw	65	;'A'
   356  001A  3400               	retlw	0
   357  001B                     STR_2:	
   358  001B  342E               	retlw	46	;'.'
   359  001C  3400               	retlw	0
   360  001D                     STR_3:	
   361  001D  3456               	retlw	86	;'V'
   362  001E  3400               	retlw	0
   363                           
   364                           ; #config settings
   365  0000                     
   366                           	psect	cinit
   367  07F5                     start_initialization:	
   368  07F5                     __initialization:	
   369                           
   370                           ; Clear objects allocated to BANK0
   371  07F5  1383               	bcf	3,7	;select IRP bank0
   372  07F6  3020               	movlw	low __pbssBANK0
   373  07F7  0084               	movwf	4
   374  07F8  3030               	movlw	low (__pbssBANK0+16)
   375  07F9  120A  118A  23B3   	fcall	clear_ram0
   376  07FC                     end_of_initialization:	
   377                           ;End of C runtime variable initialization code
   378                           
   379  07FC                     __end_of__initialization:	
   380  07FC  0183               	clrf	3
   381  07FD  120A  118A  2ED4   	ljmp	_main	;jump to C main() function
   382                           
   383                           	psect	bssBANK0
   384  0020                     __pbssBANK0:	
   385  0020                     mapear@F1362:	
   386  0020                     	ds	6
   387  0026                     uint_to_array@F1354:	
   388  0026                     	ds	6
   389  002C                     _valor1:	
   390  002C                     	ds	1
   391  002D                     _contador:	
   392  002D                     	ds	1
   393  002E                     _valor_adc:	
   394  002E                     	ds	1
   395  002F                     _contador1:	
   396  002F                     	ds	1
   397                           
   398                           	psect	clrtext
   399  03B3                     clear_ram0:	
   400                           ;	Called with FSR containing the base address, and
   401                           ;	W with the last address+1
   402                           
   403  03B3  0064               	clrwdt	;clear the watchdog before getting into this loop
   404  03B4                     clrloop0:	
   405  03B4  0180               	clrf	0	;clear RAM location pointed to by FSR
   406  03B5  0A84               	incf	4,f	;increment pointer
   407  03B6  0604               	xorwf	4,w	;XOR with final address
   408  03B7  1903               	btfsc	3,2	;have we reached the end yet?
   409  03B8  3400               	retlw	0	;all done for this memory range, return
   410  03B9  0604               	xorwf	4,w	;XOR again to restore value
   411  03BA  2BB4               	goto	clrloop0	;do the next byte
   412                           
   413                           	psect	cstackCOMMON
   414  0070                     __pcstackCOMMON:	
   415  0070                     ?_config:	
   416  0070                     ??_config:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Init:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Clear:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_Lcd_Write_String:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_I2C_Master_Start:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_I2C_Master_Start:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_I2C_Master_Write:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_I2C_Master_Stop:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ??_I2C_Master_Stop:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_Lcd_Write_Char:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_Lcd_Write_Char:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_uint_to_char:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_uint_to_char:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_Lcd_Cmd:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_main:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_I2C_Master_Wait:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_I2C_Master_Wait:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_I2C_Master_Read:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?___wmul:	
   471                           ; 2 bytes @ 0x0
   472                           
   473  0070                     ?___lldiv:	
   474                           ; 2 bytes @ 0x0
   475                           
   476  0070                     Lcd_Cmd@a:	
   477                           ; 4 bytes @ 0x0
   478                           
   479  0070                     I2C_Master_Write@d:	
   480                           ; 2 bytes @ 0x0
   481                           
   482  0070                     I2C_Master_Read@a:	
   483                           ; 2 bytes @ 0x0
   484                           
   485  0070                     ___wmul@multiplier:	
   486                           ; 2 bytes @ 0x0
   487                           
   488  0070                     ___lldiv@divisor:	
   489                           ; 2 bytes @ 0x0
   490                           
   491                           
   492                           ; 4 bytes @ 0x0
   493  0070                     	ds	1
   494  0071                     Lcd_Write_Char@a:	
   495                           
   496                           ; 1 bytes @ 0x1
   497  0071                     	ds	1
   498  0072                     ??_Lcd_Write_String:	
   499  0072                     ??_I2C_Master_Write:	
   500                           ; 1 bytes @ 0x2
   501                           
   502  0072                     ??_I2C_Master_Read:	
   503                           ; 1 bytes @ 0x2
   504                           
   505  0072                     ??_Lcd_Cmd:	
   506                           ; 1 bytes @ 0x2
   507                           
   508  0072                     uint_to_char@numero:	
   509                           ; 1 bytes @ 0x2
   510                           
   511  0072                     Lcd_Write_String@n:	
   512                           ; 1 bytes @ 0x2
   513                           
   514  0072                     ___wmul@multiplicand:	
   515                           ; 2 bytes @ 0x2
   516                           
   517                           
   518                           ; 2 bytes @ 0x2
   519  0072                     	ds	1
   520  0073                     uint_to_char@numChr:	
   521                           
   522                           ; 1 bytes @ 0x3
   523  0073                     	ds	1
   524  0074                     ??_Lcd_Init:	
   525  0074                     ??_Lcd_Clear:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     ?_Lcd_Set_Cursor:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     ??___wmul:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0074                     Lcd_Write_String@a:	
   535                           ; 1 bytes @ 0x4
   536                           
   537  0074                     Lcd_Set_Cursor@a:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0074                     I2C_Master_Read@temp:	
   541                           ; 2 bytes @ 0x4
   542                           
   543  0074                     ___wmul@product:	
   544                           ; 2 bytes @ 0x4
   545                           
   546  0074                     ___lldiv@dividend:	
   547                           ; 2 bytes @ 0x4
   548                           
   549                           
   550                           ; 4 bytes @ 0x4
   551  0074                     	ds	2
   552  0076                     ?_mapear:	
   553  0076                     mapear@limReal:	
   554                           ; 1 bytes @ 0x6
   555                           
   556  0076                     Lcd_Set_Cursor@b:	
   557                           ; 1 bytes @ 0x6
   558                           
   559                           
   560                           ; 2 bytes @ 0x6
   561  0076                     	ds	1
   562  0077                     mapear@limSup:	
   563                           
   564                           ; 1 bytes @ 0x7
   565  0077                     	ds	1
   566  0078                     ??_Lcd_Set_Cursor:	
   567  0078                     ??_mapear:	
   568                           ; 1 bytes @ 0x8
   569                           
   570  0078                     ??___lldiv:	
   571                           ; 1 bytes @ 0x8
   572                           
   573  0078                     Lcd_Set_Cursor@d:	
   574                           ; 1 bytes @ 0x8
   575                           
   576                           
   577                           ; 2 bytes @ 0x8
   578  0078                     	ds	1
   579  0079                     ___lldiv@quotient:	
   580                           
   581                           ; 4 bytes @ 0x9
   582  0079                     	ds	4
   583  007D                     ___lldiv@counter:	
   584                           
   585                           ; 1 bytes @ 0xD
   586  007D                     	ds	1
   587                           
   588                           	psect	cstackBANK0
   589  0030                     __pcstackBANK0:	
   590  0030                     ?_I2C_Master_Init:	
   591  0030                     mapear@valor:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0030                     I2C_Master_Init@c:	
   595                           ; 1 bytes @ 0x0
   596                           
   597                           
   598                           ; 4 bytes @ 0x0
   599  0030                     	ds	1
   600  0031                     mapear@resultado:	
   601                           
   602                           ; 6 bytes @ 0x1
   603  0031                     	ds	3
   604  0034                     ??_I2C_Master_Init:	
   605                           
   606                           ; 1 bytes @ 0x4
   607  0034                     	ds	3
   608  0037                     mapear@dividendo:	
   609                           
   610                           ; 2 bytes @ 0x7
   611  0037                     	ds	2
   612  0039                     ??_main:	
   613                           
   614                           ; 1 bytes @ 0x9
   615  0039                     	ds	3
   616                           
   617                           	psect	maintext
   618  06D4                     __pmaintext:	
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 36 in file "LAB_5_MASTER.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B00/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       3       0       0       0
   641 ;;      Totals:         0       3       0       0       0
   642 ;;Total ram usage:        3 bytes
   643 ;; Hardware stack levels required when called:    2
   644 ;; This function calls:
   645 ;;		_I2C_Master_Init
   646 ;;		_I2C_Master_Read
   647 ;;		_I2C_Master_Start
   648 ;;		_I2C_Master_Stop
   649 ;;		_I2C_Master_Write
   650 ;;		_Lcd_Clear
   651 ;;		_Lcd_Init
   652 ;;		_Lcd_Set_Cursor
   653 ;;		_Lcd_Write_Char
   654 ;;		_Lcd_Write_String
   655 ;;		_config
   656 ;;		_mapear
   657 ;;		_uint_to_char
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  06D4                     _main:	
   666                           
   667                           ;LAB_5_MASTER.c: 37:     config();
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   671  06D4  120A  118A  23D3  120A  118A  	fcall	_config
   672                           
   673                           ;LAB_5_MASTER.c: 38:     Lcd_Init();
   674  06D9  120A  118A  25B7  120A  118A  	fcall	_Lcd_Init
   675                           
   676                           ;LAB_5_MASTER.c: 39:     Lcd_Clear();
   677  06DE  120A  118A  23EC  120A  118A  	fcall	_Lcd_Clear
   678                           
   679                           ;LAB_5_MASTER.c: 40:     Lcd_Set_Cursor(1,1);
   680  06E3  3001               	movlw	1
   681  06E4  00F4               	movwf	Lcd_Set_Cursor@a
   682  06E5  3000               	movlw	0
   683  06E6  00F5               	movwf	Lcd_Set_Cursor@a+1
   684  06E7  3001               	movlw	1
   685  06E8  00F6               	movwf	Lcd_Set_Cursor@b
   686  06E9  3000               	movlw	0
   687  06EA  00F7               	movwf	Lcd_Set_Cursor@b+1
   688  06EB  120A  118A  2407  120A  118A  	fcall	_Lcd_Set_Cursor
   689                           
   690                           ;LAB_5_MASTER.c: 41:     Lcd_Write_String("S1  S2    S3");
   691  06F0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   692  06F1  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   693                           
   694                           ;LAB_5_MASTER.c: 42:     I2C_Master_Init(100000);
   695  06F6  3000               	movlw	0
   696  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   697  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   698  06F9  00B3               	movwf	I2C_Master_Init@c+3
   699  06FA  3001               	movlw	1
   700  06FB  00B2               	movwf	I2C_Master_Init@c+2
   701  06FC  3086               	movlw	134
   702  06FD  00B1               	movwf	I2C_Master_Init@c+1
   703  06FE  30A0               	movlw	160
   704  06FF  00B0               	movwf	I2C_Master_Init@c
   705  0700  120A  118A  24C0  120A  118A  	fcall	_I2C_Master_Init
   706  0705                     l1341:	
   707                           
   708                           ;LAB_5_MASTER.c: 44:         I2C_Master_Start();
   709  0705  120A  118A  239D  120A  118A  	fcall	_I2C_Master_Start
   710                           
   711                           ;LAB_5_MASTER.c: 45:         I2C_Master_Write(0x31);
   712  070A  3031               	movlw	49
   713  070B  00F0               	movwf	I2C_Master_Write@d
   714  070C  3000               	movlw	0
   715  070D  00F1               	movwf	I2C_Master_Write@d+1
   716  070E  120A  118A  23AB  120A  118A  	fcall	_I2C_Master_Write
   717                           
   718                           ;LAB_5_MASTER.c: 46:         contador1 = I2C_Master_Read(0);
   719  0713  3000               	movlw	0
   720  0714  00F0               	movwf	I2C_Master_Read@a
   721  0715  00F1               	movwf	I2C_Master_Read@a+1
   722  0716  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
   723  071B  0870               	movf	?_I2C_Master_Read,w
   724  071C  1283               	bcf	3,5	;RP0=0, select bank0
   725  071D  1303               	bcf	3,6	;RP1=0, select bank0
   726  071E  00B9               	movwf	??_main
   727  071F  0839               	movf	??_main,w
   728  0720  00AF               	movwf	_contador1
   729                           
   730                           ;LAB_5_MASTER.c: 47:         I2C_Master_Stop();
   731  0721  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Stop
   732                           
   733                           ;LAB_5_MASTER.c: 48:         _delay((unsigned long)((50)*(8000000/4000.0)));
   734  0726  3082               	movlw	130
   735  0727  1283               	bcf	3,5	;RP0=0, select bank0
   736  0728  1303               	bcf	3,6	;RP1=0, select bank0
   737  0729  00BA               	movwf	??_main+1
   738  072A  30DD               	movlw	221
   739  072B  00B9               	movwf	??_main
   740  072C                     u577:	
   741  072C  0BB9               	decfsz	??_main,f
   742  072D  2F2C               	goto	u577
   743  072E  0BBA               	decfsz	??_main+1,f
   744  072F  2F2C               	goto	u577
   745                           
   746                           ;LAB_5_MASTER.c: 50:         I2C_Master_Start();
   747  0730  120A  118A  239D  120A  118A  	fcall	_I2C_Master_Start
   748                           
   749                           ;LAB_5_MASTER.c: 51:         I2C_Master_Write(0x51);
   750  0735  3051               	movlw	81
   751  0736  00F0               	movwf	I2C_Master_Write@d
   752  0737  3000               	movlw	0
   753  0738  00F1               	movwf	I2C_Master_Write@d+1
   754  0739  120A  118A  23AB  120A  118A  	fcall	_I2C_Master_Write
   755                           
   756                           ;LAB_5_MASTER.c: 52:         valor_adc = I2C_Master_Read(0);
   757  073E  3000               	movlw	0
   758  073F  00F0               	movwf	I2C_Master_Read@a
   759  0740  00F1               	movwf	I2C_Master_Read@a+1
   760  0741  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
   761  0746  0870               	movf	?_I2C_Master_Read,w
   762  0747  1283               	bcf	3,5	;RP0=0, select bank0
   763  0748  1303               	bcf	3,6	;RP1=0, select bank0
   764  0749  00B9               	movwf	??_main
   765  074A  0839               	movf	??_main,w
   766  074B  00AE               	movwf	_valor_adc
   767                           
   768                           ;LAB_5_MASTER.c: 53:         I2C_Master_Stop();
   769  074C  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Stop
   770                           
   771                           ;LAB_5_MASTER.c: 54:         _delay((unsigned long)((50)*(8000000/4000.0)));
   772  0751  3082               	movlw	130
   773  0752  1283               	bcf	3,5	;RP0=0, select bank0
   774  0753  1303               	bcf	3,6	;RP1=0, select bank0
   775  0754  00BA               	movwf	??_main+1
   776  0755  30DD               	movlw	221
   777  0756  00B9               	movwf	??_main
   778  0757                     u587:	
   779  0757  0BB9               	decfsz	??_main,f
   780  0758  2F57               	goto	u587
   781  0759  0BBA               	decfsz	??_main+1,f
   782  075A  2F57               	goto	u587
   783                           
   784                           ;LAB_5_MASTER.c: 56:         PORTA = contador1;
   785  075B  1283               	bcf	3,5	;RP0=0, select bank0
   786  075C  1303               	bcf	3,6	;RP1=0, select bank0
   787  075D  082F               	movf	_contador1,w
   788  075E  0085               	movwf	5	;volatile
   789                           
   790                           ;LAB_5_MASTER.c: 58:         valor1 = mapear(valor_adc, 255, 5);
   791  075F  30FF               	movlw	255
   792  0760  00B9               	movwf	??_main
   793  0761  0839               	movf	??_main,w
   794  0762  00F6               	movwf	mapear@limReal
   795  0763  3005               	movlw	5
   796  0764  00BA               	movwf	??_main+1
   797  0765  083A               	movf	??_main+1,w
   798  0766  00F7               	movwf	mapear@limSup
   799  0767  082E               	movf	_valor_adc,w
   800  0768  120A  118A  2636  120A  118A  	fcall	_mapear
   801  076D  1283               	bcf	3,5	;RP0=0, select bank0
   802  076E  1303               	bcf	3,6	;RP1=0, select bank0
   803  076F  00BB               	movwf	??_main+2
   804  0770  083B               	movf	??_main+2,w
   805  0771  00AC               	movwf	_valor1
   806                           
   807                           ;LAB_5_MASTER.c: 60:         Lcd_Set_Cursor(2,2);
   808  0772  3002               	movlw	2
   809  0773  00F4               	movwf	Lcd_Set_Cursor@a
   810  0774  3000               	movlw	0
   811  0775  00F5               	movwf	Lcd_Set_Cursor@a+1
   812  0776  3002               	movlw	2
   813  0777  00F6               	movwf	Lcd_Set_Cursor@b
   814  0778  3000               	movlw	0
   815  0779  00F7               	movwf	Lcd_Set_Cursor@b+1
   816  077A  120A  118A  2407  120A  118A  	fcall	_Lcd_Set_Cursor
   817                           
   818                           ;LAB_5_MASTER.c: 61:         Lcd_Write_Char(uint_to_char(contador1));
   819  077F  1283               	bcf	3,5	;RP0=0, select bank0
   820  0780  1303               	bcf	3,6	;RP1=0, select bank0
   821  0781  082F               	movf	_contador1,w
   822  0782  120A  118A  2554  120A  118A  	fcall	_uint_to_char
   823  0787  120A  118A  23C4  120A  118A  	fcall	_Lcd_Write_Char
   824                           
   825                           ;LAB_5_MASTER.c: 62:         _delay((unsigned long)((50)*(8000000/4000.0)));
   826  078C  3082               	movlw	130
   827  078D  1283               	bcf	3,5	;RP0=0, select bank0
   828  078E  1303               	bcf	3,6	;RP1=0, select bank0
   829  078F  00BA               	movwf	??_main+1
   830  0790  30DD               	movlw	221
   831  0791  00B9               	movwf	??_main
   832  0792                     u597:	
   833  0792  0BB9               	decfsz	??_main,f
   834  0793  2F92               	goto	u597
   835  0794  0BBA               	decfsz	??_main+1,f
   836  0795  2F92               	goto	u597
   837                           
   838                           ;LAB_5_MASTER.c: 63:         Lcd_Set_Cursor(2,5);
   839  0796  3002               	movlw	2
   840  0797  00F4               	movwf	Lcd_Set_Cursor@a
   841  0798  3000               	movlw	0
   842  0799  00F5               	movwf	Lcd_Set_Cursor@a+1
   843  079A  3005               	movlw	5
   844  079B  00F6               	movwf	Lcd_Set_Cursor@b
   845  079C  3000               	movlw	0
   846  079D  00F7               	movwf	Lcd_Set_Cursor@b+1
   847  079E  120A  118A  2407  120A  118A  	fcall	_Lcd_Set_Cursor
   848                           
   849                           ;LAB_5_MASTER.c: 64:         Lcd_Write_Char(uint_to_char(valor1[0]));
   850  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   851  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   852  07A5  082C               	movf	_valor1,w
   853  07A6  0084               	movwf	4
   854  07A7  1383               	bcf	3,7	;select IRP bank0
   855  07A8  0800               	movf	0,w
   856  07A9  120A  118A  2554  120A  118A  	fcall	_uint_to_char
   857  07AE  120A  118A  23C4  120A  118A  	fcall	_Lcd_Write_Char
   858                           
   859                           ;LAB_5_MASTER.c: 65:         Lcd_Write_String(".");
   860  07B3  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   861  07B4  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   862                           
   863                           ;LAB_5_MASTER.c: 66:         Lcd_Write_Char(uint_to_char(valor1[1]));
   864  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   865  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   866  07BB  082C               	movf	_valor1,w
   867  07BC  3E02               	addlw	2
   868  07BD  0084               	movwf	4
   869  07BE  1383               	bcf	3,7	;select IRP bank0
   870  07BF  0800               	movf	0,w
   871  07C0  120A  118A  2554  120A  118A  	fcall	_uint_to_char
   872  07C5  120A  118A  23C4  120A  118A  	fcall	_Lcd_Write_Char
   873                           
   874                           ;LAB_5_MASTER.c: 67:         Lcd_Write_Char(uint_to_char(valor1[2]));
   875  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   876  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   877  07CC  082C               	movf	_valor1,w
   878  07CD  3E04               	addlw	4
   879  07CE  0084               	movwf	4
   880  07CF  1383               	bcf	3,7	;select IRP bank0
   881  07D0  0800               	movf	0,w
   882  07D1  120A  118A  2554  120A  118A  	fcall	_uint_to_char
   883  07D6  120A  118A  23C4  120A  118A  	fcall	_Lcd_Write_Char
   884                           
   885                           ;LAB_5_MASTER.c: 68:         Lcd_Write_String("V");
   886  07DB  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   887  07DC  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   888                           
   889                           ;LAB_5_MASTER.c: 69:         Lcd_Set_Cursor(2,11);
   890  07E1  3002               	movlw	2
   891  07E2  00F4               	movwf	Lcd_Set_Cursor@a
   892  07E3  3000               	movlw	0
   893  07E4  00F5               	movwf	Lcd_Set_Cursor@a+1
   894  07E5  300B               	movlw	11
   895  07E6  00F6               	movwf	Lcd_Set_Cursor@b
   896  07E7  3000               	movlw	0
   897  07E8  00F7               	movwf	Lcd_Set_Cursor@b+1
   898  07E9  120A  118A  2407  120A  118A  	fcall	_Lcd_Set_Cursor
   899                           
   900                           ;LAB_5_MASTER.c: 70:         Lcd_Write_String("HOLA");
   901  07EE  300E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   902  07EF  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   903  07F4  2F05               	goto	l1341
   904  07F5                     __end_of_main:	
   905                           
   906                           	psect	text1
   907  0554                     __ptext1:	
   908 ;; *************** function _uint_to_char *****************
   909 ;; Defined at:
   910 ;;		line 193 in file "funciones0.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  numero          1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  numero          1    2[COMMON] unsigned char 
   915 ;;  numChr          1    3[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      unsigned char 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         2       0       0       0       0
   927 ;;      Temps:          2       0       0       0       0
   928 ;;      Totals:         4       0       0       0       0
   929 ;;Total ram usage:        4 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _uint_to_char
   940  0554                     _uint_to_char:	
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _uint_to_char: [wreg-fsr0h+status,2+status,0]
   944                           ;uint_to_char@numero stored from wreg
   945  0554  00F2               	movwf	uint_to_char@numero
   946                           
   947                           ;funciones0.c: 195:     switch (numero){
   948  0555  2D7B               	goto	l1319
   949  0556                     l1285:	
   950                           
   951                           ;funciones0.c: 197:             numChr = 48;
   952  0556  3030               	movlw	48
   953  0557  2D77               	goto	L16
   954  0558                     l1287:	
   955                           ;funciones0.c: 198:             break;
   956                           
   957                           
   958                           ;funciones0.c: 200:             numChr = 49;
   959  0558  3031               	movlw	49
   960  0559  2D77               	goto	L16
   961  055A                     l1289:	
   962                           ;funciones0.c: 201:             break;
   963                           
   964                           
   965                           ;funciones0.c: 203:             numChr = 50;
   966  055A  3032               	movlw	50
   967  055B  2D77               	goto	L16
   968  055C                     l1291:	
   969                           ;funciones0.c: 204:             break;
   970                           
   971                           
   972                           ;funciones0.c: 206:             numChr = 51;
   973  055C  3033               	movlw	51
   974  055D  2D77               	goto	L16
   975  055E                     l1293:	
   976                           ;funciones0.c: 207:             break;
   977                           
   978                           
   979                           ;funciones0.c: 209:             numChr = 52;
   980  055E  3034               	movlw	52
   981  055F  2D77               	goto	L16
   982  0560                     l1295:	
   983                           ;funciones0.c: 210:             break;
   984                           
   985                           
   986                           ;funciones0.c: 212:             numChr = 53;
   987  0560  3035               	movlw	53
   988  0561  2D77               	goto	L16
   989  0562                     l1297:	
   990                           ;funciones0.c: 213:             break;
   991                           
   992                           
   993                           ;funciones0.c: 215:             numChr = 54;
   994  0562  3036               	movlw	54
   995  0563  2D77               	goto	L16
   996  0564                     l1299:	
   997                           ;funciones0.c: 216:             break;
   998                           
   999                           
  1000                           ;funciones0.c: 218:             numChr = 55;
  1001  0564  3037               	movlw	55
  1002  0565  2D77               	goto	L16
  1003  0566                     l1301:	
  1004                           ;funciones0.c: 219:             break;
  1005                           
  1006                           
  1007                           ;funciones0.c: 221:             numChr = 56;
  1008  0566  3038               	movlw	56
  1009  0567  2D77               	goto	L16
  1010  0568                     l1303:	
  1011                           ;funciones0.c: 222:             break;
  1012                           
  1013                           
  1014                           ;funciones0.c: 224:             numChr = 57;
  1015  0568  3039               	movlw	57
  1016  0569  2D77               	goto	L16
  1017  056A                     l1305:	
  1018                           ;funciones0.c: 225:             break;
  1019                           
  1020                           
  1021                           ;funciones0.c: 227:             numChr = 65;
  1022  056A  3041               	movlw	65
  1023  056B  2D77               	goto	L16
  1024  056C                     l1307:	
  1025                           ;funciones0.c: 228:             break;
  1026                           
  1027                           
  1028                           ;funciones0.c: 230:             numChr = 66;
  1029  056C  3042               	movlw	66
  1030  056D  2D77               	goto	L16
  1031  056E                     l1309:	
  1032                           ;funciones0.c: 231:             break;
  1033                           
  1034                           
  1035                           ;funciones0.c: 233:             numChr = 67;
  1036  056E  3043               	movlw	67
  1037  056F  2D77               	goto	L16
  1038  0570                     l1311:	
  1039                           ;funciones0.c: 234:             break;
  1040                           
  1041                           
  1042                           ;funciones0.c: 236:             numChr = 68;
  1043  0570  3044               	movlw	68
  1044  0571  2D77               	goto	L16
  1045  0572                     l1313:	
  1046                           ;funciones0.c: 237:             break;
  1047                           
  1048                           
  1049                           ;funciones0.c: 239:             numChr = 69;
  1050  0572  3045               	movlw	69
  1051  0573  2D77               	goto	L16
  1052  0574                     l1315:	
  1053                           ;funciones0.c: 240:             break;
  1054                           
  1055                           
  1056                           ;funciones0.c: 242:             numChr = 70;
  1057  0574  3046               	movlw	70
  1058  0575  2D77               	goto	L16
  1059  0576                     l1317:	
  1060                           ;funciones0.c: 243:             break;
  1061                           
  1062                           
  1063                           ;funciones0.c: 245:             numChr = 214;
  1064  0576  30D6               	movlw	214
  1065  0577                     L16:	
  1066  0577  00F0               	movwf	??_uint_to_char
  1067  0578  0870               	movf	??_uint_to_char,w
  1068  0579  00F3               	movwf	uint_to_char@numChr
  1069                           
  1070                           ;funciones0.c: 246:     }
  1071  057A  2DB5               	goto	l1321
  1072  057B                     l1319:	
  1073  057B  0872               	movf	uint_to_char@numero,w
  1074  057C  00F0               	movwf	??_uint_to_char
  1075  057D  01F1               	clrf	??_uint_to_char+1
  1076                           
  1077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1078                           ; Switch size 1, requested type "simple"
  1079                           ; Number of cases is 1, Range of values is 0 to 0
  1080                           ; switch strategies available:
  1081                           ; Name         Instructions Cycles
  1082                           ; simple_byte            4     3 (average)
  1083                           ; direct_byte           11     8 (fixed)
  1084                           ; jumptable            260     6 (fixed)
  1085                           ;	Chosen strategy is simple_byte
  1086  057E  0871               	movf	??_uint_to_char+1,w
  1087  057F  3A00               	xorlw	0	; case 0
  1088  0580  1903               	skipnz
  1089  0581  2D83               	goto	l1469
  1090  0582  2D76               	goto	l1317
  1091  0583                     l1469:	
  1092                           
  1093                           ; Switch size 1, requested type "simple"
  1094                           ; Number of cases is 16, Range of values is 0 to 15
  1095                           ; switch strategies available:
  1096                           ; Name         Instructions Cycles
  1097                           ; simple_byte           49    25 (average)
  1098                           ; direct_byte           56     8 (fixed)
  1099                           ; jumptable            260     6 (fixed)
  1100                           ;	Chosen strategy is simple_byte
  1101  0583  0870               	movf	??_uint_to_char,w
  1102  0584  3A00               	xorlw	0	; case 0
  1103  0585  1903               	skipnz
  1104  0586  2D56               	goto	l1285
  1105  0587  3A01               	xorlw	1	; case 1
  1106  0588  1903               	skipnz
  1107  0589  2D58               	goto	l1287
  1108  058A  3A03               	xorlw	3	; case 2
  1109  058B  1903               	skipnz
  1110  058C  2D5A               	goto	l1289
  1111  058D  3A01               	xorlw	1	; case 3
  1112  058E  1903               	skipnz
  1113  058F  2D5C               	goto	l1291
  1114  0590  3A07               	xorlw	7	; case 4
  1115  0591  1903               	skipnz
  1116  0592  2D5E               	goto	l1293
  1117  0593  3A01               	xorlw	1	; case 5
  1118  0594  1903               	skipnz
  1119  0595  2D60               	goto	l1295
  1120  0596  3A03               	xorlw	3	; case 6
  1121  0597  1903               	skipnz
  1122  0598  2D62               	goto	l1297
  1123  0599  3A01               	xorlw	1	; case 7
  1124  059A  1903               	skipnz
  1125  059B  2D64               	goto	l1299
  1126  059C  3A0F               	xorlw	15	; case 8
  1127  059D  1903               	skipnz
  1128  059E  2D66               	goto	l1301
  1129  059F  3A01               	xorlw	1	; case 9
  1130  05A0  1903               	skipnz
  1131  05A1  2D68               	goto	l1303
  1132  05A2  3A03               	xorlw	3	; case 10
  1133  05A3  1903               	skipnz
  1134  05A4  2D6A               	goto	l1305
  1135  05A5  3A01               	xorlw	1	; case 11
  1136  05A6  1903               	skipnz
  1137  05A7  2D6C               	goto	l1307
  1138  05A8  3A07               	xorlw	7	; case 12
  1139  05A9  1903               	skipnz
  1140  05AA  2D6E               	goto	l1309
  1141  05AB  3A01               	xorlw	1	; case 13
  1142  05AC  1903               	skipnz
  1143  05AD  2D70               	goto	l1311
  1144  05AE  3A03               	xorlw	3	; case 14
  1145  05AF  1903               	skipnz
  1146  05B0  2D72               	goto	l1313
  1147  05B1  3A01               	xorlw	1	; case 15
  1148  05B2  1903               	skipnz
  1149  05B3  2D74               	goto	l1315
  1150  05B4  2D76               	goto	l1317
  1151  05B5                     l1321:	
  1152                           
  1153                           ;funciones0.c: 247:     return(numChr);
  1154  05B5  0873               	movf	uint_to_char@numChr,w
  1155  05B6  0008               	return
  1156  05B7                     __end_of_uint_to_char:	
  1157                           
  1158                           	psect	text2
  1159  0636                     __ptext2:	
  1160 ;; *************** function _mapear *****************
  1161 ;; Defined at:
  1162 ;;		line 264 in file "funciones0.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  valor           1    wreg     unsigned char 
  1165 ;;  limReal         1    6[COMMON] unsigned char 
  1166 ;;  limSup          1    7[COMMON] unsigned char 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  valor           1    0[BANK0 ] unsigned char 
  1169 ;;  resultado       6    1[BANK0 ] unsigned int [3]
  1170 ;;  dividendo       2    7[BANK0 ] unsigned int 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      PTR unsigned int 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         2       0       0       0       0
  1181 ;;      Locals:         0       9       0       0       0
  1182 ;;      Temps:          4       0       0       0       0
  1183 ;;      Totals:         6       9       0       0       0
  1184 ;;Total ram usage:       15 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    1
  1187 ;; This function calls:
  1188 ;;		___wmul
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _mapear
  1196  0636                     _mapear:	
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _mapear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1200                           ;mapear@valor stored from wreg
  1201  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0638  00B0               	movwf	mapear@valor
  1204                           
  1205                           ;funciones0.c: 265:     uint16_t resultado[3] = {0,0,0};
  1206  0639  3031               	movlw	mapear@resultado& (0+255)
  1207  063A  0084               	movwf	4
  1208  063B  3006               	movlw	6
  1209  063C  00FF               	movwf	127
  1210  063D                     u420:	
  1211  063D  1383               	bcf	3,7	;select IRP bank0
  1212  063E  0180               	clrf	0
  1213  063F  0A84               	incf	4,f
  1214  0640  0BFF               	decfsz	127,f
  1215  0641  2E3D               	goto	u420
  1216                           
  1217                           ;funciones0.c: 266:     uint16_t dividendo = valor*limSup;
  1218  0642  0830               	movf	mapear@valor,w
  1219  0643  00F8               	movwf	??_mapear
  1220  0644  01F9               	clrf	??_mapear+1
  1221  0645  0878               	movf	??_mapear,w
  1222  0646  00F0               	movwf	___wmul@multiplier
  1223  0647  0879               	movf	??_mapear+1,w
  1224  0648  00F1               	movwf	___wmul@multiplier+1
  1225  0649  0877               	movf	mapear@limSup,w
  1226  064A  00FA               	movwf	??_mapear+2
  1227  064B  01FB               	clrf	??_mapear+3
  1228  064C  087A               	movf	??_mapear+2,w
  1229  064D  00F2               	movwf	___wmul@multiplicand
  1230  064E  087B               	movf	??_mapear+3,w
  1231  064F  00F3               	movwf	___wmul@multiplicand+1
  1232  0650  120A  118A  2423  120A  118A  	fcall	___wmul
  1233  0655  0871               	movf	?___wmul+1,w
  1234  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0658  00B8               	movwf	mapear@dividendo+1
  1237  0659  0870               	movf	?___wmul,w
  1238  065A  00B7               	movwf	mapear@dividendo
  1239  065B                     l1265:	
  1240                           ;funciones0.c: 267:     while (limReal <= dividendo){
  1241                           
  1242                           
  1243                           ;funciones0.c: 267:     while (limReal <= dividendo){
  1244  065B  0876               	movf	mapear@limReal,w
  1245  065C  00F8               	movwf	??_mapear
  1246  065D  01F9               	clrf	??_mapear+1
  1247  065E  0879               	movf	??_mapear+1,w
  1248  065F  0238               	subwf	mapear@dividendo+1,w
  1249  0660  1D03               	skipz
  1250  0661  2E64               	goto	u435
  1251  0662  0878               	movf	??_mapear,w
  1252  0663  0237               	subwf	mapear@dividendo,w
  1253  0664                     u435:	
  1254  0664  1C03               	btfss	3,0
  1255  0665  2E76               	goto	l1267
  1256                           
  1257                           ;funciones0.c: 268:         resultado[0] = resultado[0] + 1;
  1258  0666  0831               	movf	mapear@resultado,w
  1259  0667  3E01               	addlw	1
  1260  0668  00B1               	movwf	mapear@resultado
  1261  0669  0832               	movf	mapear@resultado+1,w
  1262  066A  1803               	skipnc
  1263  066B  3E01               	addlw	1
  1264  066C  3E00               	addlw	0
  1265  066D  00B2               	movwf	mapear@resultado+1
  1266                           
  1267                           ;funciones0.c: 269:         dividendo = dividendo - limReal;
  1268  066E  0876               	movf	mapear@limReal,w
  1269  066F  0237               	subwf	mapear@dividendo,w
  1270  0670  00B7               	movwf	mapear@dividendo
  1271  0671  0838               	movf	mapear@dividendo+1,w
  1272  0672  1C03               	skipc
  1273  0673  0338               	decf	mapear@dividendo+1,w
  1274  0674  00B8               	movwf	mapear@dividendo+1
  1275  0675  2E5B               	goto	l1265
  1276  0676                     l1267:	
  1277                           
  1278                           ;funciones0.c: 271:     dividendo = dividendo *10;
  1279  0676  0838               	movf	mapear@dividendo+1,w
  1280  0677  00F1               	movwf	___wmul@multiplier+1
  1281  0678  0837               	movf	mapear@dividendo,w
  1282  0679  00F0               	movwf	___wmul@multiplier
  1283  067A  300A               	movlw	10
  1284  067B  00F2               	movwf	___wmul@multiplicand
  1285  067C  3000               	movlw	0
  1286  067D  00F3               	movwf	___wmul@multiplicand+1
  1287  067E  120A  118A  2423  120A  118A  	fcall	___wmul
  1288  0683  0871               	movf	?___wmul+1,w
  1289  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0686  00B8               	movwf	mapear@dividendo+1
  1292  0687  0870               	movf	?___wmul,w
  1293  0688  00B7               	movwf	mapear@dividendo
  1294  0689                     l1271:	
  1295                           ;funciones0.c: 272:     while (limReal <= dividendo){
  1296                           
  1297                           
  1298                           ;funciones0.c: 272:     while (limReal <= dividendo){
  1299  0689  0876               	movf	mapear@limReal,w
  1300  068A  00F8               	movwf	??_mapear
  1301  068B  01F9               	clrf	??_mapear+1
  1302  068C  0879               	movf	??_mapear+1,w
  1303  068D  0238               	subwf	mapear@dividendo+1,w
  1304  068E  1D03               	skipz
  1305  068F  2E92               	goto	u445
  1306  0690  0878               	movf	??_mapear,w
  1307  0691  0237               	subwf	mapear@dividendo,w
  1308  0692                     u445:	
  1309  0692  1C03               	btfss	3,0
  1310  0693  2EA4               	goto	l1273
  1311                           
  1312                           ;funciones0.c: 273:         resultado[1] = resultado[1] +1;
  1313  0694  0833               	movf	mapear@resultado+2,w
  1314  0695  3E01               	addlw	1
  1315  0696  00B3               	movwf	mapear@resultado+2
  1316  0697  0834               	movf	mapear@resultado+3,w
  1317  0698  1803               	skipnc
  1318  0699  3E01               	addlw	1
  1319  069A  3E00               	addlw	0
  1320  069B  00B4               	movwf	mapear@resultado+3
  1321                           
  1322                           ;funciones0.c: 274:         dividendo = dividendo - limReal;
  1323  069C  0876               	movf	mapear@limReal,w
  1324  069D  0237               	subwf	mapear@dividendo,w
  1325  069E  00B7               	movwf	mapear@dividendo
  1326  069F  0838               	movf	mapear@dividendo+1,w
  1327  06A0  1C03               	skipc
  1328  06A1  0338               	decf	mapear@dividendo+1,w
  1329  06A2  00B8               	movwf	mapear@dividendo+1
  1330  06A3  2E89               	goto	l1271
  1331  06A4                     l1273:	
  1332                           
  1333                           ;funciones0.c: 276:     dividendo = dividendo *10;
  1334  06A4  0838               	movf	mapear@dividendo+1,w
  1335  06A5  00F1               	movwf	___wmul@multiplier+1
  1336  06A6  0837               	movf	mapear@dividendo,w
  1337  06A7  00F0               	movwf	___wmul@multiplier
  1338  06A8  300A               	movlw	10
  1339  06A9  00F2               	movwf	___wmul@multiplicand
  1340  06AA  3000               	movlw	0
  1341  06AB  00F3               	movwf	___wmul@multiplicand+1
  1342  06AC  120A  118A  2423  120A  118A  	fcall	___wmul
  1343  06B1  0871               	movf	?___wmul+1,w
  1344  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1345  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1346  06B4  00B8               	movwf	mapear@dividendo+1
  1347  06B5  0870               	movf	?___wmul,w
  1348  06B6  00B7               	movwf	mapear@dividendo
  1349  06B7                     l1277:	
  1350                           ;funciones0.c: 277:     while (limReal <= dividendo){
  1351                           
  1352                           
  1353                           ;funciones0.c: 277:     while (limReal <= dividendo){
  1354  06B7  0876               	movf	mapear@limReal,w
  1355  06B8  00F8               	movwf	??_mapear
  1356  06B9  01F9               	clrf	??_mapear+1
  1357  06BA  0879               	movf	??_mapear+1,w
  1358  06BB  0238               	subwf	mapear@dividendo+1,w
  1359  06BC  1D03               	skipz
  1360  06BD  2EC0               	goto	u455
  1361  06BE  0878               	movf	??_mapear,w
  1362  06BF  0237               	subwf	mapear@dividendo,w
  1363  06C0                     u455:	
  1364  06C0  1C03               	btfss	3,0
  1365  06C1  2ED2               	goto	l1279
  1366                           
  1367                           ;funciones0.c: 278:         resultado[2] = resultado[2] +1;
  1368  06C2  0835               	movf	mapear@resultado+4,w
  1369  06C3  3E01               	addlw	1
  1370  06C4  00B5               	movwf	mapear@resultado+4
  1371  06C5  0836               	movf	mapear@resultado+5,w
  1372  06C6  1803               	skipnc
  1373  06C7  3E01               	addlw	1
  1374  06C8  3E00               	addlw	0
  1375  06C9  00B6               	movwf	mapear@resultado+5
  1376                           
  1377                           ;funciones0.c: 279:         dividendo = dividendo - limReal;
  1378  06CA  0876               	movf	mapear@limReal,w
  1379  06CB  0237               	subwf	mapear@dividendo,w
  1380  06CC  00B7               	movwf	mapear@dividendo
  1381  06CD  0838               	movf	mapear@dividendo+1,w
  1382  06CE  1C03               	skipc
  1383  06CF  0338               	decf	mapear@dividendo+1,w
  1384  06D0  00B8               	movwf	mapear@dividendo+1
  1385  06D1  2EB7               	goto	l1277
  1386  06D2                     l1279:	
  1387                           
  1388                           ;funciones0.c: 282:     return resultado;
  1389  06D2  3031               	movlw	(low (mapear@resultado| 0))& (0+255)
  1390  06D3  0008               	return
  1391  06D4                     __end_of_mapear:	
  1392                           
  1393                           	psect	text3
  1394  0423                     __ptext3:	
  1395 ;; *************** function ___wmul *****************
  1396 ;; Defined at:
  1397 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  multiplier      2    0[COMMON] unsigned int 
  1400 ;;  multiplicand    2    2[COMMON] unsigned int 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  product         2    4[COMMON] unsigned int 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  2    0[COMMON] unsigned int 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         4       0       0       0       0
  1413 ;;      Locals:         2       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0
  1415 ;;      Totals:         6       0       0       0       0
  1416 ;;Total ram usage:        6 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_mapear
  1422 ;;		_uint_to_array
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function ___wmul
  1428  0423                     ___wmul:	
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1432  0423  01F4               	clrf	___wmul@product
  1433  0424  01F5               	clrf	___wmul@product+1
  1434  0425                     l1133:	
  1435  0425  1C70               	btfss	___wmul@multiplier,0
  1436  0426  2C2D               	goto	l277
  1437  0427  0872               	movf	___wmul@multiplicand,w
  1438  0428  07F4               	addwf	___wmul@product,f
  1439  0429  1803               	skipnc
  1440  042A  0AF5               	incf	___wmul@product+1,f
  1441  042B  0873               	movf	___wmul@multiplicand+1,w
  1442  042C  07F5               	addwf	___wmul@product+1,f
  1443  042D                     l277:	
  1444  042D  3001               	movlw	1
  1445  042E                     u275:	
  1446  042E  1003               	clrc
  1447  042F  0DF2               	rlf	___wmul@multiplicand,f
  1448  0430  0DF3               	rlf	___wmul@multiplicand+1,f
  1449  0431  3EFF               	addlw	-1
  1450  0432  1D03               	skipz
  1451  0433  2C2E               	goto	u275
  1452  0434  3001               	movlw	1
  1453  0435                     u285:	
  1454  0435  1003               	clrc
  1455  0436  0CF1               	rrf	___wmul@multiplier+1,f
  1456  0437  0CF0               	rrf	___wmul@multiplier,f
  1457  0438  3EFF               	addlw	-1
  1458  0439  1D03               	skipz
  1459  043A  2C35               	goto	u285
  1460  043B  0870               	movf	___wmul@multiplier,w
  1461  043C  0471               	iorwf	___wmul@multiplier+1,w
  1462  043D  1D03               	btfss	3,2
  1463  043E  2C25               	goto	l1133
  1464  043F  0875               	movf	___wmul@product+1,w
  1465  0440  00F1               	movwf	?___wmul+1
  1466  0441  0874               	movf	___wmul@product,w
  1467  0442  00F0               	movwf	?___wmul
  1468  0443  0008               	return
  1469  0444                     __end_of___wmul:	
  1470                           
  1471                           	psect	text4
  1472  03D3                     __ptext4:	
  1473 ;; *************** function _config *****************
  1474 ;; Defined at:
  1475 ;;		line 78 in file "LAB_5_MASTER.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		status,2
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _config
  1504  03D3                     _config:	
  1505                           
  1506                           ;LAB_5_MASTER.c: 80:     PORTB = 0x00;
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _config: [status,2]
  1510  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1511  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1512  03D5  0186               	clrf	6	;volatile
  1513                           
  1514                           ;LAB_5_MASTER.c: 81:     ANSELH = 0x00;
  1515  03D6  1683               	bsf	3,5	;RP0=1, select bank3
  1516  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  1517  03D8  0189               	clrf	9	;volatile
  1518                           
  1519                           ;LAB_5_MASTER.c: 82:     TRISB = 0x00;
  1520  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1521  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1522  03DB  0186               	clrf	6	;volatile
  1523                           
  1524                           ;LAB_5_MASTER.c: 84:     PORTD = 0x00;
  1525  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1526  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1527  03DE  0188               	clrf	8	;volatile
  1528                           
  1529                           ;LAB_5_MASTER.c: 85:     TRISD = 0x00;
  1530  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  1531  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  1532  03E1  0188               	clrf	8	;volatile
  1533                           
  1534                           ;LAB_5_MASTER.c: 86:     PORTA = 0;
  1535  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1536  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1537  03E4  0185               	clrf	5	;volatile
  1538                           
  1539                           ;LAB_5_MASTER.c: 87:     TRISA = 0;
  1540  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  1541  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  1542  03E7  0185               	clrf	5	;volatile
  1543                           
  1544                           ;LAB_5_MASTER.c: 88:     ANSEL = 0;
  1545  03E8  1683               	bsf	3,5	;RP0=1, select bank3
  1546  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  1547  03EA  0188               	clrf	8	;volatile
  1548  03EB  0008               	return
  1549  03EC                     __end_of_config:	
  1550                           
  1551                           	psect	text5
  1552  0444                     __ptext5:	
  1553 ;; *************** function _Lcd_Write_String *****************
  1554 ;; Defined at:
  1555 ;;		line 94 in file "funciones0.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  a               1    wreg     PTR unsigned char 
  1558 ;;		 -> STR_4(5), STR_3(2), STR_2(2), STR_1(13), 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  a               1    4[COMMON] PTR unsigned char 
  1561 ;;		 -> STR_4(5), STR_3(2), STR_2(2), STR_1(13), 
  1562 ;;  n               2    2[COMMON] int 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         3       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         3       0       0       0       0
  1576 ;;Total ram usage:        3 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    1
  1579 ;; This function calls:
  1580 ;;		_Lcd_Write_Char
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _Lcd_Write_String
  1588  0444                     _Lcd_Write_String:	
  1589                           
  1590                           ;incstack = 0
  1591                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1592                           ;Lcd_Write_String@a stored from wreg
  1593  0444  00F4               	movwf	Lcd_Write_String@a
  1594                           
  1595                           ;funciones0.c: 94: void Lcd_Write_String(char *a);funciones0.c: 95: {;funciones0.c: 96: 
      +                              int n;;funciones0.c: 97:     for(n = 0; a[n] != '\0'; n++){
  1596  0445  01F2               	clrf	Lcd_Write_String@n
  1597  0446  01F3               	clrf	Lcd_Write_String@n+1
  1598  0447                     l1217:	
  1599  0447  0872               	movf	Lcd_Write_String@n,w
  1600  0448  0774               	addwf	Lcd_Write_String@a,w
  1601  0449  0084               	movwf	4
  1602  044A  120A  118A  2003  120A  118A  	fcall	stringdir
  1603  044F  3A00               	xorlw	0
  1604  0450  1903               	btfsc	3,2
  1605  0451  0008               	return
  1606                           
  1607                           ;funciones0.c: 98:         Lcd_Write_Char(a[n]);
  1608  0452  0872               	movf	Lcd_Write_String@n,w
  1609  0453  0774               	addwf	Lcd_Write_String@a,w
  1610  0454  0084               	movwf	4
  1611  0455  120A  118A  2003  120A  118A  	fcall	stringdir
  1612  045A  120A  118A  23C4  120A  118A  	fcall	_Lcd_Write_Char
  1613                           
  1614                           ;funciones0.c: 99:     }
  1615  045F  3001               	movlw	1
  1616  0460  07F2               	addwf	Lcd_Write_String@n,f
  1617  0461  1803               	skipnc
  1618  0462  0AF3               	incf	Lcd_Write_String@n+1,f
  1619  0463  3000               	movlw	0
  1620  0464  07F3               	addwf	Lcd_Write_String@n+1,f
  1621  0465  2C47               	goto	l1217
  1622  0466                     __end_of_Lcd_Write_String:	
  1623                           
  1624                           	psect	text6
  1625  03C4                     __ptext6:	
  1626 ;; *************** function _Lcd_Write_Char *****************
  1627 ;; Defined at:
  1628 ;;		line 84 in file "funciones0.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  a               1    wreg     unsigned char 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  a               1    1[COMMON] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       0       0       0       0
  1643 ;;      Locals:         1       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0
  1645 ;;      Totals:         2       0       0       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;;		_Lcd_Write_String
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _Lcd_Write_Char
  1658  03C4                     _Lcd_Write_Char:	
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _Lcd_Write_Char: [wreg]
  1662                           ;Lcd_Write_Char@a stored from wreg
  1663  03C4  00F1               	movwf	Lcd_Write_Char@a
  1664                           
  1665                           ;funciones0.c: 84: void Lcd_Write_Char(char a);funciones0.c: 85: {;funciones0.c: 86:    
      +                           PORTDbits.RD6 = 1;
  1666  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1667  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1668  03C7  1708               	bsf	8,6	;volatile
  1669                           
  1670                           ;funciones0.c: 88:     PORTB = a;
  1671  03C8  0871               	movf	Lcd_Write_Char@a,w
  1672  03C9  0086               	movwf	6	;volatile
  1673                           
  1674                           ;funciones0.c: 89:     PORTDbits.RD7 = 1;
  1675  03CA  1788               	bsf	8,7	;volatile
  1676                           
  1677                           ;funciones0.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1678  03CB  300D               	movlw	13
  1679  03CC  00F0               	movwf	??_Lcd_Write_Char
  1680  03CD                     u607:	
  1681  03CD  0BF0               	decfsz	??_Lcd_Write_Char,f
  1682  03CE  2BCD               	goto	u607
  1683                           
  1684                           ;funciones0.c: 91:     PORTDbits.RD7 = 0;
  1685  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1686  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1687  03D1  1388               	bcf	8,7	;volatile
  1688  03D2  0008               	return
  1689  03D3                     __end_of_Lcd_Write_Char:	
  1690                           
  1691                           	psect	text7
  1692  0407                     __ptext7:	
  1693 ;; *************** function _Lcd_Set_Cursor *****************
  1694 ;; Defined at:
  1695 ;;		line 68 in file "funciones0.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  a               2    4[COMMON] int 
  1698 ;;  b               2    6[COMMON] int 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  d               2    8[COMMON] int 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         4       0       0       0       0
  1711 ;;      Locals:         2       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         6       0       0       0       0
  1714 ;;Total ram usage:        6 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		_Lcd_Cmd
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _Lcd_Set_Cursor
  1726  0407                     _Lcd_Set_Cursor:	
  1727                           
  1728                           ;funciones0.c: 68: void Lcd_Set_Cursor(int a, int b);funciones0.c: 69: {;funciones0.c: 7
      +                          0:  int d;;funciones0.c: 71:  if(a == 1)
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1732  0407  0374               	decf	Lcd_Set_Cursor@a,w
  1733  0408  0475               	iorwf	Lcd_Set_Cursor@a+1,w
  1734  0409  1D03               	btfss	3,2
  1735  040A  2C1B               	goto	l1205
  1736                           
  1737                           ;funciones0.c: 72:  {;funciones0.c: 73:         d = 0x80 + b - 1;
  1738  040B  0876               	movf	Lcd_Set_Cursor@b,w
  1739  040C  3E7F               	addlw	127
  1740  040D                     L17:	
  1741  040D  00F8               	movwf	Lcd_Set_Cursor@d
  1742  040E  0877               	movf	Lcd_Set_Cursor@b+1,w
  1743  040F  1803               	skipnc
  1744  0410  3E01               	addlw	1
  1745  0411  3E00               	addlw	0
  1746  0412  00F9               	movwf	Lcd_Set_Cursor@d+1
  1747                           
  1748                           ;funciones0.c: 74:   Lcd_Cmd(d);
  1749  0413  0879               	movf	Lcd_Set_Cursor@d+1,w
  1750  0414  00F1               	movwf	Lcd_Cmd@a+1
  1751  0415  0878               	movf	Lcd_Set_Cursor@d,w
  1752  0416  00F0               	movwf	Lcd_Cmd@a
  1753  0417  120A  118A  2492   	fcall	_Lcd_Cmd
  1754                           
  1755                           ;funciones0.c: 75:  }
  1756  041A  0008               	return
  1757  041B                     l1205:	
  1758  041B  3002               	movlw	2
  1759  041C  0674               	xorwf	Lcd_Set_Cursor@a,w
  1760  041D  0475               	iorwf	Lcd_Set_Cursor@a+1,w
  1761  041E  1D03               	btfss	3,2
  1762  041F  0008               	return
  1763                           
  1764                           ;funciones0.c: 77:  {;funciones0.c: 78:   d = 0xC0 + b - 1;
  1765  0420  0876               	movf	Lcd_Set_Cursor@b,w
  1766  0421  3EBF               	addlw	191
  1767  0422  2C0D               	goto	L17
  1768  0423                     __end_of_Lcd_Set_Cursor:	
  1769                           
  1770                           	psect	text8
  1771  05B7                     __ptext8:	
  1772 ;; *************** function _Lcd_Init *****************
  1773 ;; Defined at:
  1774 ;;		line 30 in file "funciones0.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          2       0       0       0       0
  1791 ;;      Totals:         2       0       0       0       0
  1792 ;;Total ram usage:        2 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    1
  1795 ;; This function calls:
  1796 ;;		_Lcd_Cmd
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _Lcd_Init
  1804  05B7                     _Lcd_Init:	
  1805                           
  1806                           ;funciones0.c: 31:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1810  05B7  301A               	movlw	26
  1811  05B8  00F5               	movwf	??_Lcd_Init+1
  1812  05B9  30F8               	movlw	248
  1813  05BA  00F4               	movwf	??_Lcd_Init
  1814  05BB                     u617:	
  1815  05BB  0BF4               	decfsz	??_Lcd_Init,f
  1816  05BC  2DBB               	goto	u617
  1817  05BD  0BF5               	decfsz	??_Lcd_Init+1,f
  1818  05BE  2DBB               	goto	u617
  1819  05BF  0000               	nop
  1820                           
  1821                           ;funciones0.c: 32:     Lcd_Cmd(0x30);
  1822  05C0  3030               	movlw	48
  1823  05C1  00F0               	movwf	Lcd_Cmd@a
  1824  05C2  3000               	movlw	0
  1825  05C3  00F1               	movwf	Lcd_Cmd@a+1
  1826  05C4  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1827                           
  1828                           ;funciones0.c: 33:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1829  05C9  3007               	movlw	7
  1830  05CA  00F5               	movwf	??_Lcd_Init+1
  1831  05CB  307D               	movlw	125
  1832  05CC  00F4               	movwf	??_Lcd_Init
  1833  05CD                     u627:	
  1834  05CD  0BF4               	decfsz	??_Lcd_Init,f
  1835  05CE  2DCD               	goto	u627
  1836  05CF  0BF5               	decfsz	??_Lcd_Init+1,f
  1837  05D0  2DCD               	goto	u627
  1838                           
  1839                           ;funciones0.c: 34:     Lcd_Cmd(0x30);
  1840  05D1  3030               	movlw	48
  1841  05D2  00F0               	movwf	Lcd_Cmd@a
  1842  05D3  3000               	movlw	0
  1843  05D4  00F1               	movwf	Lcd_Cmd@a+1
  1844  05D5  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1845                           
  1846                           ;funciones0.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1847  05DA  3021               	movlw	33
  1848  05DB  00F4               	movwf	??_Lcd_Init
  1849  05DC                     u637:	
  1850  05DC  0BF4               	decfsz	??_Lcd_Init,f
  1851  05DD  2DDC               	goto	u637
  1852                           
  1853                           ;funciones0.c: 36:     Lcd_Cmd(0x30);
  1854  05DE  3030               	movlw	48
  1855  05DF  00F0               	movwf	Lcd_Cmd@a
  1856  05E0  3000               	movlw	0
  1857  05E1  00F1               	movwf	Lcd_Cmd@a+1
  1858  05E2  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1859                           
  1860                           ;funciones0.c: 37:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1861  05E7  3021               	movlw	33
  1862  05E8  00F4               	movwf	??_Lcd_Init
  1863  05E9                     u647:	
  1864  05E9  0BF4               	decfsz	??_Lcd_Init,f
  1865  05EA  2DE9               	goto	u647
  1866                           
  1867                           ;funciones0.c: 38:     Lcd_Cmd(0x38);
  1868  05EB  3038               	movlw	56
  1869  05EC  00F0               	movwf	Lcd_Cmd@a
  1870  05ED  3000               	movlw	0
  1871  05EE  00F1               	movwf	Lcd_Cmd@a+1
  1872  05EF  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1873                           
  1874                           ;funciones0.c: 39:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  1875  05F4  3011               	movlw	17
  1876  05F5  00F4               	movwf	??_Lcd_Init
  1877  05F6                     u657:	
  1878  05F6  0BF4               	decfsz	??_Lcd_Init,f
  1879  05F7  2DF6               	goto	u657
  1880  05F8  0000               	nop
  1881                           
  1882                           ;funciones0.c: 40:     Lcd_Cmd(0x08);
  1883  05F9  3008               	movlw	8
  1884  05FA  00F0               	movwf	Lcd_Cmd@a
  1885  05FB  3000               	movlw	0
  1886  05FC  00F1               	movwf	Lcd_Cmd@a+1
  1887  05FD  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1888                           
  1889                           ;funciones0.c: 41:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  1890  0602  3011               	movlw	17
  1891  0603  00F4               	movwf	??_Lcd_Init
  1892  0604                     u667:	
  1893  0604  0BF4               	decfsz	??_Lcd_Init,f
  1894  0605  2E04               	goto	u667
  1895  0606  0000               	nop
  1896                           
  1897                           ;funciones0.c: 42:     Lcd_Cmd(0x01);
  1898  0607  3001               	movlw	1
  1899  0608  00F0               	movwf	Lcd_Cmd@a
  1900  0609  3000               	movlw	0
  1901  060A  00F1               	movwf	Lcd_Cmd@a+1
  1902  060B  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1903                           
  1904                           ;funciones0.c: 43:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1905  0610  3004               	movlw	4
  1906  0611  00F5               	movwf	??_Lcd_Init+1
  1907  0612  30E4               	movlw	228
  1908  0613  00F4               	movwf	??_Lcd_Init
  1909  0614                     u677:	
  1910  0614  0BF4               	decfsz	??_Lcd_Init,f
  1911  0615  2E14               	goto	u677
  1912  0616  0BF5               	decfsz	??_Lcd_Init+1,f
  1913  0617  2E14               	goto	u677
  1914  0618  0000               	nop
  1915                           
  1916                           ;funciones0.c: 44:     Lcd_Cmd(0x06);
  1917  0619  3006               	movlw	6
  1918  061A  00F0               	movwf	Lcd_Cmd@a
  1919  061B  3000               	movlw	0
  1920  061C  00F1               	movwf	Lcd_Cmd@a+1
  1921  061D  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1922                           
  1923                           ;funciones0.c: 45:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  1924  0622  3011               	movlw	17
  1925  0623  00F4               	movwf	??_Lcd_Init
  1926  0624                     u687:	
  1927  0624  0BF4               	decfsz	??_Lcd_Init,f
  1928  0625  2E24               	goto	u687
  1929  0626  0000               	nop
  1930                           
  1931                           ;funciones0.c: 46:     Lcd_Cmd(0x0C);
  1932  0627  300C               	movlw	12
  1933  0628  00F0               	movwf	Lcd_Cmd@a
  1934  0629  3000               	movlw	0
  1935  062A  00F1               	movwf	Lcd_Cmd@a+1
  1936  062B  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1937                           
  1938                           ;funciones0.c: 47:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  1939  0630  3011               	movlw	17
  1940  0631  00F4               	movwf	??_Lcd_Init
  1941  0632                     u697:	
  1942  0632  0BF4               	decfsz	??_Lcd_Init,f
  1943  0633  2E32               	goto	u697
  1944  0634  0000               	nop
  1945  0635  0008               	return
  1946  0636                     __end_of_Lcd_Init:	
  1947                           
  1948                           	psect	text9
  1949  03EC                     __ptext9:	
  1950 ;; *************** function _Lcd_Clear *****************
  1951 ;; Defined at:
  1952 ;;		line 61 in file "funciones0.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          2       0       0       0       0
  1969 ;;      Totals:         2       0       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    1
  1973 ;; This function calls:
  1974 ;;		_Lcd_Cmd
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _Lcd_Clear
  1982  03EC                     _Lcd_Clear:	
  1983                           
  1984                           ;funciones0.c: 63:     Lcd_Cmd(0x00);
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1988  03EC  3000               	movlw	0
  1989  03ED  00F0               	movwf	Lcd_Cmd@a
  1990  03EE  00F1               	movwf	Lcd_Cmd@a+1
  1991  03EF  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1992                           
  1993                           ;funciones0.c: 64:     Lcd_Cmd(0x01);
  1994  03F4  3001               	movlw	1
  1995  03F5  00F0               	movwf	Lcd_Cmd@a
  1996  03F6  3000               	movlw	0
  1997  03F7  00F1               	movwf	Lcd_Cmd@a+1
  1998  03F8  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1999                           
  2000                           ;funciones0.c: 65:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2001  03FD  3006               	movlw	6
  2002  03FE  00F5               	movwf	??_Lcd_Clear+1
  2003  03FF  3030               	movlw	48
  2004  0400  00F4               	movwf	??_Lcd_Clear
  2005  0401                     u707:	
  2006  0401  0BF4               	decfsz	??_Lcd_Clear,f
  2007  0402  2C01               	goto	u707
  2008  0403  0BF5               	decfsz	??_Lcd_Clear+1,f
  2009  0404  2C01               	goto	u707
  2010  0405  0000               	nop
  2011  0406  0008               	return
  2012  0407                     __end_of_Lcd_Clear:	
  2013                           
  2014                           	psect	text10
  2015  0492                     __ptext10:	
  2016 ;; *************** function _Lcd_Cmd *****************
  2017 ;; Defined at:
  2018 ;;		line 50 in file "funciones0.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  a               2    0[COMMON] int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         2       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          2       0       0       0       0
  2035 ;;      Totals:         4       0       0       0       0
  2036 ;;Total ram usage:        4 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_Lcd_Init
  2042 ;;		_Lcd_Clear
  2043 ;;		_Lcd_Set_Cursor
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _Lcd_Cmd
  2049  0492                     _Lcd_Cmd:	
  2050                           
  2051                           ;funciones0.c: 51:  PORTDbits.RD6 = 0;
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _Lcd_Cmd: [wreg]
  2055  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0494  1308               	bcf	8,6	;volatile
  2058                           
  2059                           ;funciones0.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2060  0495  3007               	movlw	7
  2061  0496  00F3               	movwf	??_Lcd_Cmd+1
  2062  0497  307D               	movlw	125
  2063  0498  00F2               	movwf	??_Lcd_Cmd
  2064  0499                     u717:	
  2065  0499  0BF2               	decfsz	??_Lcd_Cmd,f
  2066  049A  2C99               	goto	u717
  2067  049B  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2068  049C  2C99               	goto	u717
  2069                           
  2070                           ;funciones0.c: 53:     PORTDbits.RD7 = 1;
  2071  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2072  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2073  049F  1788               	bsf	8,7	;volatile
  2074                           
  2075                           ;funciones0.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2076  04A0  3007               	movlw	7
  2077  04A1  00F3               	movwf	??_Lcd_Cmd+1
  2078  04A2  307D               	movlw	125
  2079  04A3  00F2               	movwf	??_Lcd_Cmd
  2080  04A4                     u727:	
  2081  04A4  0BF2               	decfsz	??_Lcd_Cmd,f
  2082  04A5  2CA4               	goto	u727
  2083  04A6  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2084  04A7  2CA4               	goto	u727
  2085                           
  2086                           ;funciones0.c: 55:  PORTB = a;
  2087  04A8  0870               	movf	Lcd_Cmd@a,w
  2088  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2089  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2090  04AB  0086               	movwf	6	;volatile
  2091                           
  2092                           ;funciones0.c: 56:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2093  04AC  3007               	movlw	7
  2094  04AD  00F3               	movwf	??_Lcd_Cmd+1
  2095  04AE  307D               	movlw	125
  2096  04AF  00F2               	movwf	??_Lcd_Cmd
  2097  04B0                     u737:	
  2098  04B0  0BF2               	decfsz	??_Lcd_Cmd,f
  2099  04B1  2CB0               	goto	u737
  2100  04B2  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2101  04B3  2CB0               	goto	u737
  2102                           
  2103                           ;funciones0.c: 57:     PORTDbits.RD7 = 0;
  2104  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2105  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2106  04B6  1388               	bcf	8,7	;volatile
  2107                           
  2108                           ;funciones0.c: 58:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2109  04B7  3007               	movlw	7
  2110  04B8  00F3               	movwf	??_Lcd_Cmd+1
  2111  04B9  307D               	movlw	125
  2112  04BA  00F2               	movwf	??_Lcd_Cmd
  2113  04BB                     u747:	
  2114  04BB  0BF2               	decfsz	??_Lcd_Cmd,f
  2115  04BC  2CBB               	goto	u747
  2116  04BD  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2117  04BE  2CBB               	goto	u747
  2118  04BF  0008               	return
  2119  04C0                     __end_of_Lcd_Cmd:	
  2120                           
  2121                           	psect	text11
  2122  03AB                     __ptext11:	
  2123 ;; *************** function _I2C_Master_Write *****************
  2124 ;; Defined at:
  2125 ;;		line 151 in file "funciones0.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  d               2    0[COMMON] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         2       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    1
  2146 ;; This function calls:
  2147 ;;		_I2C_Master_Wait
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _I2C_Master_Write
  2155  03AB                     _I2C_Master_Write:	
  2156                           
  2157                           ;funciones0.c: 151: void I2C_Master_Write(unsigned d);funciones0.c: 152: {;funciones0.c:
      +                           153:     I2C_Master_Wait();
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2161  03AB  120A  118A  23BB   	fcall	_I2C_Master_Wait
  2162                           
  2163                           ;funciones0.c: 154:     SSPBUF = d;
  2164  03AE  0870               	movf	I2C_Master_Write@d,w
  2165  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2166  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2167  03B1  0093               	movwf	19	;volatile
  2168  03B2  0008               	return
  2169  03B3                     __end_of_I2C_Master_Write:	
  2170                           
  2171                           	psect	text12
  2172  03A4                     __ptext12:	
  2173 ;; *************** function _I2C_Master_Stop *****************
  2174 ;; Defined at:
  2175 ;;		line 141 in file "funciones0.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		_I2C_Master_Wait
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _I2C_Master_Stop
  2205  03A4                     _I2C_Master_Stop:	
  2206                           
  2207                           ;funciones0.c: 143:     I2C_Master_Wait();
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2211  03A4  120A  118A  23BB   	fcall	_I2C_Master_Wait
  2212                           
  2213                           ;funciones0.c: 144:     SSPCON2bits.PEN = 1;
  2214  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2215  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2216  03A9  1511               	bsf	17,2	;volatile
  2217  03AA  0008               	return
  2218  03AB                     __end_of_I2C_Master_Stop:	
  2219                           
  2220                           	psect	text13
  2221  039D                     __ptext13:	
  2222 ;; *************** function _I2C_Master_Start *****************
  2223 ;; Defined at:
  2224 ;;		line 125 in file "funciones0.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    1
  2245 ;; This function calls:
  2246 ;;		_I2C_Master_Wait
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _I2C_Master_Start
  2254  039D                     _I2C_Master_Start:	
  2255                           
  2256                           ;funciones0.c: 127:     I2C_Master_Wait();
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2260  039D  120A  118A  23BB   	fcall	_I2C_Master_Wait
  2261                           
  2262                           ;funciones0.c: 128:     SSPCON2bits.SEN = 1;
  2263  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2264  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2265  03A2  1411               	bsf	17,0	;volatile
  2266  03A3  0008               	return
  2267  03A4                     __end_of_I2C_Master_Start:	
  2268                           
  2269                           	psect	text14
  2270  0466                     __ptext14:	
  2271 ;; *************** function _I2C_Master_Read *****************
  2272 ;; Defined at:
  2273 ;;		line 160 in file "funciones0.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  a               2    0[COMMON] unsigned int 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  temp            2    4[COMMON] unsigned short 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2    0[COMMON] unsigned int 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         2       0       0       0       0
  2288 ;;      Locals:         2       0       0       0       0
  2289 ;;      Temps:          2       0       0       0       0
  2290 ;;      Totals:         6       0       0       0       0
  2291 ;;Total ram usage:        6 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    1
  2294 ;; This function calls:
  2295 ;;		_I2C_Master_Wait
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _I2C_Master_Read
  2303  0466                     _I2C_Master_Read:	
  2304                           
  2305                           ;funciones0.c: 160: unsigned int I2C_Master_Read(unsigned int a);funciones0.c: 161: {;fu
      +                          nciones0.c: 162:     unsigned short temp;;funciones0.c: 163:     I2C_Master_Wait();
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2309  0466  120A  118A  23BB  120A  118A  	fcall	_I2C_Master_Wait
  2310                           
  2311                           ;funciones0.c: 164:     SSPCON2bits.RCEN = 1;
  2312  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2313  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2314  046D  1591               	bsf	17,3	;volatile
  2315                           
  2316                           ;funciones0.c: 165:     I2C_Master_Wait();
  2317  046E  120A  118A  23BB  120A  118A  	fcall	_I2C_Master_Wait
  2318                           
  2319                           ;funciones0.c: 166:     temp = SSPBUF;
  2320  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0475  0813               	movf	19,w	;volatile
  2323  0476  00F2               	movwf	??_I2C_Master_Read
  2324  0477  01F3               	clrf	??_I2C_Master_Read+1
  2325  0478  0872               	movf	??_I2C_Master_Read,w
  2326  0479  00F4               	movwf	I2C_Master_Read@temp
  2327  047A  0873               	movf	??_I2C_Master_Read+1,w
  2328  047B  00F5               	movwf	I2C_Master_Read@temp+1
  2329                           
  2330                           ;funciones0.c: 167:     I2C_Master_Wait();
  2331  047C  120A  118A  23BB  120A  118A  	fcall	_I2C_Master_Wait
  2332                           
  2333                           ;funciones0.c: 168:     if(a == 1){
  2334  0481  0370               	decf	I2C_Master_Read@a,w
  2335  0482  0471               	iorwf	I2C_Master_Read@a+1,w
  2336  0483  1D03               	btfss	3,2
  2337  0484  2C89               	goto	l145
  2338                           
  2339                           ;funciones0.c: 169:         SSPCON2bits.ACKDT = 0;
  2340  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0487  1291               	bcf	17,5	;volatile
  2343                           
  2344                           ;funciones0.c: 170:     }else{
  2345  0488  2C8C               	goto	l146
  2346  0489                     l145:	
  2347                           
  2348                           ;funciones0.c: 171:         SSPCON2bits.ACKDT = 1;
  2349  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2350  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2351  048B  1691               	bsf	17,5	;volatile
  2352  048C                     l146:	
  2353                           ;funciones0.c: 172:     }
  2354                           
  2355                           
  2356                           ;funciones0.c: 173:     SSPCON2bits.ACKEN = 1;
  2357  048C  1611               	bsf	17,4	;volatile
  2358                           
  2359                           ;funciones0.c: 174:     return temp;
  2360  048D  0875               	movf	I2C_Master_Read@temp+1,w
  2361  048E  00F1               	movwf	?_I2C_Master_Read+1
  2362  048F  0874               	movf	I2C_Master_Read@temp,w
  2363  0490  00F0               	movwf	?_I2C_Master_Read
  2364  0491  0008               	return
  2365  0492                     __end_of_I2C_Master_Read:	
  2366                           
  2367                           	psect	text15
  2368  03BB                     __ptext15:	
  2369 ;; *************** function _I2C_Master_Wait *****************
  2370 ;; Defined at:
  2371 ;;		line 118 in file "funciones0.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_I2C_Master_Start
  2395 ;;		_I2C_Master_Stop
  2396 ;;		_I2C_Master_Write
  2397 ;;		_I2C_Master_Read
  2398 ;;		_I2C_Master_RepeatedStart
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function _I2C_Master_Wait
  2404  03BB                     _I2C_Master_Wait:	
  2405  03BB                     l127:	
  2406                           ;funciones0.c: 120:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2410                           
  2411  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2412  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2413  03BD  1914               	btfsc	20,2	;volatile
  2414  03BE  2BBB               	goto	l127
  2415  03BF  0811               	movf	17,w	;volatile
  2416  03C0  391F               	andlw	31
  2417  03C1  1903               	btfsc	3,2
  2418  03C2  0008               	return
  2419  03C3  2BBB               	goto	l127
  2420  03C4                     __end_of_I2C_Master_Wait:	
  2421                           
  2422                           	psect	text16
  2423  04C0                     __ptext16:	
  2424 ;; *************** function _I2C_Master_Init *****************
  2425 ;; Defined at:
  2426 ;;		line 102 in file "funciones0.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  c               4    0[BANK0 ] const unsigned long 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       4       0       0       0
  2441 ;;      Locals:         0       0       0       0       0
  2442 ;;      Temps:          0       4       0       0       0
  2443 ;;      Totals:         0       8       0       0       0
  2444 ;;Total ram usage:        8 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    1
  2447 ;; This function calls:
  2448 ;;		___lldiv
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _I2C_Master_Init
  2456  04C0                     _I2C_Master_Init:	
  2457                           
  2458                           ;funciones0.c: 102: void I2C_Master_Init(const unsigned long c);funciones0.c: 103: {;fun
      +                          ciones0.c: 104:     SSPCON = 0b00101000;
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2462  04C0  3028               	movlw	40
  2463  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2464  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2465  04C3  0094               	movwf	20	;volatile
  2466                           
  2467                           ;funciones0.c: 105:     SSPCON2 = 0;
  2468  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2469  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2470  04C6  0191               	clrf	17	;volatile
  2471                           
  2472                           ;funciones0.c: 106:     SSPADD = (4000000/(4*c))-1;
  2473  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2474  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2475  04C9  0830               	movf	I2C_Master_Init@c,w
  2476  04CA  00B4               	movwf	??_I2C_Master_Init
  2477  04CB  0831               	movf	I2C_Master_Init@c+1,w
  2478  04CC  00B5               	movwf	??_I2C_Master_Init+1
  2479  04CD  0832               	movf	I2C_Master_Init@c+2,w
  2480  04CE  00B6               	movwf	??_I2C_Master_Init+2
  2481  04CF  0833               	movf	I2C_Master_Init@c+3,w
  2482  04D0  00B7               	movwf	??_I2C_Master_Init+3
  2483  04D1  3002               	movlw	2
  2484  04D2                     u405:	
  2485  04D2  1003               	clrc
  2486  04D3  0DB4               	rlf	??_I2C_Master_Init,f
  2487  04D4  0DB5               	rlf	??_I2C_Master_Init+1,f
  2488  04D5  0DB6               	rlf	??_I2C_Master_Init+2,f
  2489  04D6  0DB7               	rlf	??_I2C_Master_Init+3,f
  2490  04D7  3EFF               	addlw	-1
  2491  04D8  1D03               	skipz
  2492  04D9  2CD2               	goto	u405
  2493  04DA  0837               	movf	??_I2C_Master_Init+3,w
  2494  04DB  00F3               	movwf	___lldiv@divisor+3
  2495  04DC  0836               	movf	??_I2C_Master_Init+2,w
  2496  04DD  00F2               	movwf	___lldiv@divisor+2
  2497  04DE  0835               	movf	??_I2C_Master_Init+1,w
  2498  04DF  00F1               	movwf	___lldiv@divisor+1
  2499  04E0  0834               	movf	??_I2C_Master_Init,w
  2500  04E1  00F0               	movwf	___lldiv@divisor
  2501  04E2  3000               	movlw	0
  2502  04E3  00F7               	movwf	___lldiv@dividend+3
  2503  04E4  303D               	movlw	61
  2504  04E5  00F6               	movwf	___lldiv@dividend+2
  2505  04E6  3009               	movlw	9
  2506  04E7  00F5               	movwf	___lldiv@dividend+1
  2507  04E8  3000               	movlw	0
  2508  04E9  00F4               	movwf	___lldiv@dividend
  2509  04EA  120A  118A  24F6   	fcall	___lldiv
  2510  04ED  0870               	movf	?___lldiv,w
  2511  04EE  3EFF               	addlw	255
  2512  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2513  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2514  04F1  0093               	movwf	19	;volatile
  2515                           
  2516                           ;funciones0.c: 107:     SSPSTAT = 0;
  2517  04F2  0194               	clrf	20	;volatile
  2518                           
  2519                           ;funciones0.c: 108:     TRISCbits.TRISC3 = 1;
  2520  04F3  1587               	bsf	7,3	;volatile
  2521                           
  2522                           ;funciones0.c: 109:     TRISCbits.TRISC4 = 1;
  2523  04F4  1607               	bsf	7,4	;volatile
  2524  04F5  0008               	return
  2525  04F6                     __end_of_I2C_Master_Init:	
  2526                           
  2527                           	psect	text17
  2528  04F6                     __ptext17:	
  2529 ;; *************** function ___lldiv *****************
  2530 ;; Defined at:
  2531 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  divisor         4    0[COMMON] unsigned long 
  2534 ;;  dividend        4    4[COMMON] unsigned long 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  quotient        4    9[COMMON] unsigned long 
  2537 ;;  counter         1   13[COMMON] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  4    0[COMMON] unsigned long 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2547 ;;      Params:         8       0       0       0       0
  2548 ;;      Locals:         5       0       0       0       0
  2549 ;;      Temps:          1       0       0       0       0
  2550 ;;      Totals:        14       0       0       0       0
  2551 ;;Total ram usage:       14 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_I2C_Master_Init
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function ___lldiv
  2562  04F6                     ___lldiv:	
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2566  04F6  3000               	movlw	0
  2567  04F7  00FC               	movwf	___lldiv@quotient+3
  2568  04F8  3000               	movlw	0
  2569  04F9  00FB               	movwf	___lldiv@quotient+2
  2570  04FA  3000               	movlw	0
  2571  04FB  00FA               	movwf	___lldiv@quotient+1
  2572  04FC  3000               	movlw	0
  2573  04FD  00F9               	movwf	___lldiv@quotient
  2574  04FE  0873               	movf	___lldiv@divisor+3,w
  2575  04FF  0472               	iorwf	___lldiv@divisor+2,w
  2576  0500  0471               	iorwf	___lldiv@divisor+1,w
  2577  0501  0470               	iorwf	___lldiv@divisor,w
  2578  0502  1903               	skipnz
  2579  0503  2D4B               	goto	l1165
  2580  0504  01FD               	clrf	___lldiv@counter
  2581  0505  0AFD               	incf	___lldiv@counter,f
  2582  0506                     l1151:	
  2583  0506  1BF3               	btfsc	___lldiv@divisor+3,7
  2584  0507  2D16               	goto	l1153
  2585  0508  3001               	movlw	1
  2586  0509  00F8               	movwf	??___lldiv
  2587  050A                     u315:	
  2588  050A  1003               	clrc
  2589  050B  0DF0               	rlf	___lldiv@divisor,f
  2590  050C  0DF1               	rlf	___lldiv@divisor+1,f
  2591  050D  0DF2               	rlf	___lldiv@divisor+2,f
  2592  050E  0DF3               	rlf	___lldiv@divisor+3,f
  2593  050F  0BF8               	decfsz	??___lldiv,f
  2594  0510  2D0A               	goto	u315
  2595  0511  3001               	movlw	1
  2596  0512  00F8               	movwf	??___lldiv
  2597  0513  0878               	movf	??___lldiv,w
  2598  0514  07FD               	addwf	___lldiv@counter,f
  2599  0515  2D06               	goto	l1151
  2600  0516                     l1153:	
  2601  0516  3001               	movlw	1
  2602  0517  00F8               	movwf	??___lldiv
  2603  0518                     u335:	
  2604  0518  1003               	clrc
  2605  0519  0DF9               	rlf	___lldiv@quotient,f
  2606  051A  0DFA               	rlf	___lldiv@quotient+1,f
  2607  051B  0DFB               	rlf	___lldiv@quotient+2,f
  2608  051C  0DFC               	rlf	___lldiv@quotient+3,f
  2609  051D  0BF8               	decfsz	??___lldiv,f
  2610  051E  2D18               	goto	u335
  2611  051F  0873               	movf	___lldiv@divisor+3,w
  2612  0520  0277               	subwf	___lldiv@dividend+3,w
  2613  0521  1D03               	skipz
  2614  0522  2D2D               	goto	u345
  2615  0523  0872               	movf	___lldiv@divisor+2,w
  2616  0524  0276               	subwf	___lldiv@dividend+2,w
  2617  0525  1D03               	skipz
  2618  0526  2D2D               	goto	u345
  2619  0527  0871               	movf	___lldiv@divisor+1,w
  2620  0528  0275               	subwf	___lldiv@dividend+1,w
  2621  0529  1D03               	skipz
  2622  052A  2D2D               	goto	u345
  2623  052B  0870               	movf	___lldiv@divisor,w
  2624  052C  0274               	subwf	___lldiv@dividend,w
  2625  052D                     u345:	
  2626  052D  1C03               	skipc
  2627  052E  2D3E               	goto	l1161
  2628  052F  0870               	movf	___lldiv@divisor,w
  2629  0530  02F4               	subwf	___lldiv@dividend,f
  2630  0531  0871               	movf	___lldiv@divisor+1,w
  2631  0532  1C03               	skipc
  2632  0533  0F71               	incfsz	___lldiv@divisor+1,w
  2633  0534  02F5               	subwf	___lldiv@dividend+1,f
  2634  0535  0872               	movf	___lldiv@divisor+2,w
  2635  0536  1C03               	skipc
  2636  0537  0F72               	incfsz	___lldiv@divisor+2,w
  2637  0538  02F6               	subwf	___lldiv@dividend+2,f
  2638  0539  0873               	movf	___lldiv@divisor+3,w
  2639  053A  1C03               	skipc
  2640  053B  0F73               	incfsz	___lldiv@divisor+3,w
  2641  053C  02F7               	subwf	___lldiv@dividend+3,f
  2642  053D  1479               	bsf	___lldiv@quotient,0
  2643  053E                     l1161:	
  2644  053E  3001               	movlw	1
  2645  053F                     u355:	
  2646  053F  1003               	clrc
  2647  0540  0CF3               	rrf	___lldiv@divisor+3,f
  2648  0541  0CF2               	rrf	___lldiv@divisor+2,f
  2649  0542  0CF1               	rrf	___lldiv@divisor+1,f
  2650  0543  0CF0               	rrf	___lldiv@divisor,f
  2651  0544  3EFF               	addlw	-1
  2652  0545  1D03               	skipz
  2653  0546  2D3F               	goto	u355
  2654  0547  3001               	movlw	1
  2655  0548  02FD               	subwf	___lldiv@counter,f
  2656  0549  1D03               	btfss	3,2
  2657  054A  2D16               	goto	l1153
  2658  054B                     l1165:	
  2659  054B  087C               	movf	___lldiv@quotient+3,w
  2660  054C  00F3               	movwf	?___lldiv+3
  2661  054D  087B               	movf	___lldiv@quotient+2,w
  2662  054E  00F2               	movwf	?___lldiv+2
  2663  054F  087A               	movf	___lldiv@quotient+1,w
  2664  0550  00F1               	movwf	?___lldiv+1
  2665  0551  0879               	movf	___lldiv@quotient,w
  2666  0552  00F0               	movwf	?___lldiv
  2667  0553  0008               	return
  2668  0554                     __end_of___lldiv:	
  2669  007E                     btemp	set	126	;btemp
  2670  007E                     wtemp0	set	126


Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(COMMON[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[13]), 

    sp__mapear	PTR unsigned int  size(1) Largest target is 6
		 -> mapear@resultado(BANK0[6]), 

    valor1	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), mapear@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _mapear->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_mapear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6312
                                              9 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             _config
                             _mapear
                       _uint_to_char
 ---------------------------------------------------------------------------------
 (1) _uint_to_char                                         4     4      0      62
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _mapear                                              15    13      2    1657
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     244
                                              2 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     2      4    1676
                                              4 COMMON     6     2      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     934
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            2     2      0     934
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              4     2      2     934
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
   _mapear
     ___wmul
   _uint_to_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 22 15:29:55 2020

                        pc 0002                __CFG_CP$OFF 0000            mapear@resultado 0031  
                       fsr 0004        ___wmul@multiplicand 0072                        l127 03BB  
                      l145 0489                        l146 048C                        l277 042D  
                      _GIE 005F                        u315 050A                        u420 063D  
                      u405 04D2                        u335 0518                        u345 052D  
             __CFG_CPD$OFF 0000                        u355 053F                        u275 042E  
                      u435 0664                        u285 0435                        u445 0692  
                      u607 03CD                        u455 06C0                        u617 05BB  
                      u707 0401                        u627 05CD                        u717 0499  
                      u637 05DC                        u727 04A4                        u647 05E9  
                      u737 04B0                        u657 05F6                        u577 072C  
                      u747 04BB                        u667 0604                        u587 0757  
                      u677 0614                        u597 0792                        u687 0624  
                      u697 0632               _uint_to_char 0554                        fsr0 0004  
                      indf 0000               __CFG_LVP$OFF 0000                       l1205 041B  
                     l1133 0425                       l1301 0566                       l1151 0506  
                     l1311 0570                       l1303 0568                       l1161 053E  
                     l1153 0516                       l1217 0447                       l1313 0572  
                     l1305 056A                       l1321 05B5                       l1315 0574  
                     l1307 056C                       l1165 054B                       l1317 0576  
                     l1309 056E                       l1341 0705                       l1271 0689  
                     l1319 057B                       l1273 06A4                       l1265 065B  
                     l1267 0676                       l1291 055C                       l1277 06B7  
                     l1293 055E                       l1285 0556                       l1279 06D2  
                     l1295 0560                       l1287 0558                       l1297 0562  
                     l1289 055A                       l1299 0564                       l1469 0583  
                     STR_1 0009                       STR_2 001B                       STR_3 001D  
                     STR_4 0016                       _PEIE 005E               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0070                       _main 06D4                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0072              __CFG_IESO$OFF 0000  
          __end_of_Lcd_Cmd 04C0           ?_I2C_Master_Init 0030           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
            __CFG_WDTE$OFF 0000         uint_to_char@numChr 0073                      _ANSEL 0188  
          __end_of___lldiv 0554         uint_to_char@numero 0072                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001C  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
              mapear@F1362 0020             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E                mapear@valor 0030  
         __end_of_Lcd_Init 0636             __CFG_MCLRE$OFF 0000            __initialization 07F5  
             __end_of_main 07F5                     ??_main 0039         __size_of_Lcd_Clear 001B  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     _ANSELH 0189                  ??_Lcd_Cmd 0072  
  __size_of_Lcd_Write_Char 000F                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C         uint_to_array@F1354 0026                     _SSPCON 0014  
                   _SSPBUF 0013             __CFG_PWRTE$OFF 0000                     ___wmul 0423  
                ??___lldiv 0078                     _config 03D3                     _mapear 0636  
                   _valor1 002C            Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0076  
          Lcd_Set_Cursor@d 0078               mapear@limSup 0077    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0407             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0407  
                ?_Lcd_Init 0070                 __pbssBANK0 0020                 __pmaintext 06D4  
                  ?___wmul 0070                    ?_config 0070                    ?_mapear 0076  
__size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 0423                 ??_Lcd_Init 0074  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 03C4                    _Lcd_Cmd 0492                    ___lldiv 04F6  
          __size_of___wmul 0021            __size_of_config 0019            __size_of_mapear 009E  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0554                    __ptext2 0636  
                  __ptext3 0423                    __ptext4 03D3                    __ptext5 0444  
                  __ptext6 03C4                    __ptext7 0407                    __ptext8 05B7  
                  __ptext9 03EC   __size_of_I2C_Master_Init 0036   __size_of_I2C_Master_Read 002C  
 __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007                    clrloop0 03B4  
   __end_of_Lcd_Write_Char 03D3       end_of_initialization 07FC  __size_of_I2C_Master_Start 0007  
__size_of_I2C_Master_Write 0008            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0030           I2C_Master_Read@a 0070                  _PORTDbits 0008  
            mapear@limReal 0076                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0074          Lcd_Write_String@n 0072                  _Lcd_Clear 03EC  
           __end_of___wmul 0444           _Lcd_Write_String 0444             __end_of_config 03EC  
           __end_of_mapear 06D4              ?_uint_to_char 0070        start_initialization 07F5  
        __size_of_Lcd_Init 007F          ??_I2C_Master_Init 0034          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ?_Lcd_Clear 0070                   ??___wmul 0074                   ??_config 0070  
                 ??_mapear 0078            Lcd_Write_Char@a 0071             ??_uint_to_char 0070  
                ___latbits 0002              __pcstackBANK0 0030                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 039D           _I2C_Master_Write 03AB           ??_Lcd_Set_Cursor 0078  
                 ?___lldiv 0070                  __pstrings 0003                  _contador1 002F  
           ___wmul@product 0074                  clear_ram0 03B3                   Lcd_Cmd@a 0070  
              ??_Lcd_Clear 0074                  _valor_adc 002E                __stringbase 0008  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0070                   _Lcd_Init 05B7  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0466           __size_of_Lcd_Cmd 002E  
     __end_of_uint_to_char 05B7           __size_of___lldiv 005E         __end_of__stringtab 0009  
          _I2C_Master_Init 04C0            _I2C_Master_Read 0466            _I2C_Master_Wait 03BB  
          _I2C_Master_Stop 03A4                   __ptext10 0492                   __ptext11 03AB  
                 __ptext12 03A4                   __ptext13 039D                   __ptext14 0466  
                 __ptext15 03BB                   __ptext16 04C0                   __ptext17 04F6  
        __CFG_BOR4V$BOR40V 0000                   _contador 002D              __size_of_main 0121  
 __end_of_I2C_Master_Start 03A4   __end_of_I2C_Master_Write 03B3           ___lldiv@dividend 0074  
                stringcode 0003    __end_of_I2C_Master_Init 04F6    __end_of_I2C_Master_Read 0492  
  __end_of_I2C_Master_Wait 03C4    __end_of_I2C_Master_Stop 03AB            mapear@dividendo 0037  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070                   stringdir 0003  
                 stringtab 0003                _SSPCON2bits 0091      __size_of_uint_to_char 0063  
