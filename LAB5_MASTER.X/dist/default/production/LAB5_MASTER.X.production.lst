

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 23 22:40:15 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321                           
   322                           	psect	strings
   323  0003                     __pstrings:	
   324  0003                     stringtab:	
   325  0003                     __stringtab:	
   326                           
   327                           ;	String table - string pointers are 1 byte each
   328  0003  1BFF               	btfsc	btemp+1,7
   329  0004  280D               	ljmp	stringcode
   330  0005  1383               	bcf	3,7
   331  0006  187F               	btfsc	btemp+1,0
   332  0007  1783               	bsf	3,7
   333  0008  0800               	movf	0,w
   334  0009  0A84               	incf	4,f
   335  000A  1903               	skipnz
   336  000B  0AFF               	incf	btemp+1,f
   337  000C  0008               	return
   338  000D                     stringcode:	
   339  000D                     stringdir:	
   340  000D  3000               	movlw	high stringdir
   341  000E  008A               	movwf	10
   342  000F  0804               	movf	4,w
   343  0010  0A84               	incf	4,f
   344  0011  0782               	addwf	2,f
   345  0012                     __stringbase:	
   346  0012  3400               	retlw	0
   347  0013                     __end_of__stringtab:	
   348  0013                     __powers_:	
   349  0013  3400               	retlw	0
   350  0014  3400               	retlw	0
   351  0015  3480               	retlw	128
   352  0016  343F               	retlw	63
   353  0017  3400               	retlw	0
   354  0018  3400               	retlw	0
   355  0019  3420               	retlw	32
   356  001A  3441               	retlw	65
   357  001B  3400               	retlw	0
   358  001C  3400               	retlw	0
   359  001D  34C8               	retlw	200
   360  001E  3442               	retlw	66
   361  001F  3400               	retlw	0
   362  0020  3400               	retlw	0
   363  0021  347A               	retlw	122
   364  0022  3444               	retlw	68
   365  0023  3400               	retlw	0
   366  0024  3440               	retlw	64
   367  0025  341C               	retlw	28
   368  0026  3446               	retlw	70
   369  0027  3400               	retlw	0
   370  0028  3450               	retlw	80
   371  0029  34C3               	retlw	195
   372  002A  3447               	retlw	71
   373  002B  3400               	retlw	0
   374  002C  3424               	retlw	36
   375  002D  3474               	retlw	116
   376  002E  3449               	retlw	73
   377  002F  3480               	retlw	128
   378  0030  3496               	retlw	150
   379  0031  3418               	retlw	24
   380  0032  344B               	retlw	75
   381  0033  3420               	retlw	32
   382  0034  34BC               	retlw	188
   383  0035  34BE               	retlw	190
   384  0036  344C               	retlw	76
   385  0037  3428               	retlw	40
   386  0038  346B               	retlw	107
   387  0039  346E               	retlw	110
   388  003A  344E               	retlw	78
   389  003B  34F9               	retlw	249
   390  003C  3402               	retlw	2
   391  003D  3415               	retlw	21
   392  003E  3450               	retlw	80
   393  003F  34EC               	retlw	236
   394  0040  3478               	retlw	120
   395  0041  34AD               	retlw	173
   396  0042  3460               	retlw	96
   397  0043  34CA               	retlw	202
   398  0044  34F2               	retlw	242
   399  0045  3449               	retlw	73
   400  0046  3471               	retlw	113
   401  0047                     __end_of__powers_:	
   402  0047                     __npowers_:	
   403  0047  3400               	retlw	0
   404  0048  3400               	retlw	0
   405  0049  3480               	retlw	128
   406  004A  343F               	retlw	63
   407  004B  34CD               	retlw	205
   408  004C  34CC               	retlw	204
   409  004D  34CC               	retlw	204
   410  004E  343D               	retlw	61
   411  004F  340A               	retlw	10
   412  0050  34D7               	retlw	215
   413  0051  3423               	retlw	35
   414  0052  343C               	retlw	60
   415  0053  346F               	retlw	111
   416  0054  3412               	retlw	18
   417  0055  3483               	retlw	131
   418  0056  343A               	retlw	58
   419  0057  3417               	retlw	23
   420  0058  34B7               	retlw	183
   421  0059  34D1               	retlw	209
   422  005A  3438               	retlw	56
   423  005B  34AC               	retlw	172
   424  005C  34C5               	retlw	197
   425  005D  3427               	retlw	39
   426  005E  3437               	retlw	55
   427  005F  34BD               	retlw	189
   428  0060  3437               	retlw	55
   429  0061  3486               	retlw	134
   430  0062  3435               	retlw	53
   431  0063  3495               	retlw	149
   432  0064  34BF               	retlw	191
   433  0065  34D6               	retlw	214
   434  0066  3433               	retlw	51
   435  0067  3477               	retlw	119
   436  0068  34CC               	retlw	204
   437  0069  342B               	retlw	43
   438  006A  3432               	retlw	50
   439  006B  345F               	retlw	95
   440  006C  3470               	retlw	112
   441  006D  3489               	retlw	137
   442  006E  3430               	retlw	48
   443  006F  34FF               	retlw	255
   444  0070  34E6               	retlw	230
   445  0071  34DB               	retlw	219
   446  0072  342E               	retlw	46
   447  0073  3408               	retlw	8
   448  0074  34E5               	retlw	229
   449  0075  343C               	retlw	60
   450  0076  341E               	retlw	30
   451  0077  3460               	retlw	96
   452  0078  3442               	retlw	66
   453  0079  34A2               	retlw	162
   454  007A  340D               	retlw	13
   455  007B                     __end_of__npowers_:	
   456  007B                     _dpowers:	
   457  007B  3401               	retlw	1
   458  007C  3400               	retlw	0
   459  007D  3400               	retlw	0
   460  007E  3400               	retlw	0
   461  007F  340A               	retlw	10
   462  0080  3400               	retlw	0
   463  0081  3400               	retlw	0
   464  0082  3400               	retlw	0
   465  0083  3464               	retlw	100
   466  0084  3400               	retlw	0
   467  0085  3400               	retlw	0
   468  0086  3400               	retlw	0
   469  0087  34E8               	retlw	232
   470  0088  3403               	retlw	3
   471  0089  3400               	retlw	0
   472  008A  3400               	retlw	0
   473  008B  3410               	retlw	16
   474  008C  3427               	retlw	39
   475  008D  3400               	retlw	0
   476  008E  3400               	retlw	0
   477  008F  34A0               	retlw	160
   478  0090  3486               	retlw	134
   479  0091  3401               	retlw	1
   480  0092  3400               	retlw	0
   481  0093  3440               	retlw	64
   482  0094  3442               	retlw	66
   483  0095  340F               	retlw	15
   484  0096  3400               	retlw	0
   485  0097  3480               	retlw	128
   486  0098  3496               	retlw	150
   487  0099  3498               	retlw	152
   488  009A  3400               	retlw	0
   489  009B  3400               	retlw	0
   490  009C  34E1               	retlw	225
   491  009D  34F5               	retlw	245
   492  009E  3405               	retlw	5
   493  009F  3400               	retlw	0
   494  00A0  34CA               	retlw	202
   495  00A1  349A               	retlw	154
   496  00A2  343B               	retlw	59
   497  00A3                     __end_of_dpowers:	
   498  0013                     _SSPBUF	set	19
   499  0014                     _SSPCON	set	20
   500  0008                     _PORTDbits	set	8
   501  0005                     _PORTA	set	5
   502  0008                     _PORTD	set	8
   503  0006                     _PORTB	set	6
   504  0063                     _SSPIF	set	99
   505  005E                     _PEIE	set	94
   506  005F                     _GIE	set	95
   507  0091                     _SSPCON2bits	set	145
   508  0087                     _TRISCbits	set	135
   509  0094                     _SSPSTAT	set	148
   510  0093                     _SSPADD	set	147
   511  0091                     _SSPCON2	set	145
   512  0085                     _TRISA	set	133
   513  0088                     _TRISD	set	136
   514  0086                     _TRISB	set	134
   515  0463                     _SSPIE	set	1123
   516  043C                     _TRISC4	set	1084
   517  043B                     _TRISC3	set	1083
   518  0188                     _ANSEL	set	392
   519  0189                     _ANSELH	set	393
   520  00A3                     STR_1:	
   521  00A3  3453               	retlw	83	;'S'
   522  00A4  3431               	retlw	49	;'1'
   523  00A5  3420               	retlw	32	;' '
   524  00A6  3420               	retlw	32	;' '
   525  00A7  3453               	retlw	83	;'S'
   526  00A8  3432               	retlw	50	;'2'
   527  00A9  3420               	retlw	32	;' '
   528  00AA  3420               	retlw	32	;' '
   529  00AB  3420               	retlw	32	;' '
   530  00AC  3420               	retlw	32	;' '
   531  00AD  3453               	retlw	83	;'S'
   532  00AE  3433               	retlw	51	;'3'
   533  00AF  3400               	retlw	0
   534  00B0                     STR_5:	
   535  00B0  3425               	retlw	37	;'%'
   536  00B1  3433               	retlw	51	;'3'
   537  00B2  342E               	retlw	46	;'.'
   538  00B3  3431               	retlw	49	;'1'
   539  00B4  3466               	retlw	102	;'f'
   540  00B5  3400               	retlw	0
   541  00B6                     STR_2:	
   542  00B6  3430               	retlw	48	;'0'
   543  00B7  3478               	retlw	120	;'x'
   544  00B8  3400               	retlw	0
   545  00B9                     STR_3:	
   546  00B9  342E               	retlw	46	;'.'
   547  00BA  3400               	retlw	0
   548  00BB                     STR_6:	
   549  00BB  3443               	retlw	67	;'C'
   550  00BC  3400               	retlw	0
   551  00BD                     STR_4:	
   552  00BD  3456               	retlw	86	;'V'
   553  00BE  3400               	retlw	0
   554                           
   555                           ; #config settings
   556  0000                     
   557                           	psect	cinit
   558  07F1                     start_initialization:	
   559  07F1                     __initialization:	
   560                           
   561                           ; Clear objects allocated to BANK0
   562  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   563  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   564  07F3  01EE               	clrf	__pbssBANK0& (0+127)
   565  07F4  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   566                           
   567                           ; Clear objects allocated to BANK1
   568  07F5  1383               	bcf	3,7	;select IRP bank0
   569  07F6  30C8               	movlw	low __pbssBANK1
   570  07F7  0084               	movwf	4
   571  07F8  30EF               	movlw	low (__pbssBANK1+39)
   572  07F9  160A  158A  20D7   	fcall	clear_ram0
   573  07FC                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  07FC                     __end_of__initialization:	
   577  07FC  0183               	clrf	3
   578  07FD  160A  118A  2B71   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssBANK0
   581  006E                     __pbssBANK0:	
   582  006E                     _valor2:	
   583  006E                     	ds	1
   584  006F                     _contador:	
   585  006F                     	ds	1
   586                           
   587                           	psect	bssBANK1
   588  00C8                     __pbssBANK1:	
   589  00C8                     mapear@F1362:	
   590  00C8                     	ds	6
   591  00CE                     uint_to_array@F1354:	
   592  00CE                     	ds	6
   593  00D4                     _temp:	
   594  00D4                     	ds	4
   595  00D8                     _temp_MSB:	
   596  00D8                     	ds	2
   597  00DA                     _PEC:	
   598  00DA                     	ds	1
   599  00DB                     _temp_LSB:	
   600  00DB                     	ds	1
   601  00DC                     _valor1:	
   602  00DC                     	ds	1
   603  00DD                     _valor_adc:	
   604  00DD                     	ds	1
   605  00DE                     _contador1:	
   606  00DE                     	ds	1
   607  00DF                     _print_lcd:	
   608  00DF                     	ds	16
   609                           
   610                           	psect	clrtext
   611  18D7                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615  18D7  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  18D8                     clrloop0:	
   617  18D8  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  18D9  0A84               	incf	4,f	;increment pointer
   619  18DA  0604               	xorwf	4,w	;XOR with final address
   620  18DB  1903               	btfsc	3,2	;have we reached the end yet?
   621  18DC  3400               	retlw	0	;all done for this memory range, return
   622  18DD  0604               	xorwf	4,w	;XOR again to restore value
   623  18DE  28D8               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackBANK1
   626  00A0                     __pcstackBANK1:	
   627  00A0                     ??___fldiv:	
   628  00A0                     ?_sprintf:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  00A0                     sprintf@f:	
   632                           ; 2 bytes @ 0x0
   633                           
   634                           
   635                           ; 1 bytes @ 0x0
   636  00A0                     	ds	5
   637  00A5                     ??_sprintf:	
   638  00A5                     ___fldiv@rem:	
   639                           ; 1 bytes @ 0x5
   640                           
   641                           
   642                           ; 4 bytes @ 0x5
   643  00A5                     	ds	4
   644  00A9                     ___fldiv@sign:	
   645                           
   646                           ; 1 bytes @ 0x9
   647  00A9                     	ds	1
   648  00AA                     ___fldiv@new_exp:	
   649  00AA                     _sprintf$967:	
   650                           ; 2 bytes @ 0xA
   651                           
   652                           
   653                           ; 4 bytes @ 0xA
   654  00AA                     	ds	2
   655  00AC                     ___fldiv@grs:	
   656                           
   657                           ; 4 bytes @ 0xC
   658  00AC                     	ds	2
   659  00AE                     sprintf@ap:	
   660                           
   661                           ; 1 bytes @ 0xE
   662  00AE                     	ds	1
   663  00AF                     sprintf@val:	
   664                           
   665                           ; 4 bytes @ 0xF
   666  00AF                     	ds	1
   667  00B0                     ___fldiv@bexp:	
   668                           
   669                           ; 1 bytes @ 0x10
   670  00B0                     	ds	1
   671  00B1                     ___fldiv@aexp:	
   672                           
   673                           ; 1 bytes @ 0x11
   674  00B1                     	ds	2
   675  00B3                     sprintf@flag:	
   676                           
   677                           ; 2 bytes @ 0x13
   678  00B3                     	ds	2
   679  00B5                     sprintf@width:	
   680                           
   681                           ; 2 bytes @ 0x15
   682  00B5                     	ds	2
   683  00B7                     sprintf@tmpval:	
   684                           
   685                           ; 4 bytes @ 0x17
   686  00B7                     	ds	4
   687  00BB                     sprintf@eexp:	
   688                           
   689                           ; 2 bytes @ 0x1B
   690  00BB                     	ds	2
   691  00BD                     sprintf@fval:	
   692                           
   693                           ; 4 bytes @ 0x1D
   694  00BD                     	ds	4
   695  00C1                     sprintf@sp:	
   696                           
   697                           ; 1 bytes @ 0x21
   698  00C1                     	ds	1
   699  00C2                     sprintf@prec:	
   700                           
   701                           ; 2 bytes @ 0x22
   702  00C2                     	ds	2
   703  00C4                     sprintf@c:	
   704                           
   705                           ; 1 bytes @ 0x24
   706  00C4                     	ds	1
   707  00C5                     ??_main:	
   708                           
   709                           ; 1 bytes @ 0x25
   710  00C5                     	ds	3
   711                           
   712                           	psect	cstackCOMMON
   713  0070                     __pcstackCOMMON:	
   714  0070                     ?_isdigit:	
   715  0070                     ?___fleq:	
   716                           ; 1 bit 
   717                           
   718  0070                     ?___flge:	
   719                           ; 1 bit 
   720                           
   721  0070                     ?_config:	
   722                           ; 1 bit 
   723                           
   724  0070                     ??_config:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_Lcd_Init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_Lcd_Clear:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_I2C_Master_Start:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_I2C_Master_Start:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_I2C_Master_Write:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_I2C_Master_Stop:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ??_I2C_Master_Stop:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_Lcd_Write_Char:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ??_Lcd_Write_Char:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_uint_to_char:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ??_uint_to_char:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_Lcd_Cmd:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ??_isdigit:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_main:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_I2C_Master_Wait:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_I2C_Master_Wait:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_I2C_Master_Read:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?__Umul8_16:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ?___wmul:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ?___awmod:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     ?___lwmod:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     ?__tdiv_to_l_:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     ?__div_to_l_:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     ?___lldiv:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0070                     ?___flneg:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0070                     ?___llmod:	
   803                           ; 4 bytes @ 0x0
   804                           
   805  0070                     ?___xxtofl:	
   806                           ; 4 bytes @ 0x0
   807                           
   808  0070                     _isdigit$784:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0070                     __Umul8_16@multiplicand:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     Lcd_Cmd@a:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     I2C_Master_Write@d:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0070                     I2C_Master_Read@a:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0070                     ___wmul@multiplier:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0070                     ___awmod@divisor:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0070                     ___lwmod@divisor:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0070                     ___lldiv@divisor:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0070                     __div_to_l_@f1:	
   836                           ; 4 bytes @ 0x0
   837                           
   838  0070                     ___fleq@ff1:	
   839                           ; 4 bytes @ 0x0
   840                           
   841  0070                     ___flge@ff1:	
   842                           ; 4 bytes @ 0x0
   843                           
   844  0070                     ___flneg@f1:	
   845                           ; 4 bytes @ 0x0
   846                           
   847  0070                     __tdiv_to_l_@f1:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0070                     ___llmod@divisor:	
   851                           ; 4 bytes @ 0x0
   852                           
   853  0070                     ___xxtofl@val:	
   854                           ; 4 bytes @ 0x0
   855                           
   856                           
   857                           ; 4 bytes @ 0x0
   858  0070                     	ds	1
   859  0071                     Lcd_Write_Char@a:	
   860  0071                     isdigit@c:	
   861                           ; 1 bytes @ 0x1
   862                           
   863                           
   864                           ; 1 bytes @ 0x1
   865  0071                     	ds	1
   866  0072                     ?_Lcd_Write_String:	
   867  0072                     ??_I2C_Master_Write:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0072                     ??_I2C_Master_Read:	
   871                           ; 1 bytes @ 0x2
   872                           
   873  0072                     ??_Lcd_Cmd:	
   874                           ; 1 bytes @ 0x2
   875                           
   876  0072                     ??__Umul8_16:	
   877                           ; 1 bytes @ 0x2
   878                           
   879  0072                     uint_to_char@numero:	
   880                           ; 1 bytes @ 0x2
   881                           
   882  0072                     Lcd_Write_String@a:	
   883                           ; 1 bytes @ 0x2
   884                           
   885  0072                     ___wmul@multiplicand:	
   886                           ; 2 bytes @ 0x2
   887                           
   888  0072                     ___awmod@dividend:	
   889                           ; 2 bytes @ 0x2
   890                           
   891  0072                     ___lwmod@dividend:	
   892                           ; 2 bytes @ 0x2
   893                           
   894                           
   895                           ; 2 bytes @ 0x2
   896  0072                     	ds	1
   897  0073                     uint_to_char@numChr:	
   898                           
   899                           ; 1 bytes @ 0x3
   900  0073                     	ds	1
   901  0074                     ??_Lcd_Init:	
   902  0074                     ??_Lcd_Clear:	
   903                           ; 1 bytes @ 0x4
   904                           
   905  0074                     ?_Lcd_Set_Cursor:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??_Lcd_Write_String:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     ??___wmul:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ??___awmod:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     ??___flneg:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     ??___lwmod:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     ??___xxtofl:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     Lcd_Set_Cursor@a:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     I2C_Master_Read@temp:	
   930                           ; 2 bytes @ 0x4
   931                           
   932  0074                     ___wmul@product:	
   933                           ; 2 bytes @ 0x4
   934                           
   935  0074                     __Umul8_16@product:	
   936                           ; 2 bytes @ 0x4
   937                           
   938  0074                     ___lldiv@dividend:	
   939                           ; 2 bytes @ 0x4
   940                           
   941  0074                     __div_to_l_@f2:	
   942                           ; 4 bytes @ 0x4
   943                           
   944  0074                     ___fleq@ff2:	
   945                           ; 4 bytes @ 0x4
   946                           
   947  0074                     ___flge@ff2:	
   948                           ; 4 bytes @ 0x4
   949                           
   950  0074                     __tdiv_to_l_@f2:	
   951                           ; 4 bytes @ 0x4
   952                           
   953  0074                     ___llmod@dividend:	
   954                           ; 4 bytes @ 0x4
   955                           
   956                           
   957                           ; 4 bytes @ 0x4
   958  0074                     	ds	1
   959  0075                     ___awmod@counter:	
   960  0075                     ___lwmod@counter:	
   961                           ; 1 bytes @ 0x5
   962                           
   963                           
   964                           ; 1 bytes @ 0x5
   965  0075                     	ds	1
   966  0076                     ?_mapear:	
   967  0076                     ?___lwdiv:	
   968                           ; 1 bytes @ 0x6
   969                           
   970  0076                     mapear@limReal:	
   971                           ; 2 bytes @ 0x6
   972                           
   973  0076                     ___awmod@sign:	
   974                           ; 1 bytes @ 0x6
   975                           
   976  0076                     Lcd_Set_Cursor@b:	
   977                           ; 1 bytes @ 0x6
   978                           
   979  0076                     ___lwdiv@divisor:	
   980                           ; 2 bytes @ 0x6
   981                           
   982  0076                     __Umul8_16@word_mpld:	
   983                           ; 2 bytes @ 0x6
   984                           
   985                           
   986                           ; 2 bytes @ 0x6
   987  0076                     	ds	1
   988  0077                     ?___awdiv:	
   989  0077                     mapear@limSup:	
   990                           ; 2 bytes @ 0x7
   991                           
   992  0077                     Lcd_Write_String@n:	
   993                           ; 1 bytes @ 0x7
   994                           
   995  0077                     ___awdiv@divisor:	
   996                           ; 2 bytes @ 0x7
   997                           
   998                           
   999                           ; 2 bytes @ 0x7
  1000  0077                     	ds	1
  1001  0078                     ??_Lcd_Set_Cursor:	
  1002  0078                     ??_mapear:	
  1003                           ; 1 bytes @ 0x8
  1004                           
  1005  0078                     ??__tdiv_to_l_:	
  1006                           ; 1 bytes @ 0x8
  1007                           
  1008  0078                     ??__div_to_l_:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011  0078                     ??___lldiv:	
  1012                           ; 1 bytes @ 0x8
  1013                           
  1014  0078                     ??___fleq:	
  1015                           ; 1 bytes @ 0x8
  1016                           
  1017  0078                     ??___flge:	
  1018                           ; 1 bytes @ 0x8
  1019                           
  1020  0078                     ??___llmod:	
  1021                           ; 1 bytes @ 0x8
  1022                           
  1023  0078                     ___xxtofl@sign:	
  1024                           ; 1 bytes @ 0x8
  1025                           
  1026  0078                     __Umul8_16@multiplier:	
  1027                           ; 1 bytes @ 0x8
  1028                           
  1029  0078                     Lcd_Set_Cursor@d:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032  0078                     ___lwdiv@dividend:	
  1033                           ; 2 bytes @ 0x8
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x8
  1037  0078                     	ds	1
  1038  0079                     ___llmod@counter:	
  1039  0079                     ___xxtofl@exp:	
  1040                           ; 1 bytes @ 0x9
  1041                           
  1042  0079                     ___awdiv@dividend:	
  1043                           ; 1 bytes @ 0x9
  1044                           
  1045  0079                     ___lldiv@quotient:	
  1046                           ; 2 bytes @ 0x9
  1047                           
  1048                           
  1049                           ; 4 bytes @ 0x9
  1050  0079                     	ds	1
  1051  007A                     ??___lwdiv:	
  1052  007A                     ___xxtofl@arg:	
  1053                           ; 1 bytes @ 0xA
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0xA
  1057  007A                     	ds	1
  1058  007B                     ??___awdiv:	
  1059  007B                     ___lwdiv@quotient:	
  1060                           ; 1 bytes @ 0xB
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0xB
  1064  007B                     	ds	2
  1065  007D                     ___lldiv@counter:	
  1066  007D                     ___lwdiv@counter:	
  1067                           ; 1 bytes @ 0xD
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0xD
  1071  007D                     	ds	1
  1072  007E                     ??___flsub:	
  1073                           
  1074                           	psect	cstackBANK0
  1075  0020                     __pcstackBANK0:	
  1076                           ; 1 bytes @ 0xE
  1077                           
  1078  0020                     ?_I2C_Master_Init:	
  1079  0020                     mapear@valor:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0020                     ___awdiv@counter:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0020                     I2C_Master_Init@c:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0020                     __div_to_l_@quot:	
  1089                           ; 4 bytes @ 0x0
  1090                           
  1091  0020                     __tdiv_to_l_@quot:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0x0
  1096  0020                     	ds	1
  1097  0021                     ___awdiv@sign:	
  1098  0021                     mapear@resultado:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101                           
  1102                           ; 6 bytes @ 0x1
  1103  0021                     	ds	1
  1104  0022                     ___awdiv@quotient:	
  1105                           
  1106                           ; 2 bytes @ 0x2
  1107  0022                     	ds	2
  1108  0024                     ??_I2C_Master_Init:	
  1109  0024                     ?___flmul:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112  0024                     __div_to_l_@cntr:	
  1113                           ; 4 bytes @ 0x4
  1114                           
  1115  0024                     __tdiv_to_l_@cntr:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118  0024                     ___flmul@b:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121                           
  1122                           ; 4 bytes @ 0x4
  1123  0024                     	ds	1
  1124  0025                     __div_to_l_@exp1:	
  1125  0025                     __tdiv_to_l_@exp1:	
  1126                           ; 1 bytes @ 0x5
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x5
  1130  0025                     	ds	2
  1131  0027                     mapear@dividendo:	
  1132                           
  1133                           ; 2 bytes @ 0x7
  1134  0027                     	ds	1
  1135  0028                     ___flmul@a:	
  1136                           
  1137                           ; 4 bytes @ 0x8
  1138  0028                     	ds	4
  1139  002C                     ??___flmul:	
  1140                           
  1141                           ; 1 bytes @ 0xC
  1142  002C                     	ds	5
  1143  0031                     ___flmul@sign:	
  1144                           
  1145                           ; 1 bytes @ 0x11
  1146  0031                     	ds	1
  1147  0032                     ___flmul@grs:	
  1148                           
  1149                           ; 4 bytes @ 0x12
  1150  0032                     	ds	4
  1151  0036                     ___flmul@aexp:	
  1152                           
  1153                           ; 1 bytes @ 0x16
  1154  0036                     	ds	1
  1155  0037                     ___flmul@bexp:	
  1156                           
  1157                           ; 1 bytes @ 0x17
  1158  0037                     	ds	1
  1159  0038                     ___flmul@prod:	
  1160                           
  1161                           ; 4 bytes @ 0x18
  1162  0038                     	ds	4
  1163  003C                     ___flmul@temp:	
  1164                           
  1165                           ; 2 bytes @ 0x1C
  1166  003C                     	ds	2
  1167  003E                     ?_fround:	
  1168  003E                     ?_scale:	
  1169                           ; 4 bytes @ 0x1E
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x1E
  1173  003E                     	ds	4
  1174  0042                     ??_fround:	
  1175  0042                     ??_scale:	
  1176                           ; 1 bytes @ 0x22
  1177                           
  1178                           
  1179                           ; 1 bytes @ 0x22
  1180  0042                     	ds	7
  1181  0049                     _fround$965:	
  1182                           
  1183                           ; 4 bytes @ 0x29
  1184  0049                     	ds	3
  1185  004C                     _scale$966:	
  1186                           
  1187                           ; 4 bytes @ 0x2C
  1188  004C                     	ds	1
  1189  004D                     _fround$964:	
  1190                           
  1191                           ; 4 bytes @ 0x2D
  1192  004D                     	ds	3
  1193  0050                     scale@scl:	
  1194                           
  1195                           ; 1 bytes @ 0x30
  1196  0050                     	ds	1
  1197  0051                     ?___fltol:	
  1198  0051                     fround@prec:	
  1199                           ; 4 bytes @ 0x31
  1200                           
  1201  0051                     ___fltol@f1:	
  1202                           ; 1 bytes @ 0x31
  1203                           
  1204                           
  1205                           ; 4 bytes @ 0x31
  1206  0051                     	ds	1
  1207  0052                     ?___fladd:	
  1208  0052                     ___fladd@b:	
  1209                           ; 4 bytes @ 0x32
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x32
  1213  0052                     	ds	3
  1214  0055                     ??___fltol:	
  1215                           
  1216                           ; 1 bytes @ 0x35
  1217  0055                     	ds	1
  1218  0056                     ___fladd@a:	
  1219                           
  1220                           ; 4 bytes @ 0x36
  1221  0056                     	ds	4
  1222  005A                     ??___fladd:	
  1223  005A                     ___fltol@sign1:	
  1224                           ; 1 bytes @ 0x3A
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0x3A
  1228  005A                     	ds	1
  1229  005B                     ___fltol@exp1:	
  1230                           
  1231                           ; 1 bytes @ 0x3B
  1232  005B                     	ds	7
  1233  0062                     ___fladd@signs:	
  1234                           
  1235                           ; 1 bytes @ 0x42
  1236  0062                     	ds	1
  1237  0063                     ___fladd@aexp:	
  1238                           
  1239                           ; 1 bytes @ 0x43
  1240  0063                     	ds	1
  1241  0064                     ___fladd@bexp:	
  1242                           
  1243                           ; 1 bytes @ 0x44
  1244  0064                     	ds	1
  1245  0065                     ___fladd@grs:	
  1246                           
  1247                           ; 1 bytes @ 0x45
  1248  0065                     	ds	1
  1249  0066                     ?___flsub:	
  1250  0066                     ?___fldiv:	
  1251                           ; 4 bytes @ 0x46
  1252                           
  1253  0066                     ___flsub@a:	
  1254                           ; 4 bytes @ 0x46
  1255                           
  1256  0066                     ___fldiv@a:	
  1257                           ; 4 bytes @ 0x46
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x46
  1261  0066                     	ds	4
  1262  006A                     ___flsub@b:	
  1263  006A                     ___fldiv@b:	
  1264                           ; 4 bytes @ 0x4A
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0x4A
  1268  006A                     	ds	4
  1269                           
  1270                           	psect	maintext
  1271  1371                     __pmaintext:	
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 41 in file "LAB_5_MASTER.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : B00/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0
  1293 ;;      Temps:          0       0       3       0       0
  1294 ;;      Totals:         0       0       3       0       0
  1295 ;;Total ram usage:        3 bytes
  1296 ;; Hardware stack levels required when called:    4
  1297 ;; This function calls:
  1298 ;;		_I2C_Master_Init
  1299 ;;		_I2C_Master_Read
  1300 ;;		_I2C_Master_Start
  1301 ;;		_I2C_Master_Stop
  1302 ;;		_I2C_Master_Write
  1303 ;;		_Lcd_Clear
  1304 ;;		_Lcd_Init
  1305 ;;		_Lcd_Set_Cursor
  1306 ;;		_Lcd_Write_Char
  1307 ;;		_Lcd_Write_String
  1308 ;;		___fladd
  1309 ;;		___fldiv
  1310 ;;		___flmul
  1311 ;;		___xxtofl
  1312 ;;		_config
  1313 ;;		_mapear
  1314 ;;		_sprintf
  1315 ;;		_uint_to_char
  1316 ;; This function is called by:
  1317 ;;		Startup code after reset
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _main
  1323  1371                     _main:	
  1324                           
  1325                           ;LAB_5_MASTER.c: 42:     config();
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1329  1371  160A  158A  210E  160A  118A  	fcall	_config
  1330                           
  1331                           ;LAB_5_MASTER.c: 43:     Lcd_Init();
  1332  1376  160A  158A  24ED  160A  118A  	fcall	_Lcd_Init
  1333                           
  1334                           ;LAB_5_MASTER.c: 44:     Lcd_Clear();
  1335  137B  160A  158A  2127  160A  118A  	fcall	_Lcd_Clear
  1336                           
  1337                           ;LAB_5_MASTER.c: 45:     Lcd_Set_Cursor(1,1);
  1338  1380  3001               	movlw	1
  1339  1381  00F4               	movwf	Lcd_Set_Cursor@a
  1340  1382  3000               	movlw	0
  1341  1383  00F5               	movwf	Lcd_Set_Cursor@a+1
  1342  1384  3001               	movlw	1
  1343  1385  00F6               	movwf	Lcd_Set_Cursor@b
  1344  1386  3000               	movlw	0
  1345  1387  00F7               	movwf	Lcd_Set_Cursor@b+1
  1346  1388  160A  158A  2142  160A  118A  	fcall	_Lcd_Set_Cursor
  1347                           
  1348                           ;LAB_5_MASTER.c: 46:     Lcd_Write_String("S1  S2    S3");
  1349  138D  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1350  138E  00F2               	movwf	Lcd_Write_String@a
  1351  138F  3080               	movlw	128
  1352  1390  00F3               	movwf	Lcd_Write_String@a+1
  1353  1391  160A  158A  2294  160A  118A  	fcall	_Lcd_Write_String
  1354                           
  1355                           ;LAB_5_MASTER.c: 47:     I2C_Master_Init(100000);
  1356  1396  3000               	movlw	0
  1357  1397  1283               	bcf	3,5	;RP0=0, select bank0
  1358  1398  1303               	bcf	3,6	;RP1=0, select bank0
  1359  1399  00A3               	movwf	I2C_Master_Init@c+3
  1360  139A  3001               	movlw	1
  1361  139B  00A2               	movwf	I2C_Master_Init@c+2
  1362  139C  3086               	movlw	134
  1363  139D  00A1               	movwf	I2C_Master_Init@c+1
  1364  139E  30A0               	movlw	160
  1365  139F  00A0               	movwf	I2C_Master_Init@c
  1366  13A0  160A  158A  2222  160A  118A  	fcall	_I2C_Master_Init
  1367  13A5                     l3994:	
  1368                           
  1369                           ;LAB_5_MASTER.c: 49:         I2C_Master_Start();
  1370  13A5  160A  158A  20C1  160A  118A  	fcall	_I2C_Master_Start
  1371                           
  1372                           ;LAB_5_MASTER.c: 50:         I2C_Master_Write(0x31);
  1373  13AA  3031               	movlw	49
  1374  13AB  00F0               	movwf	I2C_Master_Write@d
  1375  13AC  3000               	movlw	0
  1376  13AD  00F1               	movwf	I2C_Master_Write@d+1
  1377  13AE  160A  158A  20CF  160A  118A  	fcall	_I2C_Master_Write
  1378                           
  1379                           ;LAB_5_MASTER.c: 51:         contador1 = I2C_Master_Read(0);
  1380  13B3  3000               	movlw	0
  1381  13B4  00F0               	movwf	I2C_Master_Read@a
  1382  13B5  00F1               	movwf	I2C_Master_Read@a+1
  1383  13B6  160A  158A  21C4  160A  118A  	fcall	_I2C_Master_Read
  1384  13BB  0870               	movf	?_I2C_Master_Read,w
  1385  13BC  1683               	bsf	3,5	;RP0=1, select bank1
  1386  13BD  1303               	bcf	3,6	;RP1=0, select bank1
  1387  13BE  00C5               	movwf	??_main^(0+128)
  1388  13BF  0845               	movf	??_main^(0+128),w
  1389  13C0  00DE               	movwf	_contador1^(0+128)
  1390                           
  1391                           ;LAB_5_MASTER.c: 52:         I2C_Master_Stop();
  1392  13C1  160A  158A  20C8  160A  118A  	fcall	_I2C_Master_Stop
  1393                           
  1394                           ;LAB_5_MASTER.c: 53:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1395  13C6  3082               	movlw	130
  1396  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  1397  13C8  1303               	bcf	3,6	;RP1=0, select bank1
  1398  13C9  00C6               	movwf	(??_main^(0+128)+1)
  1399  13CA  30DD               	movlw	221
  1400  13CB  00C5               	movwf	??_main^(0+128)
  1401  13CC                     u6287:	
  1402  13CC  0BC5               	decfsz	??_main^(0+128),f
  1403  13CD  2BCC               	goto	u6287
  1404  13CE  0BC6               	decfsz	(??_main^(0+128)+1),f
  1405  13CF  2BCC               	goto	u6287
  1406                           
  1407                           ;LAB_5_MASTER.c: 56:         I2C_Master_Start();
  1408  13D0  160A  158A  20C1  160A  118A  	fcall	_I2C_Master_Start
  1409                           
  1410                           ;LAB_5_MASTER.c: 57:         I2C_Master_Write(0x51);
  1411  13D5  3051               	movlw	81
  1412  13D6  00F0               	movwf	I2C_Master_Write@d
  1413  13D7  3000               	movlw	0
  1414  13D8  00F1               	movwf	I2C_Master_Write@d+1
  1415  13D9  160A  158A  20CF  160A  118A  	fcall	_I2C_Master_Write
  1416                           
  1417                           ;LAB_5_MASTER.c: 58:         valor_adc = I2C_Master_Read(0);
  1418  13DE  3000               	movlw	0
  1419  13DF  00F0               	movwf	I2C_Master_Read@a
  1420  13E0  00F1               	movwf	I2C_Master_Read@a+1
  1421  13E1  160A  158A  21C4  160A  118A  	fcall	_I2C_Master_Read
  1422  13E6  0870               	movf	?_I2C_Master_Read,w
  1423  13E7  1683               	bsf	3,5	;RP0=1, select bank1
  1424  13E8  1303               	bcf	3,6	;RP1=0, select bank1
  1425  13E9  00C5               	movwf	??_main^(0+128)
  1426  13EA  0845               	movf	??_main^(0+128),w
  1427  13EB  00DD               	movwf	_valor_adc^(0+128)
  1428                           
  1429                           ;LAB_5_MASTER.c: 59:         I2C_Master_Stop();
  1430  13EC  160A  158A  20C8  160A  118A  	fcall	_I2C_Master_Stop
  1431                           
  1432                           ;LAB_5_MASTER.c: 60:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1433  13F1  3082               	movlw	130
  1434  13F2  1683               	bsf	3,5	;RP0=1, select bank1
  1435  13F3  1303               	bcf	3,6	;RP1=0, select bank1
  1436  13F4  00C6               	movwf	(??_main^(0+128)+1)
  1437  13F5  30DD               	movlw	221
  1438  13F6  00C5               	movwf	??_main^(0+128)
  1439  13F7                     u6297:	
  1440  13F7  0BC5               	decfsz	??_main^(0+128),f
  1441  13F8  2BF7               	goto	u6297
  1442  13F9  0BC6               	decfsz	(??_main^(0+128)+1),f
  1443  13FA  2BF7               	goto	u6297
  1444                           
  1445                           ;LAB_5_MASTER.c: 61:         valor1 = mapear(valor_adc, 255, 5);
  1446  13FB  30FF               	movlw	255
  1447  13FC  1683               	bsf	3,5	;RP0=1, select bank1
  1448  13FD  1303               	bcf	3,6	;RP1=0, select bank1
  1449  13FE  00C5               	movwf	??_main^(0+128)
  1450  13FF  0845               	movf	??_main^(0+128),w
  1451  1400  00F6               	movwf	mapear@limReal
  1452  1401  3005               	movlw	5
  1453  1402  00C6               	movwf	(??_main+1)^(0+128)
  1454  1403  0846               	movf	(??_main+1)^(0+128),w
  1455  1404  00F7               	movwf	mapear@limSup
  1456  1405  085D               	movf	_valor_adc^(0+128),w
  1457  1406  160A  118A  2001  160A  118A  	fcall	_mapear
  1458  140B  1683               	bsf	3,5	;RP0=1, select bank1
  1459  140C  1303               	bcf	3,6	;RP1=0, select bank1
  1460  140D  00C7               	movwf	(??_main+2)^(0+128)
  1461  140E  0847               	movf	(??_main+2)^(0+128),w
  1462  140F  00DC               	movwf	_valor1^(0+128)
  1463                           
  1464                           ;LAB_5_MASTER.c: 64:         I2C_Master_Start();
  1465  1410  160A  158A  20C1  160A  118A  	fcall	_I2C_Master_Start
  1466                           
  1467                           ;LAB_5_MASTER.c: 65:         I2C_Master_Write(0x00);
  1468  1415  3000               	movlw	0
  1469  1416  00F0               	movwf	I2C_Master_Write@d
  1470  1417  00F1               	movwf	I2C_Master_Write@d+1
  1471  1418  160A  158A  20CF  160A  118A  	fcall	_I2C_Master_Write
  1472                           
  1473                           ;LAB_5_MASTER.c: 66:         I2C_Master_Write(0x07);
  1474  141D  3007               	movlw	7
  1475  141E  00F0               	movwf	I2C_Master_Write@d
  1476  141F  3000               	movlw	0
  1477  1420  00F1               	movwf	I2C_Master_Write@d+1
  1478  1421  160A  158A  20CF  160A  118A  	fcall	_I2C_Master_Write
  1479                           
  1480                           ;LAB_5_MASTER.c: 69:         I2C_Master_Start();
  1481  1426  160A  158A  20C1  160A  118A  	fcall	_I2C_Master_Start
  1482                           
  1483                           ;LAB_5_MASTER.c: 70:         I2C_Master_Write(0x01);
  1484  142B  3001               	movlw	1
  1485  142C  00F0               	movwf	I2C_Master_Write@d
  1486  142D  3000               	movlw	0
  1487  142E  00F1               	movwf	I2C_Master_Write@d+1
  1488  142F  160A  158A  20CF  160A  118A  	fcall	_I2C_Master_Write
  1489                           
  1490                           ;LAB_5_MASTER.c: 71:         temp_LSB = I2C_Master_Read(0);
  1491  1434  3000               	movlw	0
  1492  1435  00F0               	movwf	I2C_Master_Read@a
  1493  1436  00F1               	movwf	I2C_Master_Read@a+1
  1494  1437  160A  158A  21C4  160A  118A  	fcall	_I2C_Master_Read
  1495  143C  0870               	movf	?_I2C_Master_Read,w
  1496  143D  1683               	bsf	3,5	;RP0=1, select bank1
  1497  143E  1303               	bcf	3,6	;RP1=0, select bank1
  1498  143F  00C5               	movwf	??_main^(0+128)
  1499  1440  0845               	movf	??_main^(0+128),w
  1500  1441  00DB               	movwf	_temp_LSB^(0+128)
  1501                           
  1502                           ;LAB_5_MASTER.c: 72:         temp_MSB = I2C_Master_Read(0);
  1503  1442  3000               	movlw	0
  1504  1443  00F0               	movwf	I2C_Master_Read@a
  1505  1444  00F1               	movwf	I2C_Master_Read@a+1
  1506  1445  160A  158A  21C4  160A  118A  	fcall	_I2C_Master_Read
  1507  144A  0871               	movf	?_I2C_Master_Read+1,w
  1508  144B  1683               	bsf	3,5	;RP0=1, select bank1
  1509  144C  1303               	bcf	3,6	;RP1=0, select bank1
  1510  144D  00D9               	movwf	(_temp_MSB+1)^(0+128)
  1511  144E  0870               	movf	?_I2C_Master_Read,w
  1512  144F  00D8               	movwf	_temp_MSB^(0+128)
  1513                           
  1514                           ;LAB_5_MASTER.c: 73:         PEC = I2C_Master_Read(0);
  1515  1450  3000               	movlw	0
  1516  1451  00F0               	movwf	I2C_Master_Read@a
  1517  1452  00F1               	movwf	I2C_Master_Read@a+1
  1518  1453  160A  158A  21C4  160A  118A  	fcall	_I2C_Master_Read
  1519  1458  0870               	movf	?_I2C_Master_Read,w
  1520  1459  1683               	bsf	3,5	;RP0=1, select bank1
  1521  145A  1303               	bcf	3,6	;RP1=0, select bank1
  1522  145B  00C5               	movwf	??_main^(0+128)
  1523  145C  0845               	movf	??_main^(0+128),w
  1524  145D  00DA               	movwf	_PEC^(0+128)
  1525                           
  1526                           ;LAB_5_MASTER.c: 74:         I2C_Master_Stop();
  1527  145E  160A  158A  20C8  160A  118A  	fcall	_I2C_Master_Stop
  1528                           
  1529                           ;LAB_5_MASTER.c: 75:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1530  1463  3082               	movlw	130
  1531  1464  1683               	bsf	3,5	;RP0=1, select bank1
  1532  1465  1303               	bcf	3,6	;RP1=0, select bank1
  1533  1466  00C6               	movwf	(??_main^(0+128)+1)
  1534  1467  30DD               	movlw	221
  1535  1468  00C5               	movwf	??_main^(0+128)
  1536  1469                     u6307:	
  1537  1469  0BC5               	decfsz	??_main^(0+128),f
  1538  146A  2C69               	goto	u6307
  1539  146B  0BC6               	decfsz	(??_main^(0+128)+1),f
  1540  146C  2C69               	goto	u6307
  1541                           
  1542                           ;LAB_5_MASTER.c: 81:         Lcd_Set_Cursor(2,1);
  1543  146D  3002               	movlw	2
  1544  146E  00F4               	movwf	Lcd_Set_Cursor@a
  1545  146F  3000               	movlw	0
  1546  1470  00F5               	movwf	Lcd_Set_Cursor@a+1
  1547  1471  3001               	movlw	1
  1548  1472  00F6               	movwf	Lcd_Set_Cursor@b
  1549  1473  3000               	movlw	0
  1550  1474  00F7               	movwf	Lcd_Set_Cursor@b+1
  1551  1475  160A  158A  2142  160A  118A  	fcall	_Lcd_Set_Cursor
  1552                           
  1553                           ;LAB_5_MASTER.c: 82:         Lcd_Write_String("0x");
  1554  147A  30A4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1555  147B  00F2               	movwf	Lcd_Write_String@a
  1556  147C  3080               	movlw	128
  1557  147D  00F3               	movwf	Lcd_Write_String@a+1
  1558  147E  160A  158A  2294  160A  118A  	fcall	_Lcd_Write_String
  1559                           
  1560                           ;LAB_5_MASTER.c: 83:         Lcd_Write_Char(uint_to_char(contador1));
  1561  1483  1683               	bsf	3,5	;RP0=1, select bank1
  1562  1484  1303               	bcf	3,6	;RP1=0, select bank1
  1563  1485  085E               	movf	_contador1^(0+128),w
  1564  1486  160A  158A  241D  160A  118A  	fcall	_uint_to_char
  1565  148B  160A  158A  20FF  160A  118A  	fcall	_Lcd_Write_Char
  1566                           
  1567                           ;LAB_5_MASTER.c: 84:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1568  1490  3082               	movlw	130
  1569  1491  1683               	bsf	3,5	;RP0=1, select bank1
  1570  1492  1303               	bcf	3,6	;RP1=0, select bank1
  1571  1493  00C6               	movwf	(??_main^(0+128)+1)
  1572  1494  30DD               	movlw	221
  1573  1495  00C5               	movwf	??_main^(0+128)
  1574  1496                     u6317:	
  1575  1496  0BC5               	decfsz	??_main^(0+128),f
  1576  1497  2C96               	goto	u6317
  1577  1498  0BC6               	decfsz	(??_main^(0+128)+1),f
  1578  1499  2C96               	goto	u6317
  1579                           
  1580                           ;LAB_5_MASTER.c: 86:         Lcd_Set_Cursor(2,5);
  1581  149A  3002               	movlw	2
  1582  149B  00F4               	movwf	Lcd_Set_Cursor@a
  1583  149C  3000               	movlw	0
  1584  149D  00F5               	movwf	Lcd_Set_Cursor@a+1
  1585  149E  3005               	movlw	5
  1586  149F  00F6               	movwf	Lcd_Set_Cursor@b
  1587  14A0  3000               	movlw	0
  1588  14A1  00F7               	movwf	Lcd_Set_Cursor@b+1
  1589  14A2  160A  158A  2142  160A  118A  	fcall	_Lcd_Set_Cursor
  1590                           
  1591                           ;LAB_5_MASTER.c: 87:         Lcd_Write_Char(uint_to_char(valor1[0]));
  1592  14A7  1683               	bsf	3,5	;RP0=1, select bank1
  1593  14A8  1303               	bcf	3,6	;RP1=0, select bank1
  1594  14A9  085C               	movf	_valor1^(0+128),w
  1595  14AA  0084               	movwf	4
  1596  14AB  1383               	bcf	3,7	;select IRP bank0
  1597  14AC  0800               	movf	0,w
  1598  14AD  160A  158A  241D  160A  118A  	fcall	_uint_to_char
  1599  14B2  160A  158A  20FF  160A  118A  	fcall	_Lcd_Write_Char
  1600                           
  1601                           ;LAB_5_MASTER.c: 88:         Lcd_Write_String(".");
  1602  14B7  30A7               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1603  14B8  00F2               	movwf	Lcd_Write_String@a
  1604  14B9  3080               	movlw	128
  1605  14BA  00F3               	movwf	Lcd_Write_String@a+1
  1606  14BB  160A  158A  2294  160A  118A  	fcall	_Lcd_Write_String
  1607                           
  1608                           ;LAB_5_MASTER.c: 89:         Lcd_Write_Char(uint_to_char(valor1[1]));
  1609  14C0  1683               	bsf	3,5	;RP0=1, select bank1
  1610  14C1  1303               	bcf	3,6	;RP1=0, select bank1
  1611  14C2  085C               	movf	_valor1^(0+128),w
  1612  14C3  3E02               	addlw	2
  1613  14C4  0084               	movwf	4
  1614  14C5  1383               	bcf	3,7	;select IRP bank0
  1615  14C6  0800               	movf	0,w
  1616  14C7  160A  158A  241D  160A  118A  	fcall	_uint_to_char
  1617  14CC  160A  158A  20FF  160A  118A  	fcall	_Lcd_Write_Char
  1618                           
  1619                           ;LAB_5_MASTER.c: 90:         Lcd_Write_Char(uint_to_char(valor1[2]));
  1620  14D1  1683               	bsf	3,5	;RP0=1, select bank1
  1621  14D2  1303               	bcf	3,6	;RP1=0, select bank1
  1622  14D3  085C               	movf	_valor1^(0+128),w
  1623  14D4  3E04               	addlw	4
  1624  14D5  0084               	movwf	4
  1625  14D6  1383               	bcf	3,7	;select IRP bank0
  1626  14D7  0800               	movf	0,w
  1627  14D8  160A  158A  241D  160A  118A  	fcall	_uint_to_char
  1628  14DD  160A  158A  20FF  160A  118A  	fcall	_Lcd_Write_Char
  1629                           
  1630                           ;LAB_5_MASTER.c: 91:         Lcd_Write_String("V");
  1631  14E2  30AB               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1632  14E3  00F2               	movwf	Lcd_Write_String@a
  1633  14E4  3080               	movlw	128
  1634  14E5  00F3               	movwf	Lcd_Write_String@a+1
  1635  14E6  160A  158A  2294  160A  118A  	fcall	_Lcd_Write_String
  1636                           
  1637                           ;LAB_5_MASTER.c: 93:         temp_MSB = temp_MSB <<8;
  1638  14EB  1683               	bsf	3,5	;RP0=1, select bank1
  1639  14EC  1303               	bcf	3,6	;RP1=0, select bank1
  1640  14ED  0859               	movf	(_temp_MSB+1)^(0+128),w
  1641  14EE  00C6               	movwf	(??_main^(0+128)+1)
  1642  14EF  0858               	movf	_temp_MSB^(0+128),w
  1643  14F0  00C5               	movwf	??_main^(0+128)
  1644  14F1  0845               	movf	??_main^(0+128),w
  1645  14F2  00C6               	movwf	(??_main^(0+128)+1)
  1646  14F3  01C5               	clrf	??_main^(0+128)
  1647  14F4  0845               	movf	??_main^(0+128),w
  1648  14F5  00D8               	movwf	_temp_MSB^(0+128)
  1649  14F6  0846               	movf	(??_main+1)^(0+128),w
  1650  14F7  00D9               	movwf	(_temp_MSB+1)^(0+128)
  1651                           
  1652                           ;LAB_5_MASTER.c: 94:         temp = (((temp_MSB+temp_LSB)*0.2)-273.15)/100;
  1653  14F8  3042               	movlw	66
  1654  14F9  1283               	bcf	3,5	;RP0=0, select bank0
  1655  14FA  1303               	bcf	3,6	;RP1=0, select bank0
  1656  14FB  00E9               	movwf	___fldiv@a+3
  1657  14FC  30C8               	movlw	200
  1658  14FD  00E8               	movwf	___fldiv@a+2
  1659  14FE  3000               	movlw	0
  1660  14FF  00E7               	movwf	___fldiv@a+1
  1661  1500  3000               	movlw	0
  1662  1501  00E6               	movwf	___fldiv@a
  1663  1502  30C3               	movlw	195
  1664  1503  00D5               	movwf	___fladd@b+3
  1665  1504  3088               	movlw	136
  1666  1505  00D4               	movwf	___fladd@b+2
  1667  1506  3093               	movlw	147
  1668  1507  00D3               	movwf	___fladd@b+1
  1669  1508  3033               	movlw	51
  1670  1509  00D2               	movwf	___fladd@b
  1671  150A  303E               	movlw	62
  1672  150B  00A7               	movwf	___flmul@b+3
  1673  150C  304C               	movlw	76
  1674  150D  00A6               	movwf	___flmul@b+2
  1675  150E  30CC               	movlw	204
  1676  150F  00A5               	movwf	___flmul@b+1
  1677  1510  30CD               	movlw	205
  1678  1511  00A4               	movwf	___flmul@b
  1679  1512  1683               	bsf	3,5	;RP0=1, select bank1
  1680  1513  1303               	bcf	3,6	;RP1=0, select bank1
  1681  1514  085B               	movf	_temp_LSB^(0+128),w
  1682  1515  0758               	addwf	_temp_MSB^(0+128),w
  1683  1516  00F0               	movwf	___xxtofl@val
  1684  1517  0859               	movf	(_temp_MSB+1)^(0+128),w
  1685  1518  1803               	skipnc
  1686  1519  0A59               	incf	(_temp_MSB+1)^(0+128),w
  1687  151A  00F1               	movwf	___xxtofl@val+1
  1688  151B  01F2               	clrf	___xxtofl@val+2
  1689  151C  1BF1               	btfsc	___xxtofl@val+1,7
  1690  151D  03F2               	decf	___xxtofl@val+2,f
  1691  151E  0872               	movf	___xxtofl@val+2,w
  1692  151F  00F3               	movwf	___xxtofl@val+3
  1693  1520  3001               	movlw	1
  1694  1521  160A  118A  209F  160A  118A  	fcall	___xxtofl
  1695  1526  0873               	movf	?___xxtofl+3,w
  1696  1527  1283               	bcf	3,5	;RP0=0, select bank0
  1697  1528  1303               	bcf	3,6	;RP1=0, select bank0
  1698  1529  00AB               	movwf	___flmul@a+3
  1699  152A  0872               	movf	?___xxtofl+2,w
  1700  152B  00AA               	movwf	___flmul@a+2
  1701  152C  0871               	movf	?___xxtofl+1,w
  1702  152D  00A9               	movwf	___flmul@a+1
  1703  152E  0870               	movf	?___xxtofl,w
  1704  152F  00A8               	movwf	___flmul@a
  1705  1530  120A  158A  21A2  160A  118A  	fcall	___flmul
  1706  1535  1283               	bcf	3,5	;RP0=0, select bank0
  1707  1536  1303               	bcf	3,6	;RP1=0, select bank0
  1708  1537  0827               	movf	?___flmul+3,w
  1709  1538  00D9               	movwf	___fladd@a+3
  1710  1539  0826               	movf	?___flmul+2,w
  1711  153A  00D8               	movwf	___fladd@a+2
  1712  153B  0825               	movf	?___flmul+1,w
  1713  153C  00D7               	movwf	___fladd@a+1
  1714  153D  0824               	movf	?___flmul,w
  1715  153E  00D6               	movwf	___fladd@a
  1716  153F  160A  118A  2142  160A  118A  	fcall	___fladd
  1717  1544  1283               	bcf	3,5	;RP0=0, select bank0
  1718  1545  1303               	bcf	3,6	;RP1=0, select bank0
  1719  1546  0855               	movf	?___fladd+3,w
  1720  1547  00ED               	movwf	___fldiv@b+3
  1721  1548  0854               	movf	?___fladd+2,w
  1722  1549  00EC               	movwf	___fldiv@b+2
  1723  154A  0853               	movf	?___fladd+1,w
  1724  154B  00EB               	movwf	___fldiv@b+1
  1725  154C  0852               	movf	?___fladd,w
  1726  154D  00EA               	movwf	___fldiv@b
  1727  154E  160A  118A  25A5  160A  118A  	fcall	___fldiv
  1728  1553  1283               	bcf	3,5	;RP0=0, select bank0
  1729  1554  1303               	bcf	3,6	;RP1=0, select bank0
  1730  1555  0869               	movf	?___fldiv+3,w
  1731  1556  1683               	bsf	3,5	;RP0=1, select bank1
  1732  1557  1303               	bcf	3,6	;RP1=0, select bank1
  1733  1558  00D7               	movwf	(_temp+3)^(0+128)
  1734  1559  1283               	bcf	3,5	;RP0=0, select bank0
  1735  155A  1303               	bcf	3,6	;RP1=0, select bank0
  1736  155B  0868               	movf	?___fldiv+2,w
  1737  155C  1683               	bsf	3,5	;RP0=1, select bank1
  1738  155D  1303               	bcf	3,6	;RP1=0, select bank1
  1739  155E  00D6               	movwf	(_temp+2)^(0+128)
  1740  155F  1283               	bcf	3,5	;RP0=0, select bank0
  1741  1560  1303               	bcf	3,6	;RP1=0, select bank0
  1742  1561  0867               	movf	?___fldiv+1,w
  1743  1562  1683               	bsf	3,5	;RP0=1, select bank1
  1744  1563  1303               	bcf	3,6	;RP1=0, select bank1
  1745  1564  00D5               	movwf	(_temp+1)^(0+128)
  1746  1565  1283               	bcf	3,5	;RP0=0, select bank0
  1747  1566  1303               	bcf	3,6	;RP1=0, select bank0
  1748  1567  0866               	movf	?___fldiv,w
  1749  1568  1683               	bsf	3,5	;RP0=1, select bank1
  1750  1569  1303               	bcf	3,6	;RP1=0, select bank1
  1751  156A  00D4               	movwf	_temp^(0+128)
  1752                           
  1753                           ;LAB_5_MASTER.c: 95:         Lcd_Set_Cursor(2,11);
  1754  156B  3002               	movlw	2
  1755  156C  00F4               	movwf	Lcd_Set_Cursor@a
  1756  156D  3000               	movlw	0
  1757  156E  00F5               	movwf	Lcd_Set_Cursor@a+1
  1758  156F  300B               	movlw	11
  1759  1570  00F6               	movwf	Lcd_Set_Cursor@b
  1760  1571  3000               	movlw	0
  1761  1572  00F7               	movwf	Lcd_Set_Cursor@b+1
  1762  1573  160A  158A  2142  160A  118A  	fcall	_Lcd_Set_Cursor
  1763                           
  1764                           ;LAB_5_MASTER.c: 96:         sprintf(print_lcd, "%3.1f",temp);
  1765  1578  309E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1766  1579  1683               	bsf	3,5	;RP0=1, select bank1
  1767  157A  1303               	bcf	3,6	;RP1=0, select bank1
  1768  157B  00C5               	movwf	??_main^(0+128)
  1769  157C  0845               	movf	??_main^(0+128),w
  1770  157D  00A0               	movwf	sprintf@f^(0+128)
  1771  157E  0857               	movf	(_temp+3)^(0+128),w
  1772  157F  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1773  1580  0856               	movf	(_temp+2)^(0+128),w
  1774  1581  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1775  1582  0855               	movf	(_temp+1)^(0+128),w
  1776  1583  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1777  1584  0854               	movf	_temp^(0+128),w
  1778  1585  00A1               	movwf	(?_sprintf^(0+128)+1)
  1779  1586  30DF               	movlw	(low (_print_lcd| 0))& (0+255)
  1780  1587  120A  118A  20EF  160A  118A  	fcall	_sprintf
  1781                           
  1782                           ;LAB_5_MASTER.c: 98:         Lcd_Write_String(print_lcd);
  1783  158C  30DF               	movlw	(low (_print_lcd| 0))& (0+255)
  1784  158D  00F2               	movwf	Lcd_Write_String@a
  1785  158E  3000               	movlw	0
  1786  158F  00F3               	movwf	Lcd_Write_String@a+1
  1787  1590  160A  158A  2294  160A  118A  	fcall	_Lcd_Write_String
  1788                           
  1789                           ;LAB_5_MASTER.c: 99:         Lcd_Write_Char(0xDF);
  1790  1595  30DF               	movlw	223
  1791  1596  160A  158A  20FF  160A  118A  	fcall	_Lcd_Write_Char
  1792                           
  1793                           ;LAB_5_MASTER.c: 100:         Lcd_Write_String("C");
  1794  159B  30A9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1795  159C  00F2               	movwf	Lcd_Write_String@a
  1796  159D  3080               	movlw	128
  1797  159E  00F3               	movwf	Lcd_Write_String@a+1
  1798  159F  160A  158A  2294  160A  118A  	fcall	_Lcd_Write_String
  1799  15A4  2BA5               	goto	l3994
  1800  15A5                     __end_of_main:	
  1801                           
  1802                           	psect	text1
  1803  1C1D                     __ptext1:	
  1804 ;; *************** function _uint_to_char *****************
  1805 ;; Defined at:
  1806 ;;		line 193 in file "funciones0.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  numero          1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  numero          1    2[COMMON] unsigned char 
  1811 ;;  numChr          1    3[COMMON] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      unsigned char 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       0       0       0       0
  1822 ;;      Locals:         2       0       0       0       0
  1823 ;;      Temps:          2       0       0       0       0
  1824 ;;      Totals:         4       0       0       0       0
  1825 ;;Total ram usage:        4 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _uint_to_char
  1836  1C1D                     _uint_to_char:	
  1837                           
  1838                           ;incstack = 0
  1839                           ; Regs used in _uint_to_char: [wreg-fsr0h+status,2+status,0]
  1840                           ;uint_to_char@numero stored from wreg
  1841  1C1D  00F2               	movwf	uint_to_char@numero
  1842                           
  1843                           ;funciones0.c: 195:     switch (numero){
  1844  1C1E  2C44               	goto	l3570
  1845  1C1F                     l3536:	
  1846                           
  1847                           ;funciones0.c: 197:             numChr = 48;
  1848  1C1F  3030               	movlw	48
  1849  1C20  2C40               	goto	L16
  1850  1C21                     l3538:	
  1851                           ;funciones0.c: 198:             break;
  1852                           
  1853                           
  1854                           ;funciones0.c: 200:             numChr = 49;
  1855  1C21  3031               	movlw	49
  1856  1C22  2C40               	goto	L16
  1857  1C23                     l3540:	
  1858                           ;funciones0.c: 201:             break;
  1859                           
  1860                           
  1861                           ;funciones0.c: 203:             numChr = 50;
  1862  1C23  3032               	movlw	50
  1863  1C24  2C40               	goto	L16
  1864  1C25                     l3542:	
  1865                           ;funciones0.c: 204:             break;
  1866                           
  1867                           
  1868                           ;funciones0.c: 206:             numChr = 51;
  1869  1C25  3033               	movlw	51
  1870  1C26  2C40               	goto	L16
  1871  1C27                     l3544:	
  1872                           ;funciones0.c: 207:             break;
  1873                           
  1874                           
  1875                           ;funciones0.c: 209:             numChr = 52;
  1876  1C27  3034               	movlw	52
  1877  1C28  2C40               	goto	L16
  1878  1C29                     l3546:	
  1879                           ;funciones0.c: 210:             break;
  1880                           
  1881                           
  1882                           ;funciones0.c: 212:             numChr = 53;
  1883  1C29  3035               	movlw	53
  1884  1C2A  2C40               	goto	L16
  1885  1C2B                     l3548:	
  1886                           ;funciones0.c: 213:             break;
  1887                           
  1888                           
  1889                           ;funciones0.c: 215:             numChr = 54;
  1890  1C2B  3036               	movlw	54
  1891  1C2C  2C40               	goto	L16
  1892  1C2D                     l3550:	
  1893                           ;funciones0.c: 216:             break;
  1894                           
  1895                           
  1896                           ;funciones0.c: 218:             numChr = 55;
  1897  1C2D  3037               	movlw	55
  1898  1C2E  2C40               	goto	L16
  1899  1C2F                     l3552:	
  1900                           ;funciones0.c: 219:             break;
  1901                           
  1902                           
  1903                           ;funciones0.c: 221:             numChr = 56;
  1904  1C2F  3038               	movlw	56
  1905  1C30  2C40               	goto	L16
  1906  1C31                     l3554:	
  1907                           ;funciones0.c: 222:             break;
  1908                           
  1909                           
  1910                           ;funciones0.c: 224:             numChr = 57;
  1911  1C31  3039               	movlw	57
  1912  1C32  2C40               	goto	L16
  1913  1C33                     l3556:	
  1914                           ;funciones0.c: 225:             break;
  1915                           
  1916                           
  1917                           ;funciones0.c: 227:             numChr = 65;
  1918  1C33  3041               	movlw	65
  1919  1C34  2C40               	goto	L16
  1920  1C35                     l3558:	
  1921                           ;funciones0.c: 228:             break;
  1922                           
  1923                           
  1924                           ;funciones0.c: 230:             numChr = 66;
  1925  1C35  3042               	movlw	66
  1926  1C36  2C40               	goto	L16
  1927  1C37                     l3560:	
  1928                           ;funciones0.c: 231:             break;
  1929                           
  1930                           
  1931                           ;funciones0.c: 233:             numChr = 67;
  1932  1C37  3043               	movlw	67
  1933  1C38  2C40               	goto	L16
  1934  1C39                     l3562:	
  1935                           ;funciones0.c: 234:             break;
  1936                           
  1937                           
  1938                           ;funciones0.c: 236:             numChr = 68;
  1939  1C39  3044               	movlw	68
  1940  1C3A  2C40               	goto	L16
  1941  1C3B                     l3564:	
  1942                           ;funciones0.c: 237:             break;
  1943                           
  1944                           
  1945                           ;funciones0.c: 239:             numChr = 69;
  1946  1C3B  3045               	movlw	69
  1947  1C3C  2C40               	goto	L16
  1948  1C3D                     l3566:	
  1949                           ;funciones0.c: 240:             break;
  1950                           
  1951                           
  1952                           ;funciones0.c: 242:             numChr = 70;
  1953  1C3D  3046               	movlw	70
  1954  1C3E  2C40               	goto	L16
  1955  1C3F                     l3568:	
  1956                           ;funciones0.c: 243:             break;
  1957                           
  1958                           
  1959                           ;funciones0.c: 245:             numChr = 214;
  1960  1C3F  30D6               	movlw	214
  1961  1C40                     L16:	
  1962  1C40  00F0               	movwf	??_uint_to_char
  1963  1C41  0870               	movf	??_uint_to_char,w
  1964  1C42  00F3               	movwf	uint_to_char@numChr
  1965                           
  1966                           ;funciones0.c: 246:     }
  1967  1C43  2C7E               	goto	l3572
  1968  1C44                     l3570:	
  1969  1C44  0872               	movf	uint_to_char@numero,w
  1970  1C45  00F0               	movwf	??_uint_to_char
  1971  1C46  01F1               	clrf	??_uint_to_char+1
  1972                           
  1973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1974                           ; Switch size 1, requested type "simple"
  1975                           ; Number of cases is 1, Range of values is 0 to 0
  1976                           ; switch strategies available:
  1977                           ; Name         Instructions Cycles
  1978                           ; simple_byte            4     3 (average)
  1979                           ; direct_byte           11     8 (fixed)
  1980                           ; jumptable            260     6 (fixed)
  1981                           ;	Chosen strategy is simple_byte
  1982  1C47  0871               	movf	??_uint_to_char+1,w
  1983  1C48  3A00               	xorlw	0	; case 0
  1984  1C49  1903               	skipnz
  1985  1C4A  2C4C               	goto	l4132
  1986  1C4B  2C3F               	goto	l3568
  1987  1C4C                     l4132:	
  1988                           
  1989                           ; Switch size 1, requested type "simple"
  1990                           ; Number of cases is 16, Range of values is 0 to 15
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte           49    25 (average)
  1994                           ; direct_byte           56     8 (fixed)
  1995                           ; jumptable            260     6 (fixed)
  1996                           ;	Chosen strategy is simple_byte
  1997  1C4C  0870               	movf	??_uint_to_char,w
  1998  1C4D  3A00               	xorlw	0	; case 0
  1999  1C4E  1903               	skipnz
  2000  1C4F  2C1F               	goto	l3536
  2001  1C50  3A01               	xorlw	1	; case 1
  2002  1C51  1903               	skipnz
  2003  1C52  2C21               	goto	l3538
  2004  1C53  3A03               	xorlw	3	; case 2
  2005  1C54  1903               	skipnz
  2006  1C55  2C23               	goto	l3540
  2007  1C56  3A01               	xorlw	1	; case 3
  2008  1C57  1903               	skipnz
  2009  1C58  2C25               	goto	l3542
  2010  1C59  3A07               	xorlw	7	; case 4
  2011  1C5A  1903               	skipnz
  2012  1C5B  2C27               	goto	l3544
  2013  1C5C  3A01               	xorlw	1	; case 5
  2014  1C5D  1903               	skipnz
  2015  1C5E  2C29               	goto	l3546
  2016  1C5F  3A03               	xorlw	3	; case 6
  2017  1C60  1903               	skipnz
  2018  1C61  2C2B               	goto	l3548
  2019  1C62  3A01               	xorlw	1	; case 7
  2020  1C63  1903               	skipnz
  2021  1C64  2C2D               	goto	l3550
  2022  1C65  3A0F               	xorlw	15	; case 8
  2023  1C66  1903               	skipnz
  2024  1C67  2C2F               	goto	l3552
  2025  1C68  3A01               	xorlw	1	; case 9
  2026  1C69  1903               	skipnz
  2027  1C6A  2C31               	goto	l3554
  2028  1C6B  3A03               	xorlw	3	; case 10
  2029  1C6C  1903               	skipnz
  2030  1C6D  2C33               	goto	l3556
  2031  1C6E  3A01               	xorlw	1	; case 11
  2032  1C6F  1903               	skipnz
  2033  1C70  2C35               	goto	l3558
  2034  1C71  3A07               	xorlw	7	; case 12
  2035  1C72  1903               	skipnz
  2036  1C73  2C37               	goto	l3560
  2037  1C74  3A01               	xorlw	1	; case 13
  2038  1C75  1903               	skipnz
  2039  1C76  2C39               	goto	l3562
  2040  1C77  3A03               	xorlw	3	; case 14
  2041  1C78  1903               	skipnz
  2042  1C79  2C3B               	goto	l3564
  2043  1C7A  3A01               	xorlw	1	; case 15
  2044  1C7B  1903               	skipnz
  2045  1C7C  2C3D               	goto	l3566
  2046  1C7D  2C3F               	goto	l3568
  2047  1C7E                     l3572:	
  2048                           
  2049                           ;funciones0.c: 247:     return(numChr);
  2050  1C7E  0873               	movf	uint_to_char@numChr,w
  2051  1C7F  0008               	return
  2052  1C80                     __end_of_uint_to_char:	
  2053                           
  2054                           	psect	text2
  2055  00EF                     __ptext2:	
  2056 ;; *************** function _sprintf *****************
  2057 ;; Defined at:
  2058 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  sp              1    wreg     PTR unsigned char 
  2061 ;;		 -> print_lcd(16), 
  2062 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2063 ;;		 -> STR_5(6), 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2066 ;;		 -> print_lcd(16), 
  2067 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  2068 ;;  tmpval          4   23[BANK1 ] struct .
  2069 ;;  val             4   15[BANK1 ] unsigned long 
  2070 ;;  prec            2   34[BANK1 ] int 
  2071 ;;  eexp            2   27[BANK1 ] int 
  2072 ;;  width           2   21[BANK1 ] int 
  2073 ;;  flag            2   19[BANK1 ] unsigned short 
  2074 ;;  cp              2    0        PTR const unsigned char 
  2075 ;;  len             2    0        unsigned int 
  2076 ;;  c               1   36[BANK1 ] unsigned char 
  2077 ;;  ap              1   14[BANK1 ] PTR void [1]
  2078 ;;		 -> ?_sprintf(2), 
  2079 ;;  d               1    0        unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2    0[BANK1 ] int 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       5       0       0
  2090 ;;      Locals:         0       0      27       0       0
  2091 ;;      Temps:          0       0       5       0       0
  2092 ;;      Totals:         0       0      37       0       0
  2093 ;;Total ram usage:       37 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    3
  2096 ;; This function calls:
  2097 ;;		___awdiv
  2098 ;;		___fladd
  2099 ;;		___fleq
  2100 ;;		___flge
  2101 ;;		___flmul
  2102 ;;		___flneg
  2103 ;;		___flsub
  2104 ;;		___fltol
  2105 ;;		___lldiv
  2106 ;;		___llmod
  2107 ;;		___wmul
  2108 ;;		___xxtofl
  2109 ;;		__div_to_l_
  2110 ;;		__tdiv_to_l_
  2111 ;;		_fround
  2112 ;;		_isdigit
  2113 ;;		_scale
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function _sprintf
  2121  00EF                     _sprintf:	
  2122                           
  2123                           ;incstack = 0
  2124                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2125                           ;sprintf@sp stored from wreg
  2126  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  2127  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  2128  00F1  00C1               	movwf	sprintf@sp^(0+128)
  2129                           
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  2131  00F2  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2132  00F3  00A5               	movwf	??_sprintf^(0+128)
  2133  00F4  0825               	movf	??_sprintf^(0+128),w
  2134  00F5  00AE               	movwf	sprintf@ap^(0+128)
  2135  00F6                     l3828:	
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2137                           
  2138                           
  2139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2140  00F6  3001               	movlw	1
  2141  00F7  07A0               	addwf	sprintf@f^(0+128),f
  2142  00F8  30FF               	movlw	-1
  2143  00F9  0720               	addwf	sprintf@f^(0+128),w
  2144  00FA  0084               	movwf	4
  2145  00FB  120A  118A  200D  120A  118A  	fcall	stringdir
  2146  0100  00A5               	movwf	??_sprintf^(0+128)
  2147  0101  0825               	movf	??_sprintf^(0+128),w
  2148  0102  00C4               	movwf	sprintf@c^(0+128)
  2149  0103  0844               	movf	sprintf@c^(0+128),w
  2150  0104  1903               	btfsc	3,2
  2151  0105  2FEC               	goto	l3830
  2152                           
  2153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2154  0106  3025               	movlw	37
  2155  0107  0644               	xorwf	sprintf@c^(0+128),w
  2156  0108  1903               	btfsc	3,2
  2157  0109  290C               	goto	l3588
  2158                           
  2159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2160  010A  0844               	movf	sprintf@c^(0+128),w
  2161  010B  2FE1               	goto	L22
  2162  010C                     l3588:	
  2163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2164                           
  2165                           
  2166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 558:   widt
      +                          h = 0;
  2167  010C  01B5               	clrf	sprintf@width^(0+128)
  2168  010D  01B6               	clrf	(sprintf@width+1)^(0+128)
  2169                           
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2171  010E  01B3               	clrf	sprintf@flag^(0+128)
  2172  010F  01B4               	clrf	(sprintf@flag+1)^(0+128)
  2173                           
  2174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 609:   if(i
      +                          sdigit((unsigned)*f)) {
  2175  0110  0820               	movf	sprintf@f^(0+128),w
  2176  0111  0084               	movwf	4
  2177  0112  120A  118A  200D  120A  118A  	fcall	stringdir
  2178  0117  160A  158A  20F1  120A  118A  	fcall	_isdigit
  2179  011C  1C03               	btfss	3,0
  2180  011D  295C               	goto	l3602
  2181                           
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 610:    wid
      +                          th = 0;
  2183  011E  1683               	bsf	3,5	;RP0=1, select bank1
  2184  011F  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0120  01B5               	clrf	sprintf@width^(0+128)
  2186  0121  01B6               	clrf	(sprintf@width+1)^(0+128)
  2187  0122                     l3594:	
  2188                           
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 612:     wi
      +                          dth *= 10;
  2190  0122  300A               	movlw	10
  2191  0123  00F0               	movwf	___wmul@multiplier
  2192  0124  3000               	movlw	0
  2193  0125  00F1               	movwf	___wmul@multiplier+1
  2194  0126  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0127  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0128  0836               	movf	(sprintf@width+1)^(0+128),w
  2197  0129  00F3               	movwf	___wmul@multiplicand+1
  2198  012A  0835               	movf	sprintf@width^(0+128),w
  2199  012B  00F2               	movwf	___wmul@multiplicand
  2200  012C  160A  158A  215E  120A  118A  	fcall	___wmul
  2201  0131  0871               	movf	?___wmul+1,w
  2202  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0134  00B6               	movwf	(sprintf@width+1)^(0+128)
  2205  0135  0870               	movf	?___wmul,w
  2206  0136  00B5               	movwf	sprintf@width^(0+128)
  2207                           
  2208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 613:       
      +                           width += *f++ - '0';
  2209  0137  0820               	movf	sprintf@f^(0+128),w
  2210  0138  0084               	movwf	4
  2211  0139  120A  118A  200D  120A  118A  	fcall	stringdir
  2212  013E  3ED0               	addlw	208
  2213  013F  00A5               	movwf	??_sprintf^(0+128)
  2214  0140  30FF               	movlw	255
  2215  0141  1803               	skipnc
  2216  0142  3000               	movlw	0
  2217  0143  00A6               	movwf	(??_sprintf^(0+128)+1)
  2218  0144  0825               	movf	??_sprintf^(0+128),w
  2219  0145  07B5               	addwf	sprintf@width^(0+128),f
  2220  0146  1803               	skipnc
  2221  0147  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2222  0148  0826               	movf	(??_sprintf+1)^(0+128),w
  2223  0149  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2224  014A  3001               	movlw	1
  2225  014B  00A5               	movwf	??_sprintf^(0+128)
  2226  014C  0825               	movf	??_sprintf^(0+128),w
  2227  014D  07A0               	addwf	sprintf@f^(0+128),f
  2228                           
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 614:    } w
      +                          hile(isdigit((unsigned)*f));
  2230  014E  0820               	movf	sprintf@f^(0+128),w
  2231  014F  0084               	movwf	4
  2232  0150  120A  118A  200D  120A  118A  	fcall	stringdir
  2233  0155  160A  158A  20F1  120A  118A  	fcall	_isdigit
  2234  015A  1803               	btfsc	3,0
  2235  015B  2922               	goto	l3594
  2236  015C                     l3602:	
  2237                           
  2238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  2239  015C  1683               	bsf	3,5	;RP0=1, select bank1
  2240  015D  1303               	bcf	3,6	;RP1=0, select bank1
  2241  015E  0820               	movf	sprintf@f^(0+128),w
  2242  015F  0084               	movwf	4
  2243  0160  120A  118A  200D  120A  118A  	fcall	stringdir
  2244  0165  3A2E               	xorlw	46
  2245  0166  1D03               	skipz
  2246  0167  29A9               	goto	l3616
  2247                           
  2248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  2249  0168  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2250                           
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  2252  0169  3001               	movlw	1
  2253  016A  00A5               	movwf	??_sprintf^(0+128)
  2254  016B  0825               	movf	??_sprintf^(0+128),w
  2255  016C  07A0               	addwf	sprintf@f^(0+128),f
  2256                           
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  2258  016D  01C2               	clrf	sprintf@prec^(0+128)
  2259  016E  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2260  016F                     l3614:	
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  2262                           
  2263                           
  2264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  2265  016F  0820               	movf	sprintf@f^(0+128),w
  2266  0170  0084               	movwf	4
  2267  0171  120A  118A  200D  120A  118A  	fcall	stringdir
  2268  0176  160A  158A  20F1  120A  118A  	fcall	_isdigit
  2269  017B  1C03               	btfss	3,0
  2270  017C  29AF               	goto	l3622
  2271                           
  2272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  2273  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2274  017E  1303               	bcf	3,6	;RP1=0, select bank1
  2275  017F  0843               	movf	(sprintf@prec+1)^(0+128),w
  2276  0180  00F1               	movwf	___wmul@multiplier+1
  2277  0181  0842               	movf	sprintf@prec^(0+128),w
  2278  0182  00F0               	movwf	___wmul@multiplier
  2279  0183  300A               	movlw	10
  2280  0184  00F2               	movwf	___wmul@multiplicand
  2281  0185  3000               	movlw	0
  2282  0186  00F3               	movwf	___wmul@multiplicand+1
  2283  0187  160A  158A  215E  120A  118A  	fcall	___wmul
  2284  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2285  018D  1303               	bcf	3,6	;RP1=0, select bank1
  2286  018E  0820               	movf	sprintf@f^(0+128),w
  2287  018F  0084               	movwf	4
  2288  0190  120A  118A  200D  120A  118A  	fcall	stringdir
  2289  0195  0770               	addwf	?___wmul,w
  2290  0196  00A5               	movwf	??_sprintf^(0+128)
  2291  0197  3000               	movlw	0
  2292  0198  1803               	skipnc
  2293  0199  3001               	movlw	1
  2294  019A  0771               	addwf	?___wmul+1,w
  2295  019B  00A6               	movwf	(??_sprintf+1)^(0+128)
  2296  019C  0825               	movf	??_sprintf^(0+128),w
  2297  019D  3ED0               	addlw	208
  2298  019E  00C2               	movwf	sprintf@prec^(0+128)
  2299  019F  0826               	movf	(??_sprintf+1)^(0+128),w
  2300  01A0  1803               	skipnc
  2301  01A1  3E01               	addlw	1
  2302  01A2  3EFF               	addlw	255
  2303  01A3  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2304  01A4  3001               	movlw	1
  2305  01A5  00A5               	movwf	??_sprintf^(0+128)
  2306  01A6  0825               	movf	??_sprintf^(0+128),w
  2307  01A7  07A0               	addwf	sprintf@f^(0+128),f
  2308  01A8  296F               	goto	l3614
  2309  01A9                     l3616:	
  2310                           
  2311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  2312  01A9  01C2               	clrf	sprintf@prec^(0+128)
  2313  01AA  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  2316  01AB  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2317  01AC  29AF               	goto	l3622
  2318  01AD                     l336:	
  2319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  2320                           
  2321                           
  2322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  2323  01AD  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2324                           
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  2326  01AE  29CB               	goto	l3624
  2327  01AF                     l3622:	
  2328  01AF  3001               	movlw	1
  2329  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2330  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2331  01B2  07A0               	addwf	sprintf@f^(0+128),f
  2332  01B3  30FF               	movlw	-1
  2333  01B4  0720               	addwf	sprintf@f^(0+128),w
  2334  01B5  0084               	movwf	4
  2335  01B6  120A  118A  200D  120A  118A  	fcall	stringdir
  2336  01BB  00C4               	movwf	sprintf@c^(0+128)
  2337  01BC  00A5               	movwf	??_sprintf^(0+128)
  2338  01BD  01A6               	clrf	(??_sprintf^(0+128)+1)
  2339                           
  2340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2341                           ; Switch size 1, requested type "simple"
  2342                           ; Number of cases is 1, Range of values is 0 to 0
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte            4     3 (average)
  2346                           ; direct_byte           11     8 (fixed)
  2347                           ; jumptable            260     6 (fixed)
  2348                           ;	Chosen strategy is simple_byte
  2349  01BE  0826               	movf	(??_sprintf+1)^(0+128),w
  2350  01BF  3A00               	xorlw	0	; case 0
  2351  01C0  1903               	skipnz
  2352  01C1  29C3               	goto	l4134
  2353  01C2  28F6               	goto	l3828
  2354  01C3                     l4134:	
  2355                           
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 2, Range of values is 0 to 102
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte            7     4 (average)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ;	Chosen strategy is simple_byte
  2363  01C3  0825               	movf	??_sprintf^(0+128),w
  2364  01C4  3A00               	xorlw	0	; case 0
  2365  01C5  1903               	skipnz
  2366  01C6  2FEC               	goto	l3830
  2367  01C7  3A66               	xorlw	102	; case 102
  2368  01C8  1903               	skipnz
  2369  01C9  29AD               	goto	l336
  2370  01CA  28F6               	goto	l3828
  2371  01CB                     l3624:	
  2372                           
  2373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  2374  01CB  3000               	movlw	0
  2375  01CC  0533               	andwf	sprintf@flag^(0+128),w
  2376  01CD  00A5               	movwf	??_sprintf^(0+128)
  2377  01CE  3007               	movlw	7
  2378  01CF  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2379  01D0  00A6               	movwf	(??_sprintf+1)^(0+128)
  2380  01D1  0825               	movf	??_sprintf^(0+128),w
  2381  01D2  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2382  01D3  1903               	btfsc	3,2
  2383  01D4  2F3D               	goto	l3782
  2384                           
  2385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  2386  01D5  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2387  01D6  29DB               	goto	l3630
  2388                           
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  2390  01D7  3006               	movlw	6
  2391  01D8  00C2               	movwf	sprintf@prec^(0+128)
  2392  01D9  3000               	movlw	0
  2393  01DA  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2394  01DB                     l3630:	
  2395                           
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2397  01DB  082E               	movf	sprintf@ap^(0+128),w
  2398  01DC  0084               	movwf	4
  2399  01DD  1383               	bcf	3,7	;select IRP bank0
  2400  01DE  0800               	movf	0,w
  2401  01DF  00BD               	movwf	sprintf@fval^(0+128)
  2402  01E0  0A84               	incf	4,f
  2403  01E1  0800               	movf	0,w
  2404  01E2  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2405  01E3  0A84               	incf	4,f
  2406  01E4  0800               	movf	0,w
  2407  01E5  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2408  01E6  0A84               	incf	4,f
  2409  01E7  0800               	movf	0,w
  2410  01E8  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2411  01E9  3004               	movlw	4
  2412  01EA  00A5               	movwf	??_sprintf^(0+128)
  2413  01EB  0825               	movf	??_sprintf^(0+128),w
  2414  01EC  07AE               	addwf	sprintf@ap^(0+128),f
  2415                           
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  2417  01ED  0840               	movf	(sprintf@fval+3)^(0+128),w
  2418  01EE  00F3               	movwf	___flge@ff1+3
  2419  01EF  083F               	movf	(sprintf@fval+2)^(0+128),w
  2420  01F0  00F2               	movwf	___flge@ff1+2
  2421  01F1  083E               	movf	(sprintf@fval+1)^(0+128),w
  2422  01F2  00F1               	movwf	___flge@ff1+1
  2423  01F3  083D               	movf	sprintf@fval^(0+128),w
  2424  01F4  00F0               	movwf	___flge@ff1
  2425  01F5  3000               	movlw	0
  2426  01F6  00F7               	movwf	___flge@ff2+3
  2427  01F7  3000               	movlw	0
  2428  01F8  00F6               	movwf	___flge@ff2+2
  2429  01F9  3000               	movlw	0
  2430  01FA  00F5               	movwf	___flge@ff2+1
  2431  01FB  3000               	movlw	0
  2432  01FC  00F4               	movwf	___flge@ff2
  2433  01FD  160A  158A  256C  120A  118A  	fcall	___flge
  2434  0202  1803               	btfsc	3,0
  2435  0203  2A21               	goto	l3640
  2436                           
  2437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  2438  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0206  0840               	movf	(sprintf@fval+3)^(0+128),w
  2441  0207  00F3               	movwf	___flneg@f1+3
  2442  0208  083F               	movf	(sprintf@fval+2)^(0+128),w
  2443  0209  00F2               	movwf	___flneg@f1+2
  2444  020A  083E               	movf	(sprintf@fval+1)^(0+128),w
  2445  020B  00F1               	movwf	___flneg@f1+1
  2446  020C  083D               	movf	sprintf@fval^(0+128),w
  2447  020D  00F0               	movwf	___flneg@f1
  2448  020E  160A  158A  20E8  120A  118A  	fcall	___flneg
  2449  0213  0873               	movf	?___flneg+3,w
  2450  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0216  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2453  0217  0872               	movf	?___flneg+2,w
  2454  0218  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2455  0219  0871               	movf	?___flneg+1,w
  2456  021A  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2457  021B  0870               	movf	?___flneg,w
  2458  021C  00BD               	movwf	sprintf@fval^(0+128)
  2459                           
  2460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  2461  021D  3003               	movlw	3
  2462  021E  04B3               	iorwf	sprintf@flag^(0+128),f
  2463  021F  3000               	movlw	0
  2464  0220  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2465  0221                     l3640:	
  2466                           
  2467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  2468  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0222  1303               	bcf	3,6	;RP1=0, select bank1
  2470  0223  01BB               	clrf	sprintf@eexp^(0+128)
  2471  0224  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2472                           
  2473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  2474  0225  0840               	movf	(sprintf@fval+3)^(0+128),w
  2475  0226  00F3               	movwf	___fleq@ff1+3
  2476  0227  083F               	movf	(sprintf@fval+2)^(0+128),w
  2477  0228  00F2               	movwf	___fleq@ff1+2
  2478  0229  083E               	movf	(sprintf@fval+1)^(0+128),w
  2479  022A  00F1               	movwf	___fleq@ff1+1
  2480  022B  083D               	movf	sprintf@fval^(0+128),w
  2481  022C  00F0               	movwf	___fleq@ff1
  2482  022D  3000               	movlw	0
  2483  022E  00F7               	movwf	___fleq@ff2+3
  2484  022F  3000               	movlw	0
  2485  0230  00F6               	movwf	___fleq@ff2+2
  2486  0231  3000               	movlw	0
  2487  0232  00F5               	movwf	___fleq@ff2+1
  2488  0233  3000               	movlw	0
  2489  0234  00F4               	movwf	___fleq@ff2
  2490  0235  160A  158A  22D1  120A  118A  	fcall	___fleq
  2491  023A  1803               	btfsc	3,0
  2492  023B  2B25               	goto	l3668
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2495  023C  1003               	clrc
  2496  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2497  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2498  023F  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2499  0240  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2500  0241  3E82               	addlw	130
  2501  0242  00BB               	movwf	sprintf@eexp^(0+128)
  2502  0243  30FF               	movlw	255
  2503  0244  1803               	skipnc
  2504  0245  3000               	movlw	0
  2505  0246  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2506                           
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  2508  0247  30FF               	movlw	255
  2509  0248  07BB               	addwf	sprintf@eexp^(0+128),f
  2510  0249  1803               	skipnc
  2511  024A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2512  024B  30FF               	movlw	255
  2513  024C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2514                           
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  2516  024D  3003               	movlw	3
  2517  024E  00F0               	movwf	___wmul@multiplier
  2518  024F  3000               	movlw	0
  2519  0250  00F1               	movwf	___wmul@multiplier+1
  2520  0251  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2521  0252  00F3               	movwf	___wmul@multiplicand+1
  2522  0253  083B               	movf	sprintf@eexp^(0+128),w
  2523  0254  00F2               	movwf	___wmul@multiplicand
  2524  0255  160A  158A  215E  120A  118A  	fcall	___wmul
  2525  025A  0871               	movf	?___wmul+1,w
  2526  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2527  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2528  025D  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2529  025E  0870               	movf	?___wmul,w
  2530  025F  00BB               	movwf	sprintf@eexp^(0+128)
  2531                           
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  2533  0260  300A               	movlw	10
  2534  0261  00F7               	movwf	___awdiv@divisor
  2535  0262  3000               	movlw	0
  2536  0263  00F8               	movwf	___awdiv@divisor+1
  2537  0264  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2538  0265  00FA               	movwf	___awdiv@dividend+1
  2539  0266  083B               	movf	sprintf@eexp^(0+128),w
  2540  0267  00F9               	movwf	___awdiv@dividend
  2541  0268  160A  158A  2364  120A  118A  	fcall	___awdiv
  2542  026D  0878               	movf	?___awdiv+1,w
  2543  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2544  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2545  0270  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2546  0271  0877               	movf	?___awdiv,w
  2547  0272  00BB               	movwf	sprintf@eexp^(0+128)
  2548                           
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  2550  0273  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2551  0274  2A7B               	goto	l3656
  2552                           
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  2554  0275  30FF               	movlw	255
  2555  0276  07BB               	addwf	sprintf@eexp^(0+128),f
  2556  0277  1803               	skipnc
  2557  0278  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2558  0279  30FF               	movlw	255
  2559  027A  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2560  027B                     l3656:	
  2561                           
  2562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  2563  027B  033B               	decf	sprintf@eexp^(0+128),w
  2564  027C  3AFF               	xorlw	255
  2565  027D  120A  158A  24B7  120A  118A  	fcall	_scale
  2566  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0284  0841               	movf	?_scale+3,w
  2569  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0286  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0287  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2572  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2574  028A  0840               	movf	?_scale+2,w
  2575  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2576  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2577  028D  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2578  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2579  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0290  083F               	movf	?_scale+1,w
  2581  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2582  0292  1303               	bcf	3,6	;RP1=0, select bank1
  2583  0293  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2584  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0296  083E               	movf	?_scale,w
  2587  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2588  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2589  0299  00B7               	movwf	sprintf@tmpval^(0+128)
  2590                           
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  2592  029A  0840               	movf	(sprintf@fval+3)^(0+128),w
  2593  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2594  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2595  029D  00A7               	movwf	___flmul@b+3
  2596  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2597  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2598  02A0  083F               	movf	(sprintf@fval+2)^(0+128),w
  2599  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02A3  00A6               	movwf	___flmul@b+2
  2602  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2603  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2604  02A6  083E               	movf	(sprintf@fval+1)^(0+128),w
  2605  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2606  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2607  02A9  00A5               	movwf	___flmul@b+1
  2608  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2609  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  2610  02AC  083D               	movf	sprintf@fval^(0+128),w
  2611  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2612  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2613  02AF  00A4               	movwf	___flmul@b
  2614  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2615  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2616  02B2  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2617  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2618  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2619  02B5  00AB               	movwf	___flmul@a+3
  2620  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2621  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2622  02B8  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2623  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2624  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2625  02BB  00AA               	movwf	___flmul@a+2
  2626  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2627  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2628  02BE  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2629  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2630  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2631  02C1  00A9               	movwf	___flmul@a+1
  2632  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2633  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2634  02C4  0837               	movf	sprintf@tmpval^(0+128),w
  2635  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2636  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2637  02C7  00A8               	movwf	___flmul@a
  2638  02C8  120A  158A  21A2  120A  118A  	fcall	___flmul
  2639  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2640  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2641  02CF  0827               	movf	?___flmul+3,w
  2642  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2643  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2644  02D2  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2645  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2646  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2647  02D5  0826               	movf	?___flmul+2,w
  2648  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2649  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2650  02D8  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2651  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2652  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2653  02DB  0825               	movf	?___flmul+1,w
  2654  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2655  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2656  02DE  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2657  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2658  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2659  02E1  0824               	movf	?___flmul,w
  2660  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2661  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2662  02E4  00B7               	movwf	sprintf@tmpval^(0+128)
  2663                           
  2664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  2665  02E5  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2666  02E6  00F3               	movwf	___flge@ff1+3
  2667  02E7  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2668  02E8  00F2               	movwf	___flge@ff1+2
  2669  02E9  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2670  02EA  00F1               	movwf	___flge@ff1+1
  2671  02EB  0837               	movf	sprintf@tmpval^(0+128),w
  2672  02EC  00F0               	movwf	___flge@ff1
  2673  02ED  303F               	movlw	63
  2674  02EE  00F7               	movwf	___flge@ff2+3
  2675  02EF  3080               	movlw	128
  2676  02F0  00F6               	movwf	___flge@ff2+2
  2677  02F1  3000               	movlw	0
  2678  02F2  00F5               	movwf	___flge@ff2+1
  2679  02F3  3000               	movlw	0
  2680  02F4  00F4               	movwf	___flge@ff2
  2681  02F5  160A  158A  256C  120A  118A  	fcall	___flge
  2682  02FA  1803               	btfsc	3,0
  2683  02FB  2B04               	goto	l3664
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2686  02FC  30FF               	movlw	255
  2687  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2688  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2689  02FF  07BB               	addwf	sprintf@eexp^(0+128),f
  2690  0300  1803               	skipnc
  2691  0301  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2692  0302  30FF               	movlw	255
  2693  0303  2B24               	goto	L17
  2694  0304                     l3664:	
  2695  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2696  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2697  0306  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2698  0307  00F3               	movwf	___flge@ff1+3
  2699  0308  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2700  0309  00F2               	movwf	___flge@ff1+2
  2701  030A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2702  030B  00F1               	movwf	___flge@ff1+1
  2703  030C  0837               	movf	sprintf@tmpval^(0+128),w
  2704  030D  00F0               	movwf	___flge@ff1
  2705  030E  3041               	movlw	65
  2706  030F  00F7               	movwf	___flge@ff2+3
  2707  0310  3020               	movlw	32
  2708  0311  00F6               	movwf	___flge@ff2+2
  2709  0312  3000               	movlw	0
  2710  0313  00F5               	movwf	___flge@ff2+1
  2711  0314  3000               	movlw	0
  2712  0315  00F4               	movwf	___flge@ff2
  2713  0316  160A  158A  256C  120A  118A  	fcall	___flge
  2714  031B  1C03               	btfss	3,0
  2715  031C  2B25               	goto	l3668
  2716                           
  2717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  2718  031D  3001               	movlw	1
  2719  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2720  031F  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0320  07BB               	addwf	sprintf@eexp^(0+128),f
  2722  0321  1803               	skipnc
  2723  0322  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2724  0323  3000               	movlw	0
  2725  0324                     L17:	
  2726  0324  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2727  0325                     l3668:	
  2728                           
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  2730  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0327  0843               	movf	(sprintf@prec+1)^(0+128),w
  2733  0328  3A80               	xorlw	128
  2734  0329  00FF               	movwf	127
  2735  032A  3080               	movlw	128
  2736  032B  027F               	subwf	127,w
  2737  032C  1D03               	skipz
  2738  032D  2B30               	goto	u5625
  2739  032E  300D               	movlw	13
  2740  032F  0242               	subwf	sprintf@prec^(0+128),w
  2741  0330                     u5625:	
  2742  0330  1803               	skipnc
  2743  0331  2B79               	goto	l3672
  2744                           
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  2746  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0334  0842               	movf	sprintf@prec^(0+128),w
  2749  0335  160A  158A  25FF  120A  118A  	fcall	_fround
  2750  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2751  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2752  033C  0841               	movf	?_fround+3,w
  2753  033D  00D5               	movwf	___fladd@b+3
  2754  033E  0840               	movf	?_fround+2,w
  2755  033F  00D4               	movwf	___fladd@b+2
  2756  0340  083F               	movf	?_fround+1,w
  2757  0341  00D3               	movwf	___fladd@b+1
  2758  0342  083E               	movf	?_fround,w
  2759  0343  00D2               	movwf	___fladd@b
  2760  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0346  0840               	movf	(sprintf@fval+3)^(0+128),w
  2763  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0349  00D9               	movwf	___fladd@a+3
  2766  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2767  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2768  034C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2769  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2770  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2771  034F  00D8               	movwf	___fladd@a+2
  2772  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2773  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2774  0352  083E               	movf	(sprintf@fval+1)^(0+128),w
  2775  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0355  00D7               	movwf	___fladd@a+1
  2778  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0358  083D               	movf	sprintf@fval^(0+128),w
  2781  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2782  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2783  035B  00D6               	movwf	___fladd@a
  2784  035C  160A  118A  2142  120A  118A  	fcall	___fladd
  2785  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0363  0855               	movf	?___fladd+3,w
  2788  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2790  0366  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2791  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2792  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0369  0854               	movf	?___fladd+2,w
  2794  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2795  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2796  036C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2797  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2798  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2799  036F  0853               	movf	?___fladd+1,w
  2800  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0371  1303               	bcf	3,6	;RP1=0, select bank1
  2802  0372  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2803  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0375  0852               	movf	?___fladd,w
  2806  0376  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0377  1303               	bcf	3,6	;RP1=0, select bank1
  2808  0378  00BD               	movwf	sprintf@fval^(0+128)
  2809  0379                     l3672:	
  2810                           
  2811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2812  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2813  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2814  037B  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2815  037C  3A80               	xorlw	128
  2816  037D  00FF               	movwf	127
  2817  037E  3080               	movlw	128
  2818  037F  027F               	subwf	127,w
  2819  0380  1D03               	skipz
  2820  0381  2B84               	goto	u5635
  2821  0382  300A               	movlw	10
  2822  0383  023B               	subwf	sprintf@eexp^(0+128),w
  2823  0384                     u5635:	
  2824  0384  1803               	skipnc
  2825  0385  2BD1               	goto	l3680
  2826  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2827  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2828  0388  0840               	movf	(sprintf@fval+3)^(0+128),w
  2829  0389  00F3               	movwf	___fleq@ff1+3
  2830  038A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2831  038B  00F2               	movwf	___fleq@ff1+2
  2832  038C  083E               	movf	(sprintf@fval+1)^(0+128),w
  2833  038D  00F1               	movwf	___fleq@ff1+1
  2834  038E  083D               	movf	sprintf@fval^(0+128),w
  2835  038F  00F0               	movwf	___fleq@ff1
  2836  0390  3000               	movlw	0
  2837  0391  00F7               	movwf	___fleq@ff2+3
  2838  0392  3000               	movlw	0
  2839  0393  00F6               	movwf	___fleq@ff2+2
  2840  0394  3000               	movlw	0
  2841  0395  00F5               	movwf	___fleq@ff2+1
  2842  0396  3000               	movlw	0
  2843  0397  00F4               	movwf	___fleq@ff2
  2844  0398  160A  158A  22D1  120A  118A  	fcall	___fleq
  2845  039D  1803               	btfsc	3,0
  2846  039E  2C3A               	goto	l3694
  2847  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2848  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2849  03A1  0840               	movf	(sprintf@fval+3)^(0+128),w
  2850  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2851  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2852  03A4  00D4               	movwf	___fltol@f1+3
  2853  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2854  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2855  03A7  083F               	movf	(sprintf@fval+2)^(0+128),w
  2856  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2857  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2858  03AA  00D3               	movwf	___fltol@f1+2
  2859  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2860  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2861  03AD  083E               	movf	(sprintf@fval+1)^(0+128),w
  2862  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2863  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2864  03B0  00D2               	movwf	___fltol@f1+1
  2865  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2866  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2867  03B3  083D               	movf	sprintf@fval^(0+128),w
  2868  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2869  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2870  03B6  00D1               	movwf	___fltol@f1
  2871  03B7  160A  158A  2480  120A  118A  	fcall	___fltol
  2872  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2873  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2874  03BE  0854               	movf	?___fltol+3,w
  2875  03BF  0453               	iorwf	?___fltol+2,w
  2876  03C0  0452               	iorwf	?___fltol+1,w
  2877  03C1  0451               	iorwf	?___fltol,w
  2878  03C2  1D03               	skipz
  2879  03C3  2C3A               	goto	l3694
  2880  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2881  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2882  03C6  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2883  03C7  3A80               	xorlw	128
  2884  03C8  00FF               	movwf	127
  2885  03C9  3080               	movlw	128
  2886  03CA  027F               	subwf	127,w
  2887  03CB  1D03               	skipz
  2888  03CC  2BCF               	goto	u5665
  2889  03CD  3002               	movlw	2
  2890  03CE  023B               	subwf	sprintf@eexp^(0+128),w
  2891  03CF                     u5665:	
  2892  03CF  1C03               	skipc
  2893  03D0  2C3A               	goto	l3694
  2894  03D1                     l3680:	
  2895                           
  2896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2897  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2898  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  2899  03D3  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2900  03D4  00F3               	movwf	___flge@ff1+3
  2901  03D5  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2902  03D6  00F2               	movwf	___flge@ff1+2
  2903  03D7  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2904  03D8  00F1               	movwf	___flge@ff1+1
  2905  03D9  0837               	movf	sprintf@tmpval^(0+128),w
  2906  03DA  00F0               	movwf	___flge@ff1
  2907  03DB  3040               	movlw	64
  2908  03DC  00F7               	movwf	___flge@ff2+3
  2909  03DD  3089               	movlw	137
  2910  03DE  00F6               	movwf	___flge@ff2+2
  2911  03DF  3070               	movlw	112
  2912  03E0  00F5               	movwf	___flge@ff2+1
  2913  03E1  305F               	movlw	95
  2914  03E2  00F4               	movwf	___flge@ff2
  2915  03E3  160A  158A  256C  120A  118A  	fcall	___flge
  2916  03E8  1803               	btfsc	3,0
  2917  03E9  2BEC               	goto	l3684
  2918                           
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2920  03EA  30F7               	movlw	247
  2921  03EB  2BED               	goto	L18
  2922  03EC                     l3684:	
  2923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2924                           
  2925                           
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2927  03EC  30F8               	movlw	248
  2928  03ED                     L18:	
  2929  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2930  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2931  03EF  07BB               	addwf	sprintf@eexp^(0+128),f
  2932  03F0  1803               	skipnc
  2933  03F1  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2934  03F2  30FF               	movlw	255
  2935  03F3  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2936                           
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2938  03F4  083B               	movf	sprintf@eexp^(0+128),w
  2939  03F5  120A  158A  24B7  120A  118A  	fcall	_scale
  2940  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2941  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2942  03FC  0841               	movf	?_scale+3,w
  2943  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2944  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2945  03FF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2946  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0402  0840               	movf	?_scale+2,w
  2949  0403  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0404  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0405  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2952  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0408  083F               	movf	?_scale+1,w
  2955  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2956  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2957  040B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2958  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2959  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2960  040E  083E               	movf	?_scale,w
  2961  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2962  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2963  0411  00B7               	movwf	sprintf@tmpval^(0+128)
  2964  0412  0840               	movf	(sprintf@fval+3)^(0+128),w
  2965  0413  00F3               	movwf	__div_to_l_@f1+3
  2966  0414  083F               	movf	(sprintf@fval+2)^(0+128),w
  2967  0415  00F2               	movwf	__div_to_l_@f1+2
  2968  0416  083E               	movf	(sprintf@fval+1)^(0+128),w
  2969  0417  00F1               	movwf	__div_to_l_@f1+1
  2970  0418  083D               	movf	sprintf@fval^(0+128),w
  2971  0419  00F0               	movwf	__div_to_l_@f1
  2972  041A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2973  041B  00F7               	movwf	__div_to_l_@f2+3
  2974  041C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2975  041D  00F6               	movwf	__div_to_l_@f2+2
  2976  041E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2977  041F  00F5               	movwf	__div_to_l_@f2+1
  2978  0420  0837               	movf	sprintf@tmpval^(0+128),w
  2979  0421  00F4               	movwf	__div_to_l_@f2
  2980  0422  120A  158A  20F8  120A  118A  	fcall	__div_to_l_
  2981  0427  0873               	movf	?__div_to_l_+3,w
  2982  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2984  042A  00B2               	movwf	(sprintf@val+3)^(0+128)
  2985  042B  0872               	movf	?__div_to_l_+2,w
  2986  042C  00B1               	movwf	(sprintf@val+2)^(0+128)
  2987  042D  0871               	movf	?__div_to_l_+1,w
  2988  042E  00B0               	movwf	(sprintf@val+1)^(0+128)
  2989  042F  0870               	movf	?__div_to_l_,w
  2990  0430  00AF               	movwf	sprintf@val^(0+128)
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2993  0431  3000               	movlw	0
  2994  0432  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2995  0433  3000               	movlw	0
  2996  0434  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2997  0435  3000               	movlw	0
  2998  0436  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2999  0437  3000               	movlw	0
  3000  0438  00BD               	movwf	sprintf@fval^(0+128)
  3001                           
  3002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  3003  0439  2CBE               	goto	l3700
  3004  043A                     l3694:	
  3005                           
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  3007  043A  1683               	bsf	3,5	;RP0=1, select bank1
  3008  043B  1303               	bcf	3,6	;RP1=0, select bank1
  3009  043C  0840               	movf	(sprintf@fval+3)^(0+128),w
  3010  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3011  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3012  043F  00D4               	movwf	___fltol@f1+3
  3013  0440  1683               	bsf	3,5	;RP0=1, select bank1
  3014  0441  1303               	bcf	3,6	;RP1=0, select bank1
  3015  0442  083F               	movf	(sprintf@fval+2)^(0+128),w
  3016  0443  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0444  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0445  00D3               	movwf	___fltol@f1+2
  3019  0446  1683               	bsf	3,5	;RP0=1, select bank1
  3020  0447  1303               	bcf	3,6	;RP1=0, select bank1
  3021  0448  083E               	movf	(sprintf@fval+1)^(0+128),w
  3022  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3023  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3024  044B  00D2               	movwf	___fltol@f1+1
  3025  044C  1683               	bsf	3,5	;RP0=1, select bank1
  3026  044D  1303               	bcf	3,6	;RP1=0, select bank1
  3027  044E  083D               	movf	sprintf@fval^(0+128),w
  3028  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0450  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0451  00D1               	movwf	___fltol@f1
  3031  0452  160A  158A  2480  120A  118A  	fcall	___fltol
  3032  0457  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0458  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0459  0854               	movf	?___fltol+3,w
  3035  045A  1683               	bsf	3,5	;RP0=1, select bank1
  3036  045B  1303               	bcf	3,6	;RP1=0, select bank1
  3037  045C  00B2               	movwf	(sprintf@val+3)^(0+128)
  3038  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3039  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3040  045F  0853               	movf	?___fltol+2,w
  3041  0460  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0461  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0462  00B1               	movwf	(sprintf@val+2)^(0+128)
  3044  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0465  0852               	movf	?___fltol+1,w
  3047  0466  1683               	bsf	3,5	;RP0=1, select bank1
  3048  0467  1303               	bcf	3,6	;RP1=0, select bank1
  3049  0468  00B0               	movwf	(sprintf@val+1)^(0+128)
  3050  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3051  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3052  046B  0851               	movf	?___fltol,w
  3053  046C  1683               	bsf	3,5	;RP0=1, select bank1
  3054  046D  1303               	bcf	3,6	;RP1=0, select bank1
  3055  046E  00AF               	movwf	sprintf@val^(0+128)
  3056                           
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  3058  046F  0832               	movf	(sprintf@val+3)^(0+128),w
  3059  0470  00F3               	movwf	___xxtofl@val+3
  3060  0471  0831               	movf	(sprintf@val+2)^(0+128),w
  3061  0472  00F2               	movwf	___xxtofl@val+2
  3062  0473  0830               	movf	(sprintf@val+1)^(0+128),w
  3063  0474  00F1               	movwf	___xxtofl@val+1
  3064  0475  082F               	movf	sprintf@val^(0+128),w
  3065  0476  00F0               	movwf	___xxtofl@val
  3066  0477  3000               	movlw	0
  3067  0478  160A  118A  209F  120A  118A  	fcall	___xxtofl
  3068  047D  0873               	movf	?___xxtofl+3,w
  3069  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3070  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3071  0480  00E9               	movwf	___flsub@a+3
  3072  0481  0872               	movf	?___xxtofl+2,w
  3073  0482  00E8               	movwf	___flsub@a+2
  3074  0483  0871               	movf	?___xxtofl+1,w
  3075  0484  00E7               	movwf	___flsub@a+1
  3076  0485  0870               	movf	?___xxtofl,w
  3077  0486  00E6               	movwf	___flsub@a
  3078  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0488  1303               	bcf	3,6	;RP1=0, select bank1
  3080  0489  0840               	movf	(sprintf@fval+3)^(0+128),w
  3081  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3082  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3083  048C  00ED               	movwf	___flsub@b+3
  3084  048D  1683               	bsf	3,5	;RP0=1, select bank1
  3085  048E  1303               	bcf	3,6	;RP1=0, select bank1
  3086  048F  083F               	movf	(sprintf@fval+2)^(0+128),w
  3087  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3089  0492  00EC               	movwf	___flsub@b+2
  3090  0493  1683               	bsf	3,5	;RP0=1, select bank1
  3091  0494  1303               	bcf	3,6	;RP1=0, select bank1
  3092  0495  083E               	movf	(sprintf@fval+1)^(0+128),w
  3093  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0497  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0498  00EB               	movwf	___flsub@b+1
  3096  0499  1683               	bsf	3,5	;RP0=1, select bank1
  3097  049A  1303               	bcf	3,6	;RP1=0, select bank1
  3098  049B  083D               	movf	sprintf@fval^(0+128),w
  3099  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3100  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3101  049E  00EA               	movwf	___flsub@b
  3102  049F  160A  158A  217F  120A  118A  	fcall	___flsub
  3103  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3104  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3105  04A6  0869               	movf	?___flsub+3,w
  3106  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  3107  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  3108  04A9  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3109  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3110  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3111  04AC  0868               	movf	?___flsub+2,w
  3112  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  3113  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  3114  04AF  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3115  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3116  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3117  04B2  0867               	movf	?___flsub+1,w
  3118  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  3119  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  3120  04B5  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3121  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3122  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3123  04B8  0866               	movf	?___flsub,w
  3124  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3125  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3126  04BB  00BD               	movwf	sprintf@fval^(0+128)
  3127                           
  3128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  3129  04BC  01BB               	clrf	sprintf@eexp^(0+128)
  3130  04BD  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3131  04BE                     l3700:	
  3132                           
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3134  04BE  01C4               	clrf	sprintf@c^(0+128)
  3135  04BF  0AC4               	incf	sprintf@c^(0+128),f
  3136  04C0                     l3706:	
  3137                           
  3138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  3139  04C0  0844               	movf	sprintf@c^(0+128),w
  3140  04C1  00A5               	movwf	??_sprintf^(0+128)
  3141  04C2  3001               	movlw	1
  3142  04C3                     u5685:	
  3143  04C3  1003               	clrc
  3144  04C4  0DA5               	rlf	??_sprintf^(0+128),f
  3145  04C5  3EFF               	addlw	-1
  3146  04C6  1D03               	skipz
  3147  04C7  2CC3               	goto	u5685
  3148  04C8  1003               	clrc
  3149  04C9  0D25               	rlf	??_sprintf^(0+128),w
  3150  04CA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3151  04CB  0084               	movwf	4
  3152  04CC  120A  118A  200D  120A  118A  	fcall	stringdir
  3153  04D1  00A6               	movwf	(??_sprintf+1)^(0+128)
  3154  04D2  120A  118A  200D  120A  118A  	fcall	stringdir
  3155  04D7  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3156  04D8  120A  118A  200D  120A  118A  	fcall	stringdir
  3157  04DD  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3158  04DE  120A  118A  200D  120A  118A  	fcall	stringdir
  3159  04E3  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3160  04E4  0829               	movf	(??_sprintf+4)^(0+128),w
  3161  04E5  0232               	subwf	(sprintf@val+3)^(0+128),w
  3162  04E6  1D03               	skipz
  3163  04E7  2CF2               	goto	u5695
  3164  04E8  0828               	movf	(??_sprintf+3)^(0+128),w
  3165  04E9  0231               	subwf	(sprintf@val+2)^(0+128),w
  3166  04EA  1D03               	skipz
  3167  04EB  2CF2               	goto	u5695
  3168  04EC  0827               	movf	(??_sprintf+2)^(0+128),w
  3169  04ED  0230               	subwf	(sprintf@val+1)^(0+128),w
  3170  04EE  1D03               	skipz
  3171  04EF  2CF2               	goto	u5695
  3172  04F0  0826               	movf	(??_sprintf+1)^(0+128),w
  3173  04F1  022F               	subwf	sprintf@val^(0+128),w
  3174  04F2                     u5695:	
  3175  04F2  1C03               	btfss	3,0
  3176  04F3  2CFC               	goto	l3712
  3177  04F4  3001               	movlw	1
  3178  04F5  00A5               	movwf	??_sprintf^(0+128)
  3179  04F6  0825               	movf	??_sprintf^(0+128),w
  3180  04F7  07C4               	addwf	sprintf@c^(0+128),f
  3181  04F8  300A               	movlw	10
  3182  04F9  0644               	xorwf	sprintf@c^(0+128),w
  3183  04FA  1D03               	btfss	3,2
  3184  04FB  2CC0               	goto	l3706
  3185  04FC                     l3712:	
  3186                           
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1161:     w
      +                          idth -= prec + c + eexp;
  3188  04FC  0844               	movf	sprintf@c^(0+128),w
  3189  04FD  0742               	addwf	sprintf@prec^(0+128),w
  3190  04FE  00A5               	movwf	??_sprintf^(0+128)
  3191  04FF  0843               	movf	(sprintf@prec+1)^(0+128),w
  3192  0500  1803               	skipnc
  3193  0501  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3194  0502  00A6               	movwf	(??_sprintf^(0+128)+1)
  3195  0503  083B               	movf	sprintf@eexp^(0+128),w
  3196  0504  0725               	addwf	??_sprintf^(0+128),w
  3197  0505  00A7               	movwf	(??_sprintf+2)^(0+128)
  3198  0506  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3199  0507  1803               	skipnc
  3200  0508  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3201  0509  0726               	addwf	(??_sprintf+1)^(0+128),w
  3202  050A  00A8               	movwf	(??_sprintf+3)^(0+128)
  3203  050B  0827               	movf	(??_sprintf+2)^(0+128),w
  3204  050C  02B5               	subwf	sprintf@width^(0+128),f
  3205  050D  0828               	movf	(??_sprintf+3)^(0+128),w
  3206  050E  1C03               	skipc
  3207  050F  03B6               	decf	(sprintf@width+1)^(0+128),f
  3208  0510  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3209                           
  3210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1162:     i
      +                          f(
  3211  0511  0842               	movf	sprintf@prec^(0+128),w
  3212  0512  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3213  0513  1903               	btfsc	3,2
  3214  0514  2D1B               	goto	l3716
  3215                           
  3216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1167:      
      +                          width--;
  3217  0515  30FF               	movlw	255
  3218  0516  07B5               	addwf	sprintf@width^(0+128),f
  3219  0517  1803               	skipnc
  3220  0518  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3221  0519  30FF               	movlw	255
  3222  051A  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3223  051B                     l3716:	
  3224                           
  3225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1168:     i
      +                          f(flag & 0x03)
  3226  051B  3003               	movlw	3
  3227  051C  0533               	andwf	sprintf@flag^(0+128),w
  3228  051D  00A5               	movwf	??_sprintf^(0+128)
  3229  051E  3000               	movlw	0
  3230  051F  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3231  0520  00A6               	movwf	(??_sprintf+1)^(0+128)
  3232  0521  0825               	movf	??_sprintf^(0+128),w
  3233  0522  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3234  0523  1D03               	btfss	3,2
  3235  0524  2D3D               	goto	l3718
  3236  0525                     l3726:	
  3237                           
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1199:      
      +                          while(width > 0) {
  3239  0525  0836               	movf	(sprintf@width+1)^(0+128),w
  3240  0526  3A80               	xorlw	128
  3241  0527  00FF               	movwf	127
  3242  0528  3080               	movlw	128
  3243  0529  027F               	subwf	127,w
  3244  052A  1D03               	skipz
  3245  052B  2D2E               	goto	u5735
  3246  052C  3001               	movlw	1
  3247  052D  0235               	subwf	sprintf@width^(0+128),w
  3248  052E                     u5735:	
  3249  052E  1C03               	btfss	3,0
  3250  052F  2D44               	goto	l3728
  3251                           
  3252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1200:      
      +                           ((*sp++ = (' ')));
  3253  0530  3020               	movlw	32
  3254  0531  1683               	bsf	3,5	;RP0=1, select bank1
  3255  0532  1303               	bcf	3,6	;RP1=0, select bank1
  3256  0533  00A5               	movwf	??_sprintf^(0+128)
  3257  0534  0841               	movf	sprintf@sp^(0+128),w
  3258  0535  0084               	movwf	4
  3259  0536  0825               	movf	??_sprintf^(0+128),w
  3260  0537  1383               	bcf	3,7	;select IRP bank0
  3261  0538  0080               	movwf	0
  3262  0539  3001               	movlw	1
  3263  053A  00A5               	movwf	??_sprintf^(0+128)
  3264  053B  0825               	movf	??_sprintf^(0+128),w
  3265  053C  07C1               	addwf	sprintf@sp^(0+128),f
  3266  053D                     l3718:	
  3267                           
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1169:      
      +                          width--;
  3269  053D  30FF               	movlw	255
  3270  053E  07B5               	addwf	sprintf@width^(0+128),f
  3271  053F  1803               	skipnc
  3272  0540  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3273  0541  30FF               	movlw	255
  3274  0542  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3275  0543  2D25               	goto	l3726
  3276  0544                     l3728:	
  3277                           
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  3279  0544  3003               	movlw	3
  3280  0545  1683               	bsf	3,5	;RP0=1, select bank1
  3281  0546  1303               	bcf	3,6	;RP1=0, select bank1
  3282  0547  0533               	andwf	sprintf@flag^(0+128),w
  3283  0548  00A5               	movwf	??_sprintf^(0+128)
  3284  0549  3000               	movlw	0
  3285  054A  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3286  054B  00A6               	movwf	(??_sprintf+1)^(0+128)
  3287  054C  0825               	movf	??_sprintf^(0+128),w
  3288  054D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3289  054E  1903               	btfsc	3,2
  3290  054F  2D5B               	goto	l367
  3291                           
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  3293  0550  302D               	movlw	45
  3294  0551                     L19:	
  3295  0551  00A5               	movwf	??_sprintf^(0+128)
  3296  0552  0841               	movf	sprintf@sp^(0+128),w
  3297  0553  0084               	movwf	4
  3298  0554  0825               	movf	??_sprintf^(0+128),w
  3299  0555  1383               	bcf	3,7	;select IRP bank0
  3300  0556  0080               	movwf	0
  3301  0557  3001               	movlw	1
  3302  0558  00A5               	movwf	??_sprintf^(0+128)
  3303  0559  0825               	movf	??_sprintf^(0+128),w
  3304  055A  07C1               	addwf	sprintf@sp^(0+128),f
  3305  055B                     l367:	
  3306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  3307                           
  3308                           
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  3310  055B  3001               	movlw	1
  3311  055C  02C4               	subwf	sprintf@c^(0+128),f
  3312  055D  0A44               	incf	sprintf@c^(0+128),w
  3313  055E  1903               	btfsc	3,2
  3314  055F  2DD0               	goto	l3746
  3315                           
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  3317  0560  0844               	movf	sprintf@c^(0+128),w
  3318  0561  00A5               	movwf	??_sprintf^(0+128)
  3319  0562  3001               	movlw	1
  3320  0563                     u5755:	
  3321  0563  1003               	clrc
  3322  0564  0DA5               	rlf	??_sprintf^(0+128),f
  3323  0565  3EFF               	addlw	-1
  3324  0566  1D03               	skipz
  3325  0567  2D63               	goto	u5755
  3326  0568  1003               	clrc
  3327  0569  0D25               	rlf	??_sprintf^(0+128),w
  3328  056A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3329  056B  0084               	movwf	4
  3330  056C  120A  118A  200D  120A  118A  	fcall	stringdir
  3331  0571  00F0               	movwf	___lldiv@divisor
  3332  0572  120A  118A  200D  120A  118A  	fcall	stringdir
  3333  0577  00F1               	movwf	___lldiv@divisor+1
  3334  0578  120A  118A  200D  120A  118A  	fcall	stringdir
  3335  057D  00F2               	movwf	___lldiv@divisor+2
  3336  057E  120A  118A  200D  120A  118A  	fcall	stringdir
  3337  0583  00F3               	movwf	___lldiv@divisor+3
  3338  0584  0832               	movf	(sprintf@val+3)^(0+128),w
  3339  0585  00F7               	movwf	___lldiv@dividend+3
  3340  0586  0831               	movf	(sprintf@val+2)^(0+128),w
  3341  0587  00F6               	movwf	___lldiv@dividend+2
  3342  0588  0830               	movf	(sprintf@val+1)^(0+128),w
  3343  0589  00F5               	movwf	___lldiv@dividend+1
  3344  058A  082F               	movf	sprintf@val^(0+128),w
  3345  058B  00F4               	movwf	___lldiv@dividend
  3346  058C  160A  158A  23BF  120A  118A  	fcall	___lldiv
  3347  0591  0873               	movf	?___lldiv+3,w
  3348  0592  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0593  1303               	bcf	3,6	;RP1=0, select bank1
  3350  0594  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3351  0595  0872               	movf	?___lldiv+2,w
  3352  0596  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3353  0597  0871               	movf	?___lldiv+1,w
  3354  0598  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3355  0599  0870               	movf	?___lldiv,w
  3356  059A  00B7               	movwf	sprintf@tmpval^(0+128)
  3357                           
  3358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  3359  059B  3000               	movlw	0
  3360  059C  00F3               	movwf	___llmod@divisor+3
  3361  059D  3000               	movlw	0
  3362  059E  00F2               	movwf	___llmod@divisor+2
  3363  059F  3000               	movlw	0
  3364  05A0  00F1               	movwf	___llmod@divisor+1
  3365  05A1  300A               	movlw	10
  3366  05A2  00F0               	movwf	___llmod@divisor
  3367  05A3  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3368  05A4  00F7               	movwf	___llmod@dividend+3
  3369  05A5  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3370  05A6  00F6               	movwf	___llmod@dividend+2
  3371  05A7  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3372  05A8  00F5               	movwf	___llmod@dividend+1
  3373  05A9  0837               	movf	sprintf@tmpval^(0+128),w
  3374  05AA  00F4               	movwf	___llmod@dividend
  3375  05AB  120A  158A  2003  120A  118A  	fcall	___llmod
  3376  05B0  0873               	movf	?___llmod+3,w
  3377  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  3378  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  3379  05B3  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3380  05B4  0872               	movf	?___llmod+2,w
  3381  05B5  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3382  05B6  0871               	movf	?___llmod+1,w
  3383  05B7  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3384  05B8  0870               	movf	?___llmod,w
  3385  05B9  00B7               	movwf	sprintf@tmpval^(0+128)
  3386                           
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3388  05BA  0837               	movf	sprintf@tmpval^(0+128),w
  3389  05BB  3E30               	addlw	48
  3390  05BC  2D51               	goto	L19
  3391  05BD                     l3740:	
  3392                           
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  3394  05BD  3030               	movlw	48
  3395  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3396  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3397  05C0  00A5               	movwf	??_sprintf^(0+128)
  3398  05C1  0841               	movf	sprintf@sp^(0+128),w
  3399  05C2  0084               	movwf	4
  3400  05C3  0825               	movf	??_sprintf^(0+128),w
  3401  05C4  1383               	bcf	3,7	;select IRP bank0
  3402  05C5  0080               	movwf	0
  3403  05C6  3001               	movlw	1
  3404  05C7  00A5               	movwf	??_sprintf^(0+128)
  3405  05C8  0825               	movf	??_sprintf^(0+128),w
  3406  05C9  07C1               	addwf	sprintf@sp^(0+128),f
  3407                           
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  3409  05CA  30FF               	movlw	255
  3410  05CB  07BB               	addwf	sprintf@eexp^(0+128),f
  3411  05CC  1803               	skipnc
  3412  05CD  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3413  05CE  30FF               	movlw	255
  3414  05CF  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3415  05D0                     l3746:	
  3416                           
  3417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  3418  05D0  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3419  05D1  3A80               	xorlw	128
  3420  05D2  00FF               	movwf	127
  3421  05D3  3080               	movlw	128
  3422  05D4  027F               	subwf	127,w
  3423  05D5  1D03               	skipz
  3424  05D6  2DD9               	goto	u5775
  3425  05D7  3001               	movlw	1
  3426  05D8  023B               	subwf	sprintf@eexp^(0+128),w
  3427  05D9                     u5775:	
  3428  05D9  1803               	skipnc
  3429  05DA  2DBD               	goto	l3740
  3430                           
  3431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3432  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3433  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3434  05DD  0843               	movf	(sprintf@prec+1)^(0+128),w
  3435  05DE  3A80               	xorlw	128
  3436  05DF  00FF               	movwf	127
  3437  05E0  3080               	movlw	128
  3438  05E1  027F               	subwf	127,w
  3439  05E2  1D03               	skipz
  3440  05E3  2DE6               	goto	u5785
  3441  05E4  3009               	movlw	9
  3442  05E5  0242               	subwf	sprintf@prec^(0+128),w
  3443  05E6                     u5785:	
  3444  05E6  1C03               	skipc
  3445  05E7  2DEC               	goto	l3752
  3446                           
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3448  05E8  3008               	movlw	8
  3449  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  3450  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  3451  05EB  2DEF               	goto	L20
  3452  05EC                     l3752:	
  3453                           
  3454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  3455  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3456  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3457  05EE  0842               	movf	sprintf@prec^(0+128),w
  3458  05EF                     L20:	
  3459  05EF  00A5               	movwf	??_sprintf^(0+128)
  3460  05F0  0825               	movf	??_sprintf^(0+128),w
  3461  05F1  00C4               	movwf	sprintf@c^(0+128)
  3462                           
  3463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  3464  05F2  0844               	movf	sprintf@c^(0+128),w
  3465  05F3  00A5               	movwf	??_sprintf^(0+128)
  3466  05F4  01A6               	clrf	(??_sprintf^(0+128)+1)
  3467  05F5  0825               	movf	??_sprintf^(0+128),w
  3468  05F6  02C2               	subwf	sprintf@prec^(0+128),f
  3469  05F7  0826               	movf	(??_sprintf+1)^(0+128),w
  3470  05F8  1C03               	skipc
  3471  05F9  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3472  05FA  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3473                           
  3474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  3475  05FB  0844               	movf	sprintf@c^(0+128),w
  3476  05FC  1903               	btfsc	3,2
  3477  05FD  2E09               	goto	l3760
  3478                           
  3479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  3480  05FE  302E               	movlw	46
  3481  05FF  00A5               	movwf	??_sprintf^(0+128)
  3482  0600  0841               	movf	sprintf@sp^(0+128),w
  3483  0601  0084               	movwf	4
  3484  0602  0825               	movf	??_sprintf^(0+128),w
  3485  0603  1383               	bcf	3,7	;select IRP bank0
  3486  0604  0080               	movwf	0
  3487  0605  3001               	movlw	1
  3488  0606  00A5               	movwf	??_sprintf^(0+128)
  3489  0607  0825               	movf	??_sprintf^(0+128),w
  3490  0608  07C1               	addwf	sprintf@sp^(0+128),f
  3491  0609                     l3760:	
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3494  0609  0844               	movf	sprintf@c^(0+128),w
  3495  060A  120A  158A  24B7  120A  118A  	fcall	_scale
  3496  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3498  0611  0841               	movf	?_scale+3,w
  3499  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3500  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3501  0614  00AD               	movwf	(_sprintf$967+3)^(0+128)
  3502  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0617  0840               	movf	?_scale+2,w
  3505  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3506  0619  1303               	bcf	3,6	;RP1=0, select bank1
  3507  061A  00AC               	movwf	(_sprintf$967+2)^(0+128)
  3508  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3509  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3510  061D  083F               	movf	?_scale+1,w
  3511  061E  1683               	bsf	3,5	;RP0=1, select bank1
  3512  061F  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0620  00AB               	movwf	(_sprintf$967+1)^(0+128)
  3514  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0623  083E               	movf	?_scale,w
  3517  0624  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0625  1303               	bcf	3,6	;RP1=0, select bank1
  3519  0626  00AA               	movwf	_sprintf$967^(0+128)
  3520                           
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3522  0627  082D               	movf	(_sprintf$967+3)^(0+128),w
  3523  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3525  062A  00AB               	movwf	___flmul@a+3
  3526  062B  1683               	bsf	3,5	;RP0=1, select bank1
  3527  062C  1303               	bcf	3,6	;RP1=0, select bank1
  3528  062D  082C               	movf	(_sprintf$967+2)^(0+128),w
  3529  062E  1283               	bcf	3,5	;RP0=0, select bank0
  3530  062F  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0630  00AA               	movwf	___flmul@a+2
  3532  0631  1683               	bsf	3,5	;RP0=1, select bank1
  3533  0632  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0633  082B               	movf	(_sprintf$967+1)^(0+128),w
  3535  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0636  00A9               	movwf	___flmul@a+1
  3538  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0638  1303               	bcf	3,6	;RP1=0, select bank1
  3540  0639  082A               	movf	_sprintf$967^(0+128),w
  3541  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3542  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3543  063C  00A8               	movwf	___flmul@a
  3544  063D  1683               	bsf	3,5	;RP0=1, select bank1
  3545  063E  1303               	bcf	3,6	;RP1=0, select bank1
  3546  063F  0840               	movf	(sprintf@fval+3)^(0+128),w
  3547  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0642  00A7               	movwf	___flmul@b+3
  3550  0643  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0644  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0645  083F               	movf	(sprintf@fval+2)^(0+128),w
  3553  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0648  00A6               	movwf	___flmul@b+2
  3556  0649  1683               	bsf	3,5	;RP0=1, select bank1
  3557  064A  1303               	bcf	3,6	;RP1=0, select bank1
  3558  064B  083E               	movf	(sprintf@fval+1)^(0+128),w
  3559  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3560  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3561  064E  00A5               	movwf	___flmul@b+1
  3562  064F  1683               	bsf	3,5	;RP0=1, select bank1
  3563  0650  1303               	bcf	3,6	;RP1=0, select bank1
  3564  0651  083D               	movf	sprintf@fval^(0+128),w
  3565  0652  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0653  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0654  00A4               	movwf	___flmul@b
  3568  0655  120A  158A  21A2  120A  118A  	fcall	___flmul
  3569  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3570  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3571  065C  0827               	movf	?___flmul+3,w
  3572  065D  00D4               	movwf	___fltol@f1+3
  3573  065E  0826               	movf	?___flmul+2,w
  3574  065F  00D3               	movwf	___fltol@f1+2
  3575  0660  0825               	movf	?___flmul+1,w
  3576  0661  00D2               	movwf	___fltol@f1+1
  3577  0662  0824               	movf	?___flmul,w
  3578  0663  00D1               	movwf	___fltol@f1
  3579  0664  160A  158A  2480  120A  118A  	fcall	___fltol
  3580  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3581  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3582  066B  0854               	movf	?___fltol+3,w
  3583  066C  1683               	bsf	3,5	;RP0=1, select bank1
  3584  066D  1303               	bcf	3,6	;RP1=0, select bank1
  3585  066E  00B2               	movwf	(sprintf@val+3)^(0+128)
  3586  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0671  0853               	movf	?___fltol+2,w
  3589  0672  1683               	bsf	3,5	;RP0=1, select bank1
  3590  0673  1303               	bcf	3,6	;RP1=0, select bank1
  3591  0674  00B1               	movwf	(sprintf@val+2)^(0+128)
  3592  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3594  0677  0852               	movf	?___fltol+1,w
  3595  0678  1683               	bsf	3,5	;RP0=1, select bank1
  3596  0679  1303               	bcf	3,6	;RP1=0, select bank1
  3597  067A  00B0               	movwf	(sprintf@val+1)^(0+128)
  3598  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3599  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3600  067D  0851               	movf	?___fltol,w
  3601  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3602  067F  1303               	bcf	3,6	;RP1=0, select bank1
  3603  0680                     L21:	
  3604  0680  00AF               	movwf	sprintf@val^(0+128)
  3605                           
  3606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  3607  0681  3001               	movlw	1
  3608  0682  02C4               	subwf	sprintf@c^(0+128),f
  3609  0683  0A44               	incf	sprintf@c^(0+128),w
  3610  0684  1903               	btfsc	3,2
  3611  0685  2F38               	goto	l3780
  3612                           
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  3614                           
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  3616  0686  0844               	movf	sprintf@c^(0+128),w
  3617  0687  00A5               	movwf	??_sprintf^(0+128)
  3618  0688  3001               	movlw	1
  3619  0689                     u5805:	
  3620  0689  1003               	clrc
  3621  068A  0DA5               	rlf	??_sprintf^(0+128),f
  3622  068B  3EFF               	addlw	-1
  3623  068C  1D03               	skipz
  3624  068D  2E89               	goto	u5805
  3625  068E  1003               	clrc
  3626  068F  0D25               	rlf	??_sprintf^(0+128),w
  3627  0690  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3628  0691  0084               	movwf	4
  3629  0692  120A  118A  200D  120A  118A  	fcall	stringdir
  3630  0697  00F0               	movwf	___lldiv@divisor
  3631  0698  120A  118A  200D  120A  118A  	fcall	stringdir
  3632  069D  00F1               	movwf	___lldiv@divisor+1
  3633  069E  120A  118A  200D  120A  118A  	fcall	stringdir
  3634  06A3  00F2               	movwf	___lldiv@divisor+2
  3635  06A4  120A  118A  200D  120A  118A  	fcall	stringdir
  3636  06A9  00F3               	movwf	___lldiv@divisor+3
  3637  06AA  0832               	movf	(sprintf@val+3)^(0+128),w
  3638  06AB  00F7               	movwf	___lldiv@dividend+3
  3639  06AC  0831               	movf	(sprintf@val+2)^(0+128),w
  3640  06AD  00F6               	movwf	___lldiv@dividend+2
  3641  06AE  0830               	movf	(sprintf@val+1)^(0+128),w
  3642  06AF  00F5               	movwf	___lldiv@dividend+1
  3643  06B0  082F               	movf	sprintf@val^(0+128),w
  3644  06B1  00F4               	movwf	___lldiv@dividend
  3645  06B2  160A  158A  23BF  120A  118A  	fcall	___lldiv
  3646  06B7  0873               	movf	?___lldiv+3,w
  3647  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  3648  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  3649  06BA  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3650  06BB  0872               	movf	?___lldiv+2,w
  3651  06BC  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3652  06BD  0871               	movf	?___lldiv+1,w
  3653  06BE  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3654  06BF  0870               	movf	?___lldiv,w
  3655  06C0  00B7               	movwf	sprintf@tmpval^(0+128)
  3656                           
  3657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  3658  06C1  3000               	movlw	0
  3659  06C2  00F3               	movwf	___llmod@divisor+3
  3660  06C3  3000               	movlw	0
  3661  06C4  00F2               	movwf	___llmod@divisor+2
  3662  06C5  3000               	movlw	0
  3663  06C6  00F1               	movwf	___llmod@divisor+1
  3664  06C7  300A               	movlw	10
  3665  06C8  00F0               	movwf	___llmod@divisor
  3666  06C9  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3667  06CA  00F7               	movwf	___llmod@dividend+3
  3668  06CB  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3669  06CC  00F6               	movwf	___llmod@dividend+2
  3670  06CD  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3671  06CE  00F5               	movwf	___llmod@dividend+1
  3672  06CF  0837               	movf	sprintf@tmpval^(0+128),w
  3673  06D0  00F4               	movwf	___llmod@dividend
  3674  06D1  120A  158A  2003  120A  118A  	fcall	___llmod
  3675  06D6  0873               	movf	?___llmod+3,w
  3676  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3677  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3678  06D9  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3679  06DA  0872               	movf	?___llmod+2,w
  3680  06DB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3681  06DC  0871               	movf	?___llmod+1,w
  3682  06DD  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3683  06DE  0870               	movf	?___llmod,w
  3684  06DF  00B7               	movwf	sprintf@tmpval^(0+128)
  3685                           
  3686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3687  06E0  0837               	movf	sprintf@tmpval^(0+128),w
  3688  06E1  3E30               	addlw	48
  3689  06E2  00A5               	movwf	??_sprintf^(0+128)
  3690  06E3  0841               	movf	sprintf@sp^(0+128),w
  3691  06E4  0084               	movwf	4
  3692  06E5  0825               	movf	??_sprintf^(0+128),w
  3693  06E6  1383               	bcf	3,7	;select IRP bank0
  3694  06E7  0080               	movwf	0
  3695  06E8  3001               	movlw	1
  3696  06E9  00A5               	movwf	??_sprintf^(0+128)
  3697  06EA  0825               	movf	??_sprintf^(0+128),w
  3698  06EB  07C1               	addwf	sprintf@sp^(0+128),f
  3699                           
  3700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  3701  06EC  0844               	movf	sprintf@c^(0+128),w
  3702  06ED  00A5               	movwf	??_sprintf^(0+128)
  3703  06EE  3001               	movlw	1
  3704  06EF                     u5815:	
  3705  06EF  1003               	clrc
  3706  06F0  0DA5               	rlf	??_sprintf^(0+128),f
  3707  06F1  3EFF               	addlw	-1
  3708  06F2  1D03               	skipz
  3709  06F3  2EEF               	goto	u5815
  3710  06F4  1003               	clrc
  3711  06F5  0D25               	rlf	??_sprintf^(0+128),w
  3712  06F6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3713  06F7  0084               	movwf	4
  3714  06F8  120A  118A  200D  120A  118A  	fcall	stringdir
  3715  06FD  00F0               	movwf	___llmod@divisor
  3716  06FE  120A  118A  200D  120A  118A  	fcall	stringdir
  3717  0703  00F1               	movwf	___llmod@divisor+1
  3718  0704  120A  118A  200D  120A  118A  	fcall	stringdir
  3719  0709  00F2               	movwf	___llmod@divisor+2
  3720  070A  120A  118A  200D  120A  118A  	fcall	stringdir
  3721  070F  00F3               	movwf	___llmod@divisor+3
  3722  0710  0832               	movf	(sprintf@val+3)^(0+128),w
  3723  0711  00F7               	movwf	___llmod@dividend+3
  3724  0712  0831               	movf	(sprintf@val+2)^(0+128),w
  3725  0713  00F6               	movwf	___llmod@dividend+2
  3726  0714  0830               	movf	(sprintf@val+1)^(0+128),w
  3727  0715  00F5               	movwf	___llmod@dividend+1
  3728  0716  082F               	movf	sprintf@val^(0+128),w
  3729  0717  00F4               	movwf	___llmod@dividend
  3730  0718  120A  158A  2003  120A  118A  	fcall	___llmod
  3731  071D  0873               	movf	?___llmod+3,w
  3732  071E  1683               	bsf	3,5	;RP0=1, select bank1
  3733  071F  1303               	bcf	3,6	;RP1=0, select bank1
  3734  0720  00B2               	movwf	(sprintf@val+3)^(0+128)
  3735  0721  0872               	movf	?___llmod+2,w
  3736  0722  00B1               	movwf	(sprintf@val+2)^(0+128)
  3737  0723  0871               	movf	?___llmod+1,w
  3738  0724  00B0               	movwf	(sprintf@val+1)^(0+128)
  3739  0725  0870               	movf	?___llmod,w
  3740  0726  2E80               	goto	L21
  3741  0727                     l3774:	
  3742                           
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  3744  0727  3030               	movlw	48
  3745  0728  00A5               	movwf	??_sprintf^(0+128)
  3746  0729  0841               	movf	sprintf@sp^(0+128),w
  3747  072A  0084               	movwf	4
  3748  072B  0825               	movf	??_sprintf^(0+128),w
  3749  072C  1383               	bcf	3,7	;select IRP bank0
  3750  072D  0080               	movwf	0
  3751  072E  3001               	movlw	1
  3752  072F  00A5               	movwf	??_sprintf^(0+128)
  3753  0730  0825               	movf	??_sprintf^(0+128),w
  3754  0731  07C1               	addwf	sprintf@sp^(0+128),f
  3755                           
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  3757  0732  30FF               	movlw	255
  3758  0733  07C2               	addwf	sprintf@prec^(0+128),f
  3759  0734  1803               	skipnc
  3760  0735  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3761  0736  30FF               	movlw	255
  3762  0737  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3763  0738                     l3780:	
  3764                           
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  3766  0738  0842               	movf	sprintf@prec^(0+128),w
  3767  0739  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3768  073A  1903               	btfsc	3,2
  3769  073B  28F6               	goto	l3828
  3770  073C  2F27               	goto	l3774
  3771  073D                     l3782:	
  3772                           
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  3774  073D  0842               	movf	sprintf@prec^(0+128),w
  3775  073E  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3776  073F  1D03               	btfss	3,2
  3777  0740  2F4D               	goto	l382
  3778  0741  0832               	movf	(sprintf@val+3)^(0+128),w
  3779  0742  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3780  0743  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3781  0744  042F               	iorwf	sprintf@val^(0+128),w
  3782  0745  1D03               	skipz
  3783  0746  2F4D               	goto	l382
  3784                           
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  3786  0747  3001               	movlw	1
  3787  0748  07C2               	addwf	sprintf@prec^(0+128),f
  3788  0749  1803               	skipnc
  3789  074A  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3790  074B  3000               	movlw	0
  3791  074C  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3792  074D                     l382:	
  3793                           
  3794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  3795  074D  0843               	movf	(sprintf@prec+1)^(0+128),w
  3796  074E  3A80               	xorlw	128
  3797  074F  3C80               	sublw	128
  3798  0750  1D03               	skipz
  3799  0751  2F54               	goto	u5865
  3800  0752  0842               	movf	sprintf@prec^(0+128),w
  3801  0753  0244               	subwf	sprintf@c^(0+128),w
  3802  0754                     u5865:	
  3803  0754  1803               	skipnc
  3804  0755  2F5D               	goto	l3790
  3805                           
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1359:    c 
      +                          = prec;
  3807  0756  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0757  1303               	bcf	3,6	;RP1=0, select bank1
  3809  0758  0842               	movf	sprintf@prec^(0+128),w
  3810  0759  00A5               	movwf	??_sprintf^(0+128)
  3811  075A  0825               	movf	??_sprintf^(0+128),w
  3812  075B  00C4               	movwf	sprintf@c^(0+128)
  3813  075C  2F73               	goto	l3794
  3814  075D                     l3790:	
  3815  075D  1683               	bsf	3,5	;RP0=1, select bank1
  3816  075E  1303               	bcf	3,6	;RP1=0, select bank1
  3817  075F  0843               	movf	(sprintf@prec+1)^(0+128),w
  3818  0760  3A80               	xorlw	128
  3819  0761  00A5               	movwf	??_sprintf^(0+128)
  3820  0762  3080               	movlw	128
  3821  0763  0225               	subwf	??_sprintf^(0+128),w
  3822  0764  1D03               	skipz
  3823  0765  2F68               	goto	u5875
  3824  0766  0844               	movf	sprintf@c^(0+128),w
  3825  0767  0242               	subwf	sprintf@prec^(0+128),w
  3826  0768                     u5875:	
  3827  0768  1803               	skipnc
  3828  0769  2F73               	goto	l3794
  3829                           
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    pr
      +                          ec = c;
  3831  076A  1683               	bsf	3,5	;RP0=1, select bank1
  3832  076B  1303               	bcf	3,6	;RP1=0, select bank1
  3833  076C  0844               	movf	sprintf@c^(0+128),w
  3834  076D  00A5               	movwf	??_sprintf^(0+128)
  3835  076E  01A6               	clrf	(??_sprintf^(0+128)+1)
  3836  076F  0825               	movf	??_sprintf^(0+128),w
  3837  0770  00C2               	movwf	sprintf@prec^(0+128)
  3838  0771  0826               	movf	(??_sprintf+1)^(0+128),w
  3839  0772  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3840  0773                     l3794:	
  3841                           
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1364:   if(
      +                          width && flag & 0x03)
  3843  0773  1683               	bsf	3,5	;RP0=1, select bank1
  3844  0774  1303               	bcf	3,6	;RP1=0, select bank1
  3845  0775  0835               	movf	sprintf@width^(0+128),w
  3846  0776  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3847  0777  1903               	btfsc	3,2
  3848  0778  2F89               	goto	l3800
  3849  0779  3003               	movlw	3
  3850  077A  0533               	andwf	sprintf@flag^(0+128),w
  3851  077B  00A5               	movwf	??_sprintf^(0+128)
  3852  077C  3000               	movlw	0
  3853  077D  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3854  077E  00A6               	movwf	(??_sprintf+1)^(0+128)
  3855  077F  0825               	movf	??_sprintf^(0+128),w
  3856  0780  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3857  0781  1903               	btfsc	3,2
  3858  0782  2F89               	goto	l3800
  3859                           
  3860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1365:    wi
      +                          dth--;
  3861  0783  30FF               	movlw	255
  3862  0784  07B5               	addwf	sprintf@width^(0+128),f
  3863  0785  1803               	skipnc
  3864  0786  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3865  0787  30FF               	movlw	255
  3866  0788  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3867  0789                     l3800:	
  3868                           
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1367:   if(
      +                          flag & 0x4000) {
  3870  0789  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3871  078A  2FA4               	goto	l3808
  3872                           
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1368:    if
      +                          (width > prec)
  3874  078B  0843               	movf	(sprintf@prec+1)^(0+128),w
  3875  078C  3A80               	xorlw	128
  3876  078D  00A5               	movwf	??_sprintf^(0+128)
  3877  078E  0836               	movf	(sprintf@width+1)^(0+128),w
  3878  078F  3A80               	xorlw	128
  3879  0790  0225               	subwf	??_sprintf^(0+128),w
  3880  0791  1D03               	skipz
  3881  0792  2F95               	goto	u5915
  3882  0793  0835               	movf	sprintf@width^(0+128),w
  3883  0794  0242               	subwf	sprintf@prec^(0+128),w
  3884  0795                     u5915:	
  3885  0795  1803               	skipnc
  3886  0796  2FA0               	goto	l3806
  3887                           
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1369:     w
      +                          idth -= prec;
  3889  0797  1683               	bsf	3,5	;RP0=1, select bank1
  3890  0798  1303               	bcf	3,6	;RP1=0, select bank1
  3891  0799  0842               	movf	sprintf@prec^(0+128),w
  3892  079A  02B5               	subwf	sprintf@width^(0+128),f
  3893  079B  0843               	movf	(sprintf@prec+1)^(0+128),w
  3894  079C  1C03               	skipc
  3895  079D  03B6               	decf	(sprintf@width+1)^(0+128),f
  3896  079E  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3897  079F  2FA4               	goto	l3808
  3898  07A0                     l3806:	
  3899                           
  3900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1371:     w
      +                          idth = 0;
  3901  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3902  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3903  07A2  01B5               	clrf	sprintf@width^(0+128)
  3904  07A3  01B6               	clrf	(sprintf@width+1)^(0+128)
  3905  07A4                     l3808:	
  3906                           
  3907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1400:   if(
      +                          width > c)
  3908  07A4  0836               	movf	(sprintf@width+1)^(0+128),w
  3909  07A5  3A80               	xorlw	128
  3910  07A6  3C80               	sublw	128
  3911  07A7  1D03               	skipz
  3912  07A8  2FAB               	goto	u5925
  3913  07A9  0835               	movf	sprintf@width^(0+128),w
  3914  07AA  0244               	subwf	sprintf@c^(0+128),w
  3915  07AB                     u5925:	
  3916  07AB  1803               	skipnc
  3917  07AC  2FB9               	goto	l3812
  3918                           
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1401:    wi
      +                          dth -= c;
  3920  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  3921  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  3922  07AF  0844               	movf	sprintf@c^(0+128),w
  3923  07B0  00A5               	movwf	??_sprintf^(0+128)
  3924  07B1  01A6               	clrf	(??_sprintf^(0+128)+1)
  3925  07B2  0825               	movf	??_sprintf^(0+128),w
  3926  07B3  02B5               	subwf	sprintf@width^(0+128),f
  3927  07B4  0826               	movf	(??_sprintf+1)^(0+128),w
  3928  07B5  1C03               	skipc
  3929  07B6  03B6               	decf	(sprintf@width+1)^(0+128),f
  3930  07B7  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3931  07B8  2FBD               	goto	l3814
  3932  07B9                     l3812:	
  3933                           
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1403:    wi
      +                          dth = 0;
  3935  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  3936  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  3937  07BB  01B5               	clrf	sprintf@width^(0+128)
  3938  07BC  01B6               	clrf	(sprintf@width+1)^(0+128)
  3939  07BD                     l3814:	
  3940                           
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1443:    if(w
      +                          idth
  3942  07BD  0835               	movf	sprintf@width^(0+128),w
  3943  07BE  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3944  07BF  1903               	btfsc	3,2
  3945  07C0  2FD6               	goto	l3822
  3946  07C1                     l3816:	
  3947                           
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1449:      
      +                          ((*sp++ = (' ')));
  3949  07C1  3020               	movlw	32
  3950  07C2  00A5               	movwf	??_sprintf^(0+128)
  3951  07C3  0841               	movf	sprintf@sp^(0+128),w
  3952  07C4  0084               	movwf	4
  3953  07C5  0825               	movf	??_sprintf^(0+128),w
  3954  07C6  1383               	bcf	3,7	;select IRP bank0
  3955  07C7  0080               	movwf	0
  3956  07C8  3001               	movlw	1
  3957  07C9  00A5               	movwf	??_sprintf^(0+128)
  3958  07CA  0825               	movf	??_sprintf^(0+128),w
  3959  07CB  07C1               	addwf	sprintf@sp^(0+128),f
  3960  07CC  30FF               	movlw	255
  3961  07CD  07B5               	addwf	sprintf@width^(0+128),f
  3962  07CE  1803               	skipnc
  3963  07CF  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3964  07D0  30FF               	movlw	255
  3965  07D1  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3966  07D2  0835               	movf	sprintf@width^(0+128),w
  3967  07D3  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3968  07D4  1D03               	btfss	3,2
  3969  07D5  2FC1               	goto	l3816
  3970  07D6                     l3822:	
  3971                           
  3972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if
      +                          (flag & 0x03)
  3973  07D6  3003               	movlw	3
  3974  07D7  0533               	andwf	sprintf@flag^(0+128),w
  3975  07D8  00A5               	movwf	??_sprintf^(0+128)
  3976  07D9  3000               	movlw	0
  3977  07DA  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3978  07DB  00A6               	movwf	(??_sprintf+1)^(0+128)
  3979  07DC  0825               	movf	??_sprintf^(0+128),w
  3980  07DD  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3981  07DE  1903               	btfsc	3,2
  3982  07DF  28F6               	goto	l3828
  3983                           
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3985  07E0  302D               	movlw	45
  3986  07E1                     L22:	
  3987  07E1  00A5               	movwf	??_sprintf^(0+128)
  3988  07E2  0841               	movf	sprintf@sp^(0+128),w
  3989  07E3  0084               	movwf	4
  3990  07E4  0825               	movf	??_sprintf^(0+128),w
  3991  07E5  1383               	bcf	3,7	;select IRP bank0
  3992  07E6  0080               	movwf	0
  3993  07E7  3001               	movlw	1
  3994  07E8  00A5               	movwf	??_sprintf^(0+128)
  3995  07E9  0825               	movf	??_sprintf^(0+128),w
  3996  07EA  07C1               	addwf	sprintf@sp^(0+128),f
  3997  07EB  28F6               	goto	l3828
  3998  07EC                     l3830:	
  3999                           
  4000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  4001  07EC  0841               	movf	sprintf@sp^(0+128),w
  4002  07ED  0084               	movwf	4
  4003  07EE  1383               	bcf	3,7	;select IRP bank0
  4004  07EF  0180               	clrf	0
  4005  07F0  0008               	return
  4006  07F1                     __end_of_sprintf:	
  4007                           
  4008                           	psect	text3
  4009  0CB7                     __ptext3:	
  4010 ;; *************** function _scale *****************
  4011 ;; Defined at:
  4012 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  scl             1    wreg     char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  scl             1   48[BANK0 ] char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  4   30[BANK0 ] char 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         0       4       0       0       0
  4027 ;;      Locals:         0       5       0       0       0
  4028 ;;      Temps:          0      10       0       0       0
  4029 ;;      Totals:         0      19       0       0       0
  4030 ;;Total ram usage:       19 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    2
  4033 ;; This function calls:
  4034 ;;		___awdiv
  4035 ;;		___awmod
  4036 ;;		___flmul
  4037 ;; This function is called by:
  4038 ;;		_sprintf
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _scale
  4044  0CB7                     _scale:	
  4045                           
  4046                           ;incstack = 0
  4047                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4048                           ;scale@scl stored from wreg
  4049  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0CB9  00D0               	movwf	scale@scl
  4052                           
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  4054  0CBA  1FD0               	btfss	scale@scl,7
  4055  0CBB  2E5F               	goto	l3102
  4056                           
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  4058  0CBC  09D0               	comf	scale@scl,f
  4059  0CBD  0AD0               	incf	scale@scl,f
  4060                           
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  4062  0CBE  0850               	movf	scale@scl,w
  4063  0CBF  3A80               	xorlw	128
  4064  0CC0  3E12               	addlw	-238
  4065  0CC1  1C03               	skipc
  4066  0CC2  2DA9               	goto	l3092
  4067                           
  4068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4069  0CC3  300A               	movlw	10
  4070  0CC4  00F7               	movwf	___awdiv@divisor
  4071  0CC5  3000               	movlw	0
  4072  0CC6  00F8               	movwf	___awdiv@divisor+1
  4073  0CC7  0850               	movf	scale@scl,w
  4074  0CC8  00F2               	movwf	___awmod@dividend
  4075  0CC9  01F3               	clrf	___awmod@dividend+1
  4076  0CCA  1BF2               	btfsc	___awmod@dividend,7
  4077  0CCB  03F3               	decf	___awmod@dividend+1,f
  4078  0CCC  3064               	movlw	100
  4079  0CCD  00F0               	movwf	___awmod@divisor
  4080  0CCE  3000               	movlw	0
  4081  0CCF  00F1               	movwf	___awmod@divisor+1
  4082  0CD0  160A  158A  2319  120A  158A  	fcall	___awmod
  4083  0CD5  0871               	movf	?___awmod+1,w
  4084  0CD6  00FA               	movwf	___awdiv@dividend+1
  4085  0CD7  0870               	movf	?___awmod,w
  4086  0CD8  00F9               	movwf	___awdiv@dividend
  4087  0CD9  160A  158A  2364  120A  158A  	fcall	___awdiv
  4088  0CDE  0877               	movf	?___awdiv,w
  4089  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0CE1  00C2               	movwf	??_scale
  4092  0CE2  3001               	movlw	1
  4093  0CE3                     u4445:	
  4094  0CE3  1003               	clrc
  4095  0CE4  0DC2               	rlf	??_scale,f
  4096  0CE5  3EFF               	addlw	-1
  4097  0CE6  1D03               	skipz
  4098  0CE7  2CE3               	goto	u4445
  4099  0CE8  1003               	clrc
  4100  0CE9  0D42               	rlf	??_scale,w
  4101  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4102  0CEB  0084               	movwf	4
  4103  0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  4104  0CF1  00C3               	movwf	??_scale+1
  4105  0CF2  120A  118A  200D  120A  158A  	fcall	stringdir
  4106  0CF7  00C4               	movwf	??_scale+2
  4107  0CF8  120A  118A  200D  120A  158A  	fcall	stringdir
  4108  0CFD  00C5               	movwf	??_scale+3
  4109  0CFE  120A  118A  200D  120A  158A  	fcall	stringdir
  4110  0D03  00C6               	movwf	??_scale+4
  4111  0D04  0846               	movf	??_scale+4,w
  4112  0D05  00A7               	movwf	___flmul@b+3
  4113  0D06  0845               	movf	??_scale+3,w
  4114  0D07  00A6               	movwf	___flmul@b+2
  4115  0D08  0844               	movf	??_scale+2,w
  4116  0D09  00A5               	movwf	___flmul@b+1
  4117  0D0A  0843               	movf	??_scale+1,w
  4118  0D0B  00A4               	movwf	___flmul@b
  4119  0D0C  3064               	movlw	100
  4120  0D0D  00F7               	movwf	___awdiv@divisor
  4121  0D0E  3000               	movlw	0
  4122  0D0F  00F8               	movwf	___awdiv@divisor+1
  4123  0D10  0850               	movf	scale@scl,w
  4124  0D11  00F9               	movwf	___awdiv@dividend
  4125  0D12  01FA               	clrf	___awdiv@dividend+1
  4126  0D13  1BF9               	btfsc	___awdiv@dividend,7
  4127  0D14  03FA               	decf	___awdiv@dividend+1,f
  4128  0D15  160A  158A  2364  120A  158A  	fcall	___awdiv
  4129  0D1A  0877               	movf	?___awdiv,w
  4130  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0D1D  00C7               	movwf	??_scale+5
  4133  0D1E  3001               	movlw	1
  4134  0D1F                     u4455:	
  4135  0D1F  1003               	clrc
  4136  0D20  0DC7               	rlf	??_scale+5,f
  4137  0D21  3EFF               	addlw	-1
  4138  0D22  1D03               	skipz
  4139  0D23  2D1F               	goto	u4455
  4140  0D24  1003               	clrc
  4141  0D25  0D47               	rlf	??_scale+5,w
  4142  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4143  0D27  0084               	movwf	4
  4144  0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  4145  0D2D  00C8               	movwf	??_scale+6
  4146  0D2E  120A  118A  200D  120A  158A  	fcall	stringdir
  4147  0D33  00C9               	movwf	??_scale+7
  4148  0D34  120A  118A  200D  120A  158A  	fcall	stringdir
  4149  0D39  00CA               	movwf	??_scale+8
  4150  0D3A  120A  118A  200D  120A  158A  	fcall	stringdir
  4151  0D3F  00CB               	movwf	??_scale+9
  4152  0D40  084B               	movf	??_scale+9,w
  4153  0D41  00AB               	movwf	___flmul@a+3
  4154  0D42  084A               	movf	??_scale+8,w
  4155  0D43  00AA               	movwf	___flmul@a+2
  4156  0D44  0849               	movf	??_scale+7,w
  4157  0D45  00A9               	movwf	___flmul@a+1
  4158  0D46  0848               	movf	??_scale+6,w
  4159  0D47  00A8               	movwf	___flmul@a
  4160  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  4161  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0D4F  0827               	movf	?___flmul+3,w
  4164  0D50  00CF               	movwf	_scale$966+3
  4165  0D51  0826               	movf	?___flmul+2,w
  4166  0D52  00CE               	movwf	_scale$966+2
  4167  0D53  0825               	movf	?___flmul+1,w
  4168  0D54  00CD               	movwf	_scale$966+1
  4169  0D55  0824               	movf	?___flmul,w
  4170  0D56  00CC               	movwf	_scale$966
  4171                           
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4173  0D57  300A               	movlw	10
  4174  0D58  00F0               	movwf	___awmod@divisor
  4175  0D59  3000               	movlw	0
  4176  0D5A  00F1               	movwf	___awmod@divisor+1
  4177  0D5B  0850               	movf	scale@scl,w
  4178  0D5C  00F2               	movwf	___awmod@dividend
  4179  0D5D  01F3               	clrf	___awmod@dividend+1
  4180  0D5E  1BF2               	btfsc	___awmod@dividend,7
  4181  0D5F  03F3               	decf	___awmod@dividend+1,f
  4182  0D60  160A  158A  2319  120A  158A  	fcall	___awmod
  4183  0D65  0870               	movf	?___awmod,w
  4184  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0D68  00C2               	movwf	??_scale
  4187  0D69  3001               	movlw	1
  4188  0D6A                     u4465:	
  4189  0D6A  1003               	clrc
  4190  0D6B  0DC2               	rlf	??_scale,f
  4191  0D6C  3EFF               	addlw	-1
  4192  0D6D  1D03               	skipz
  4193  0D6E  2D6A               	goto	u4465
  4194  0D6F  1003               	clrc
  4195  0D70  0D42               	rlf	??_scale,w
  4196  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4197  0D72  0084               	movwf	4
  4198  0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  4199  0D78  00C3               	movwf	??_scale+1
  4200  0D79  120A  118A  200D  120A  158A  	fcall	stringdir
  4201  0D7E  00C4               	movwf	??_scale+2
  4202  0D7F  120A  118A  200D  120A  158A  	fcall	stringdir
  4203  0D84  00C5               	movwf	??_scale+3
  4204  0D85  120A  118A  200D  120A  158A  	fcall	stringdir
  4205  0D8A  00C6               	movwf	??_scale+4
  4206  0D8B  0846               	movf	??_scale+4,w
  4207  0D8C  00A7               	movwf	___flmul@b+3
  4208  0D8D  0845               	movf	??_scale+3,w
  4209  0D8E  00A6               	movwf	___flmul@b+2
  4210  0D8F  0844               	movf	??_scale+2,w
  4211  0D90  00A5               	movwf	___flmul@b+1
  4212  0D91  0843               	movf	??_scale+1,w
  4213  0D92  00A4               	movwf	___flmul@b
  4214  0D93  084F               	movf	_scale$966+3,w
  4215  0D94  00AB               	movwf	___flmul@a+3
  4216  0D95  084E               	movf	_scale$966+2,w
  4217  0D96  00AA               	movwf	___flmul@a+2
  4218  0D97  084D               	movf	_scale$966+1,w
  4219  0D98  00A9               	movwf	___flmul@a+1
  4220  0D99  084C               	movf	_scale$966,w
  4221  0D9A  00A8               	movwf	___flmul@a
  4222  0D9B  120A  158A  21A2   	fcall	___flmul
  4223  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0DA0  0827               	movf	?___flmul+3,w
  4226  0DA1  00C1               	movwf	?_scale+3
  4227  0DA2  0826               	movf	?___flmul+2,w
  4228  0DA3  00C0               	movwf	?_scale+2
  4229  0DA4  0825               	movf	?___flmul+1,w
  4230  0DA5  00BF               	movwf	?_scale+1
  4231  0DA6  0824               	movf	?___flmul,w
  4232  0DA7  00BE               	movwf	?_scale
  4233  0DA8  0008               	return
  4234  0DA9                     l3092:	
  4235  0DA9  0850               	movf	scale@scl,w
  4236  0DAA  3A80               	xorlw	128
  4237  0DAB  3E75               	addlw	-139
  4238  0DAC  1C03               	skipc
  4239  0DAD  2E34               	goto	l3098
  4240                           
  4241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4242  0DAE  300A               	movlw	10
  4243  0DAF  00F0               	movwf	___awmod@divisor
  4244  0DB0  3000               	movlw	0
  4245  0DB1  00F1               	movwf	___awmod@divisor+1
  4246  0DB2  0850               	movf	scale@scl,w
  4247  0DB3  00F2               	movwf	___awmod@dividend
  4248  0DB4  01F3               	clrf	___awmod@dividend+1
  4249  0DB5  1BF2               	btfsc	___awmod@dividend,7
  4250  0DB6  03F3               	decf	___awmod@dividend+1,f
  4251  0DB7  160A  158A  2319  120A  158A  	fcall	___awmod
  4252  0DBC  0870               	movf	?___awmod,w
  4253  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0DBF  00C2               	movwf	??_scale
  4256  0DC0  3001               	movlw	1
  4257  0DC1                     u4485:	
  4258  0DC1  1003               	clrc
  4259  0DC2  0DC2               	rlf	??_scale,f
  4260  0DC3  3EFF               	addlw	-1
  4261  0DC4  1D03               	skipz
  4262  0DC5  2DC1               	goto	u4485
  4263  0DC6  1003               	clrc
  4264  0DC7  0D42               	rlf	??_scale,w
  4265  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4266  0DC9  0084               	movwf	4
  4267  0DCA  120A  118A  200D  120A  158A  	fcall	stringdir
  4268  0DCF  00C3               	movwf	??_scale+1
  4269  0DD0  120A  118A  200D  120A  158A  	fcall	stringdir
  4270  0DD5  00C4               	movwf	??_scale+2
  4271  0DD6  120A  118A  200D  120A  158A  	fcall	stringdir
  4272  0DDB  00C5               	movwf	??_scale+3
  4273  0DDC  120A  118A  200D  120A  158A  	fcall	stringdir
  4274  0DE1  00C6               	movwf	??_scale+4
  4275  0DE2  0846               	movf	??_scale+4,w
  4276  0DE3  00A7               	movwf	___flmul@b+3
  4277  0DE4  0845               	movf	??_scale+3,w
  4278  0DE5  00A6               	movwf	___flmul@b+2
  4279  0DE6  0844               	movf	??_scale+2,w
  4280  0DE7  00A5               	movwf	___flmul@b+1
  4281  0DE8  0843               	movf	??_scale+1,w
  4282  0DE9  00A4               	movwf	___flmul@b
  4283  0DEA  300A               	movlw	10
  4284  0DEB  00F7               	movwf	___awdiv@divisor
  4285  0DEC  3000               	movlw	0
  4286  0DED  00F8               	movwf	___awdiv@divisor+1
  4287  0DEE  0850               	movf	scale@scl,w
  4288  0DEF  00F9               	movwf	___awdiv@dividend
  4289  0DF0  01FA               	clrf	___awdiv@dividend+1
  4290  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  4291  0DF2  03FA               	decf	___awdiv@dividend+1,f
  4292  0DF3  160A  158A  2364  120A  158A  	fcall	___awdiv
  4293  0DF8  0877               	movf	?___awdiv,w
  4294  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0DFB  00C7               	movwf	??_scale+5
  4297  0DFC  3001               	movlw	1
  4298  0DFD                     u4495:	
  4299  0DFD  1003               	clrc
  4300  0DFE  0DC7               	rlf	??_scale+5,f
  4301  0DFF  3EFF               	addlw	-1
  4302  0E00  1D03               	skipz
  4303  0E01  2DFD               	goto	u4495
  4304  0E02  1003               	clrc
  4305  0E03  0D47               	rlf	??_scale+5,w
  4306  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4307  0E05  0084               	movwf	4
  4308  0E06  120A  118A  200D  120A  158A  	fcall	stringdir
  4309  0E0B  00C8               	movwf	??_scale+6
  4310  0E0C  120A  118A  200D  120A  158A  	fcall	stringdir
  4311  0E11  00C9               	movwf	??_scale+7
  4312  0E12  120A  118A  200D  120A  158A  	fcall	stringdir
  4313  0E17  00CA               	movwf	??_scale+8
  4314  0E18  120A  118A  200D  120A  158A  	fcall	stringdir
  4315  0E1D  00CB               	movwf	??_scale+9
  4316  0E1E  084B               	movf	??_scale+9,w
  4317  0E1F  00AB               	movwf	___flmul@a+3
  4318  0E20  084A               	movf	??_scale+8,w
  4319  0E21  00AA               	movwf	___flmul@a+2
  4320  0E22  0849               	movf	??_scale+7,w
  4321  0E23  00A9               	movwf	___flmul@a+1
  4322  0E24  0848               	movf	??_scale+6,w
  4323  0E25  00A8               	movwf	___flmul@a
  4324  0E26  120A  158A  21A2   	fcall	___flmul
  4325  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0E2B  0827               	movf	?___flmul+3,w
  4328  0E2C  00C1               	movwf	?_scale+3
  4329  0E2D  0826               	movf	?___flmul+2,w
  4330  0E2E  00C0               	movwf	?_scale+2
  4331  0E2F  0825               	movf	?___flmul+1,w
  4332  0E30  00BF               	movwf	?_scale+1
  4333  0E31  0824               	movf	?___flmul,w
  4334  0E32  00BE               	movwf	?_scale
  4335  0E33  0008               	return
  4336  0E34                     l3098:	
  4337                           
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4339  0E34  0850               	movf	scale@scl,w
  4340  0E35  00C2               	movwf	??_scale
  4341  0E36  3001               	movlw	1
  4342  0E37                     u4505:	
  4343  0E37  1003               	clrc
  4344  0E38  0DC2               	rlf	??_scale,f
  4345  0E39  3EFF               	addlw	-1
  4346  0E3A  1D03               	skipz
  4347  0E3B  2E37               	goto	u4505
  4348  0E3C  1003               	clrc
  4349  0E3D  0D42               	rlf	??_scale,w
  4350  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4351  0E3F  0084               	movwf	4
  4352  0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  4353  0E45  00C3               	movwf	??_scale+1
  4354  0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  4355  0E4B  00C4               	movwf	??_scale+2
  4356  0E4C  120A  118A  200D  120A  158A  	fcall	stringdir
  4357  0E51  00C5               	movwf	??_scale+3
  4358  0E52  120A  118A  200D   	fcall	stringdir
  4359  0E55  00C6               	movwf	??_scale+4
  4360  0E56  0846               	movf	??_scale+4,w
  4361  0E57  00C1               	movwf	?_scale+3
  4362  0E58  0845               	movf	??_scale+3,w
  4363  0E59  00C0               	movwf	?_scale+2
  4364  0E5A  0844               	movf	??_scale+2,w
  4365  0E5B  00BF               	movwf	?_scale+1
  4366  0E5C  0843               	movf	??_scale+1,w
  4367  0E5D  00BE               	movwf	?_scale
  4368  0E5E  0008               	return
  4369  0E5F                     l3102:	
  4370                           
  4371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4372  0E5F  0850               	movf	scale@scl,w
  4373  0E60  3A80               	xorlw	128
  4374  0E61  3E12               	addlw	-238
  4375  0E62  1C03               	skipc
  4376  0E63  2F4A               	goto	l3110
  4377                           
  4378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4379  0E64  300A               	movlw	10
  4380  0E65  00F7               	movwf	___awdiv@divisor
  4381  0E66  3000               	movlw	0
  4382  0E67  00F8               	movwf	___awdiv@divisor+1
  4383  0E68  0850               	movf	scale@scl,w
  4384  0E69  00F2               	movwf	___awmod@dividend
  4385  0E6A  01F3               	clrf	___awmod@dividend+1
  4386  0E6B  1BF2               	btfsc	___awmod@dividend,7
  4387  0E6C  03F3               	decf	___awmod@dividend+1,f
  4388  0E6D  3064               	movlw	100
  4389  0E6E  00F0               	movwf	___awmod@divisor
  4390  0E6F  3000               	movlw	0
  4391  0E70  00F1               	movwf	___awmod@divisor+1
  4392  0E71  160A  158A  2319  120A  158A  	fcall	___awmod
  4393  0E76  0871               	movf	?___awmod+1,w
  4394  0E77  00FA               	movwf	___awdiv@dividend+1
  4395  0E78  0870               	movf	?___awmod,w
  4396  0E79  00F9               	movwf	___awdiv@dividend
  4397  0E7A  160A  158A  2364  120A  158A  	fcall	___awdiv
  4398  0E7F  0877               	movf	?___awdiv,w
  4399  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0E82  00C2               	movwf	??_scale
  4402  0E83  3001               	movlw	1
  4403  0E84                     u4525:	
  4404  0E84  1003               	clrc
  4405  0E85  0DC2               	rlf	??_scale,f
  4406  0E86  3EFF               	addlw	-1
  4407  0E87  1D03               	skipz
  4408  0E88  2E84               	goto	u4525
  4409  0E89  1003               	clrc
  4410  0E8A  0D42               	rlf	??_scale,w
  4411  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4412  0E8C  0084               	movwf	4
  4413  0E8D  120A  118A  200D  120A  158A  	fcall	stringdir
  4414  0E92  00C3               	movwf	??_scale+1
  4415  0E93  120A  118A  200D  120A  158A  	fcall	stringdir
  4416  0E98  00C4               	movwf	??_scale+2
  4417  0E99  120A  118A  200D  120A  158A  	fcall	stringdir
  4418  0E9E  00C5               	movwf	??_scale+3
  4419  0E9F  120A  118A  200D  120A  158A  	fcall	stringdir
  4420  0EA4  00C6               	movwf	??_scale+4
  4421  0EA5  0846               	movf	??_scale+4,w
  4422  0EA6  00A7               	movwf	___flmul@b+3
  4423  0EA7  0845               	movf	??_scale+3,w
  4424  0EA8  00A6               	movwf	___flmul@b+2
  4425  0EA9  0844               	movf	??_scale+2,w
  4426  0EAA  00A5               	movwf	___flmul@b+1
  4427  0EAB  0843               	movf	??_scale+1,w
  4428  0EAC  00A4               	movwf	___flmul@b
  4429  0EAD  3064               	movlw	100
  4430  0EAE  00F7               	movwf	___awdiv@divisor
  4431  0EAF  3000               	movlw	0
  4432  0EB0  00F8               	movwf	___awdiv@divisor+1
  4433  0EB1  0850               	movf	scale@scl,w
  4434  0EB2  00F9               	movwf	___awdiv@dividend
  4435  0EB3  01FA               	clrf	___awdiv@dividend+1
  4436  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  4437  0EB5  03FA               	decf	___awdiv@dividend+1,f
  4438  0EB6  160A  158A  2364  120A  158A  	fcall	___awdiv
  4439  0EBB  0877               	movf	?___awdiv,w
  4440  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0EBE  00C7               	movwf	??_scale+5
  4443  0EBF  3001               	movlw	1
  4444  0EC0                     u4535:	
  4445  0EC0  1003               	clrc
  4446  0EC1  0DC7               	rlf	??_scale+5,f
  4447  0EC2  3EFF               	addlw	-1
  4448  0EC3  1D03               	skipz
  4449  0EC4  2EC0               	goto	u4535
  4450  0EC5  1003               	clrc
  4451  0EC6  0D47               	rlf	??_scale+5,w
  4452  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4453  0EC8  0084               	movwf	4
  4454  0EC9  120A  118A  200D  120A  158A  	fcall	stringdir
  4455  0ECE  00C8               	movwf	??_scale+6
  4456  0ECF  120A  118A  200D  120A  158A  	fcall	stringdir
  4457  0ED4  00C9               	movwf	??_scale+7
  4458  0ED5  120A  118A  200D  120A  158A  	fcall	stringdir
  4459  0EDA  00CA               	movwf	??_scale+8
  4460  0EDB  120A  118A  200D  120A  158A  	fcall	stringdir
  4461  0EE0  00CB               	movwf	??_scale+9
  4462  0EE1  084B               	movf	??_scale+9,w
  4463  0EE2  00AB               	movwf	___flmul@a+3
  4464  0EE3  084A               	movf	??_scale+8,w
  4465  0EE4  00AA               	movwf	___flmul@a+2
  4466  0EE5  0849               	movf	??_scale+7,w
  4467  0EE6  00A9               	movwf	___flmul@a+1
  4468  0EE7  0848               	movf	??_scale+6,w
  4469  0EE8  00A8               	movwf	___flmul@a
  4470  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  4471  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0EF0  0827               	movf	?___flmul+3,w
  4474  0EF1  00CF               	movwf	_scale$966+3
  4475  0EF2  0826               	movf	?___flmul+2,w
  4476  0EF3  00CE               	movwf	_scale$966+2
  4477  0EF4  0825               	movf	?___flmul+1,w
  4478  0EF5  00CD               	movwf	_scale$966+1
  4479  0EF6  0824               	movf	?___flmul,w
  4480  0EF7  00CC               	movwf	_scale$966
  4481                           
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4483  0EF8  300A               	movlw	10
  4484  0EF9  00F0               	movwf	___awmod@divisor
  4485  0EFA  3000               	movlw	0
  4486  0EFB  00F1               	movwf	___awmod@divisor+1
  4487  0EFC  0850               	movf	scale@scl,w
  4488  0EFD  00F2               	movwf	___awmod@dividend
  4489  0EFE  01F3               	clrf	___awmod@dividend+1
  4490  0EFF  1BF2               	btfsc	___awmod@dividend,7
  4491  0F00  03F3               	decf	___awmod@dividend+1,f
  4492  0F01  160A  158A  2319  120A  158A  	fcall	___awmod
  4493  0F06  0870               	movf	?___awmod,w
  4494  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4496  0F09  00C2               	movwf	??_scale
  4497  0F0A  3001               	movlw	1
  4498  0F0B                     u4545:	
  4499  0F0B  1003               	clrc
  4500  0F0C  0DC2               	rlf	??_scale,f
  4501  0F0D  3EFF               	addlw	-1
  4502  0F0E  1D03               	skipz
  4503  0F0F  2F0B               	goto	u4545
  4504  0F10  1003               	clrc
  4505  0F11  0D42               	rlf	??_scale,w
  4506  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4507  0F13  0084               	movwf	4
  4508  0F14  120A  118A  200D  120A  158A  	fcall	stringdir
  4509  0F19  00C3               	movwf	??_scale+1
  4510  0F1A  120A  118A  200D  120A  158A  	fcall	stringdir
  4511  0F1F  00C4               	movwf	??_scale+2
  4512  0F20  120A  118A  200D  120A  158A  	fcall	stringdir
  4513  0F25  00C5               	movwf	??_scale+3
  4514  0F26  120A  118A  200D  120A  158A  	fcall	stringdir
  4515  0F2B  00C6               	movwf	??_scale+4
  4516  0F2C  0846               	movf	??_scale+4,w
  4517  0F2D  00A7               	movwf	___flmul@b+3
  4518  0F2E  0845               	movf	??_scale+3,w
  4519  0F2F  00A6               	movwf	___flmul@b+2
  4520  0F30  0844               	movf	??_scale+2,w
  4521  0F31  00A5               	movwf	___flmul@b+1
  4522  0F32  0843               	movf	??_scale+1,w
  4523  0F33  00A4               	movwf	___flmul@b
  4524  0F34  084F               	movf	_scale$966+3,w
  4525  0F35  00AB               	movwf	___flmul@a+3
  4526  0F36  084E               	movf	_scale$966+2,w
  4527  0F37  00AA               	movwf	___flmul@a+2
  4528  0F38  084D               	movf	_scale$966+1,w
  4529  0F39  00A9               	movwf	___flmul@a+1
  4530  0F3A  084C               	movf	_scale$966,w
  4531  0F3B  00A8               	movwf	___flmul@a
  4532  0F3C  120A  158A  21A2   	fcall	___flmul
  4533  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0F41  0827               	movf	?___flmul+3,w
  4536  0F42  00C1               	movwf	?_scale+3
  4537  0F43  0826               	movf	?___flmul+2,w
  4538  0F44  00C0               	movwf	?_scale+2
  4539  0F45  0825               	movf	?___flmul+1,w
  4540  0F46  00BF               	movwf	?_scale+1
  4541  0F47  0824               	movf	?___flmul,w
  4542  0F48  00BE               	movwf	?_scale
  4543  0F49  0008               	return
  4544  0F4A                     l3110:	
  4545  0F4A  0850               	movf	scale@scl,w
  4546  0F4B  3A80               	xorlw	128
  4547  0F4C  3E75               	addlw	-139
  4548  0F4D  1C03               	skipc
  4549  0F4E  2FD5               	goto	l3116
  4550                           
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4552  0F4F  300A               	movlw	10
  4553  0F50  00F0               	movwf	___awmod@divisor
  4554  0F51  3000               	movlw	0
  4555  0F52  00F1               	movwf	___awmod@divisor+1
  4556  0F53  0850               	movf	scale@scl,w
  4557  0F54  00F2               	movwf	___awmod@dividend
  4558  0F55  01F3               	clrf	___awmod@dividend+1
  4559  0F56  1BF2               	btfsc	___awmod@dividend,7
  4560  0F57  03F3               	decf	___awmod@dividend+1,f
  4561  0F58  160A  158A  2319  120A  158A  	fcall	___awmod
  4562  0F5D  0870               	movf	?___awmod,w
  4563  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  4564  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4565  0F60  00C2               	movwf	??_scale
  4566  0F61  3001               	movlw	1
  4567  0F62                     u4565:	
  4568  0F62  1003               	clrc
  4569  0F63  0DC2               	rlf	??_scale,f
  4570  0F64  3EFF               	addlw	-1
  4571  0F65  1D03               	skipz
  4572  0F66  2F62               	goto	u4565
  4573  0F67  1003               	clrc
  4574  0F68  0D42               	rlf	??_scale,w
  4575  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4576  0F6A  0084               	movwf	4
  4577  0F6B  120A  118A  200D  120A  158A  	fcall	stringdir
  4578  0F70  00C3               	movwf	??_scale+1
  4579  0F71  120A  118A  200D  120A  158A  	fcall	stringdir
  4580  0F76  00C4               	movwf	??_scale+2
  4581  0F77  120A  118A  200D  120A  158A  	fcall	stringdir
  4582  0F7C  00C5               	movwf	??_scale+3
  4583  0F7D  120A  118A  200D  120A  158A  	fcall	stringdir
  4584  0F82  00C6               	movwf	??_scale+4
  4585  0F83  0846               	movf	??_scale+4,w
  4586  0F84  00A7               	movwf	___flmul@b+3
  4587  0F85  0845               	movf	??_scale+3,w
  4588  0F86  00A6               	movwf	___flmul@b+2
  4589  0F87  0844               	movf	??_scale+2,w
  4590  0F88  00A5               	movwf	___flmul@b+1
  4591  0F89  0843               	movf	??_scale+1,w
  4592  0F8A  00A4               	movwf	___flmul@b
  4593  0F8B  300A               	movlw	10
  4594  0F8C  00F7               	movwf	___awdiv@divisor
  4595  0F8D  3000               	movlw	0
  4596  0F8E  00F8               	movwf	___awdiv@divisor+1
  4597  0F8F  0850               	movf	scale@scl,w
  4598  0F90  00F9               	movwf	___awdiv@dividend
  4599  0F91  01FA               	clrf	___awdiv@dividend+1
  4600  0F92  1BF9               	btfsc	___awdiv@dividend,7
  4601  0F93  03FA               	decf	___awdiv@dividend+1,f
  4602  0F94  160A  158A  2364  120A  158A  	fcall	___awdiv
  4603  0F99  0877               	movf	?___awdiv,w
  4604  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4605  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4606  0F9C  00C7               	movwf	??_scale+5
  4607  0F9D  3001               	movlw	1
  4608  0F9E                     u4575:	
  4609  0F9E  1003               	clrc
  4610  0F9F  0DC7               	rlf	??_scale+5,f
  4611  0FA0  3EFF               	addlw	-1
  4612  0FA1  1D03               	skipz
  4613  0FA2  2F9E               	goto	u4575
  4614  0FA3  1003               	clrc
  4615  0FA4  0D47               	rlf	??_scale+5,w
  4616  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4617  0FA6  0084               	movwf	4
  4618  0FA7  120A  118A  200D  120A  158A  	fcall	stringdir
  4619  0FAC  00C8               	movwf	??_scale+6
  4620  0FAD  120A  118A  200D  120A  158A  	fcall	stringdir
  4621  0FB2  00C9               	movwf	??_scale+7
  4622  0FB3  120A  118A  200D  120A  158A  	fcall	stringdir
  4623  0FB8  00CA               	movwf	??_scale+8
  4624  0FB9  120A  118A  200D  120A  158A  	fcall	stringdir
  4625  0FBE  00CB               	movwf	??_scale+9
  4626  0FBF  084B               	movf	??_scale+9,w
  4627  0FC0  00AB               	movwf	___flmul@a+3
  4628  0FC1  084A               	movf	??_scale+8,w
  4629  0FC2  00AA               	movwf	___flmul@a+2
  4630  0FC3  0849               	movf	??_scale+7,w
  4631  0FC4  00A9               	movwf	___flmul@a+1
  4632  0FC5  0848               	movf	??_scale+6,w
  4633  0FC6  00A8               	movwf	___flmul@a
  4634  0FC7  120A  158A  21A2   	fcall	___flmul
  4635  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0FCC  0827               	movf	?___flmul+3,w
  4638  0FCD  00C1               	movwf	?_scale+3
  4639  0FCE  0826               	movf	?___flmul+2,w
  4640  0FCF  00C0               	movwf	?_scale+2
  4641  0FD0  0825               	movf	?___flmul+1,w
  4642  0FD1  00BF               	movwf	?_scale+1
  4643  0FD2  0824               	movf	?___flmul,w
  4644  0FD3  00BE               	movwf	?_scale
  4645  0FD4  0008               	return
  4646  0FD5                     l3116:	
  4647                           
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4649  0FD5  0850               	movf	scale@scl,w
  4650  0FD6  00C2               	movwf	??_scale
  4651  0FD7  3001               	movlw	1
  4652  0FD8                     u4585:	
  4653  0FD8  1003               	clrc
  4654  0FD9  0DC2               	rlf	??_scale,f
  4655  0FDA  3EFF               	addlw	-1
  4656  0FDB  1D03               	skipz
  4657  0FDC  2FD8               	goto	u4585
  4658  0FDD  1003               	clrc
  4659  0FDE  0D42               	rlf	??_scale,w
  4660  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4661  0FE0  0084               	movwf	4
  4662  0FE1  120A  118A  200D  120A  158A  	fcall	stringdir
  4663  0FE6  00C3               	movwf	??_scale+1
  4664  0FE7  120A  118A  200D  120A  158A  	fcall	stringdir
  4665  0FEC  00C4               	movwf	??_scale+2
  4666  0FED  120A  118A  200D  120A  158A  	fcall	stringdir
  4667  0FF2  00C5               	movwf	??_scale+3
  4668  0FF3  120A  118A  200D   	fcall	stringdir
  4669  0FF6  00C6               	movwf	??_scale+4
  4670  0FF7  0846               	movf	??_scale+4,w
  4671  0FF8  00C1               	movwf	?_scale+3
  4672  0FF9  0845               	movf	??_scale+3,w
  4673  0FFA  00C0               	movwf	?_scale+2
  4674  0FFB  0844               	movf	??_scale+2,w
  4675  0FFC  00BF               	movwf	?_scale+1
  4676  0FFD  0843               	movf	??_scale+1,w
  4677  0FFE  00BE               	movwf	?_scale
  4678  0FFF  0008               	return
  4679  1000                     __end_of_scale:	
  4680                           
  4681                           	psect	text4
  4682  1B19                     __ptext4:	
  4683 ;; *************** function ___awmod *****************
  4684 ;; Defined at:
  4685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  divisor         2    0[COMMON] int 
  4688 ;;  dividend        2    2[COMMON] int 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  sign            1    6[COMMON] unsigned char 
  4691 ;;  counter         1    5[COMMON] unsigned char 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  2    0[COMMON] int 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         4       0       0       0       0
  4702 ;;      Locals:         2       0       0       0       0
  4703 ;;      Temps:          1       0       0       0       0
  4704 ;;      Totals:         7       0       0       0       0
  4705 ;;Total ram usage:        7 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_scale
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function ___awmod
  4716  1B19                     ___awmod:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4720  1B19  01F6               	clrf	___awmod@sign
  4721  1B1A  1FF3               	btfss	___awmod@dividend+1,7
  4722  1B1B  2B23               	goto	l2630
  4723  1B1C  09F2               	comf	___awmod@dividend,f
  4724  1B1D  09F3               	comf	___awmod@dividend+1,f
  4725  1B1E  0AF2               	incf	___awmod@dividend,f
  4726  1B1F  1903               	skipnz
  4727  1B20  0AF3               	incf	___awmod@dividend+1,f
  4728  1B21  01F6               	clrf	___awmod@sign
  4729  1B22  0AF6               	incf	___awmod@sign,f
  4730  1B23                     l2630:	
  4731  1B23  1FF1               	btfss	___awmod@divisor+1,7
  4732  1B24  2B2A               	goto	l2634
  4733  1B25  09F0               	comf	___awmod@divisor,f
  4734  1B26  09F1               	comf	___awmod@divisor+1,f
  4735  1B27  0AF0               	incf	___awmod@divisor,f
  4736  1B28  1903               	skipnz
  4737  1B29  0AF1               	incf	___awmod@divisor+1,f
  4738  1B2A                     l2634:	
  4739  1B2A  0870               	movf	___awmod@divisor,w
  4740  1B2B  0471               	iorwf	___awmod@divisor+1,w
  4741  1B2C  1903               	btfsc	3,2
  4742  1B2D  2B57               	goto	l2652
  4743  1B2E  01F5               	clrf	___awmod@counter
  4744  1B2F  0AF5               	incf	___awmod@counter,f
  4745  1B30                     l2642:	
  4746  1B30  1BF1               	btfsc	___awmod@divisor+1,7
  4747  1B31  2B3E               	goto	l2644
  4748  1B32  3001               	movlw	1
  4749  1B33                     u3305:	
  4750  1B33  1003               	clrc
  4751  1B34  0DF0               	rlf	___awmod@divisor,f
  4752  1B35  0DF1               	rlf	___awmod@divisor+1,f
  4753  1B36  3EFF               	addlw	-1
  4754  1B37  1D03               	skipz
  4755  1B38  2B33               	goto	u3305
  4756  1B39  3001               	movlw	1
  4757  1B3A  00F4               	movwf	??___awmod
  4758  1B3B  0874               	movf	??___awmod,w
  4759  1B3C  07F5               	addwf	___awmod@counter,f
  4760  1B3D  2B30               	goto	l2642
  4761  1B3E                     l2644:	
  4762  1B3E  0871               	movf	___awmod@divisor+1,w
  4763  1B3F  0273               	subwf	___awmod@dividend+1,w
  4764  1B40  1D03               	skipz
  4765  1B41  2B44               	goto	u3325
  4766  1B42  0870               	movf	___awmod@divisor,w
  4767  1B43  0272               	subwf	___awmod@dividend,w
  4768  1B44                     u3325:	
  4769  1B44  1C03               	skipc
  4770  1B45  2B4C               	goto	l2648
  4771  1B46  0870               	movf	___awmod@divisor,w
  4772  1B47  02F2               	subwf	___awmod@dividend,f
  4773  1B48  0871               	movf	___awmod@divisor+1,w
  4774  1B49  1C03               	skipc
  4775  1B4A  03F3               	decf	___awmod@dividend+1,f
  4776  1B4B  02F3               	subwf	___awmod@dividend+1,f
  4777  1B4C                     l2648:	
  4778  1B4C  3001               	movlw	1
  4779  1B4D                     u3335:	
  4780  1B4D  1003               	clrc
  4781  1B4E  0CF1               	rrf	___awmod@divisor+1,f
  4782  1B4F  0CF0               	rrf	___awmod@divisor,f
  4783  1B50  3EFF               	addlw	-1
  4784  1B51  1D03               	skipz
  4785  1B52  2B4D               	goto	u3335
  4786  1B53  3001               	movlw	1
  4787  1B54  02F5               	subwf	___awmod@counter,f
  4788  1B55  1D03               	btfss	3,2
  4789  1B56  2B3E               	goto	l2644
  4790  1B57                     l2652:	
  4791  1B57  0876               	movf	___awmod@sign,w
  4792  1B58  1903               	btfsc	3,2
  4793  1B59  2B5F               	goto	l2656
  4794  1B5A  09F2               	comf	___awmod@dividend,f
  4795  1B5B  09F3               	comf	___awmod@dividend+1,f
  4796  1B5C  0AF2               	incf	___awmod@dividend,f
  4797  1B5D  1903               	skipnz
  4798  1B5E  0AF3               	incf	___awmod@dividend+1,f
  4799  1B5F                     l2656:	
  4800  1B5F  0873               	movf	___awmod@dividend+1,w
  4801  1B60  00F1               	movwf	?___awmod+1
  4802  1B61  0872               	movf	___awmod@dividend,w
  4803  1B62  00F0               	movwf	?___awmod
  4804  1B63  0008               	return
  4805  1B64                     __end_of___awmod:	
  4806                           
  4807                           	psect	text5
  4808  1B64                     __ptext5:	
  4809 ;; *************** function ___awdiv *****************
  4810 ;; Defined at:
  4811 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  divisor         2    7[COMMON] int 
  4814 ;;  dividend        2    9[COMMON] int 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  quotient        2    2[BANK0 ] int 
  4817 ;;  sign            1    1[BANK0 ] unsigned char 
  4818 ;;  counter         1    0[BANK0 ] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  2    7[COMMON] int 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4828 ;;      Params:         4       0       0       0       0
  4829 ;;      Locals:         0       4       0       0       0
  4830 ;;      Temps:          1       0       0       0       0
  4831 ;;      Totals:         5       4       0       0       0
  4832 ;;Total ram usage:        9 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_scale
  4838 ;;		_sprintf
  4839 ;;		_uint_to_array
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function ___awdiv
  4845  1B64                     ___awdiv:	
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4849  1B64  1283               	bcf	3,5	;RP0=0, select bank0
  4850  1B65  1303               	bcf	3,6	;RP1=0, select bank0
  4851  1B66  01A1               	clrf	___awdiv@sign
  4852  1B67  1FF8               	btfss	___awdiv@divisor+1,7
  4853  1B68  2B70               	goto	l2586
  4854  1B69  09F7               	comf	___awdiv@divisor,f
  4855  1B6A  09F8               	comf	___awdiv@divisor+1,f
  4856  1B6B  0AF7               	incf	___awdiv@divisor,f
  4857  1B6C  1903               	skipnz
  4858  1B6D  0AF8               	incf	___awdiv@divisor+1,f
  4859  1B6E  01A1               	clrf	___awdiv@sign
  4860  1B6F  0AA1               	incf	___awdiv@sign,f
  4861  1B70                     l2586:	
  4862  1B70  1FFA               	btfss	___awdiv@dividend+1,7
  4863  1B71  2B7B               	goto	l2592
  4864  1B72  09F9               	comf	___awdiv@dividend,f
  4865  1B73  09FA               	comf	___awdiv@dividend+1,f
  4866  1B74  0AF9               	incf	___awdiv@dividend,f
  4867  1B75  1903               	skipnz
  4868  1B76  0AFA               	incf	___awdiv@dividend+1,f
  4869  1B77  3001               	movlw	1
  4870  1B78  00FB               	movwf	??___awdiv
  4871  1B79  087B               	movf	??___awdiv,w
  4872  1B7A  06A1               	xorwf	___awdiv@sign,f
  4873  1B7B                     l2592:	
  4874  1B7B  01A2               	clrf	___awdiv@quotient
  4875  1B7C  01A3               	clrf	___awdiv@quotient+1
  4876  1B7D  0877               	movf	___awdiv@divisor,w
  4877  1B7E  0478               	iorwf	___awdiv@divisor+1,w
  4878  1B7F  1903               	btfsc	3,2
  4879  1B80  2BB2               	goto	l2614
  4880  1B81  01A0               	clrf	___awdiv@counter
  4881  1B82  0AA0               	incf	___awdiv@counter,f
  4882  1B83                     l2602:	
  4883  1B83  1BF8               	btfsc	___awdiv@divisor+1,7
  4884  1B84  2B91               	goto	l2604
  4885  1B85  3001               	movlw	1
  4886  1B86                     u3205:	
  4887  1B86  1003               	clrc
  4888  1B87  0DF7               	rlf	___awdiv@divisor,f
  4889  1B88  0DF8               	rlf	___awdiv@divisor+1,f
  4890  1B89  3EFF               	addlw	-1
  4891  1B8A  1D03               	skipz
  4892  1B8B  2B86               	goto	u3205
  4893  1B8C  3001               	movlw	1
  4894  1B8D  00FB               	movwf	??___awdiv
  4895  1B8E  087B               	movf	??___awdiv,w
  4896  1B8F  07A0               	addwf	___awdiv@counter,f
  4897  1B90  2B83               	goto	l2602
  4898  1B91                     l2604:	
  4899  1B91  3001               	movlw	1
  4900  1B92                     u3225:	
  4901  1B92  1003               	clrc
  4902  1B93  0DA2               	rlf	___awdiv@quotient,f
  4903  1B94  0DA3               	rlf	___awdiv@quotient+1,f
  4904  1B95  3EFF               	addlw	-1
  4905  1B96  1D03               	skipz
  4906  1B97  2B92               	goto	u3225
  4907  1B98  0878               	movf	___awdiv@divisor+1,w
  4908  1B99  027A               	subwf	___awdiv@dividend+1,w
  4909  1B9A  1D03               	skipz
  4910  1B9B  2B9E               	goto	u3235
  4911  1B9C  0877               	movf	___awdiv@divisor,w
  4912  1B9D  0279               	subwf	___awdiv@dividend,w
  4913  1B9E                     u3235:	
  4914  1B9E  1C03               	skipc
  4915  1B9F  2BA7               	goto	l2610
  4916  1BA0  0877               	movf	___awdiv@divisor,w
  4917  1BA1  02F9               	subwf	___awdiv@dividend,f
  4918  1BA2  0878               	movf	___awdiv@divisor+1,w
  4919  1BA3  1C03               	skipc
  4920  1BA4  03FA               	decf	___awdiv@dividend+1,f
  4921  1BA5  02FA               	subwf	___awdiv@dividend+1,f
  4922  1BA6  1422               	bsf	___awdiv@quotient,0
  4923  1BA7                     l2610:	
  4924  1BA7  3001               	movlw	1
  4925  1BA8                     u3245:	
  4926  1BA8  1003               	clrc
  4927  1BA9  0CF8               	rrf	___awdiv@divisor+1,f
  4928  1BAA  0CF7               	rrf	___awdiv@divisor,f
  4929  1BAB  3EFF               	addlw	-1
  4930  1BAC  1D03               	skipz
  4931  1BAD  2BA8               	goto	u3245
  4932  1BAE  3001               	movlw	1
  4933  1BAF  02A0               	subwf	___awdiv@counter,f
  4934  1BB0  1D03               	btfss	3,2
  4935  1BB1  2B91               	goto	l2604
  4936  1BB2                     l2614:	
  4937  1BB2  0821               	movf	___awdiv@sign,w
  4938  1BB3  1903               	btfsc	3,2
  4939  1BB4  2BBA               	goto	l2618
  4940  1BB5  09A2               	comf	___awdiv@quotient,f
  4941  1BB6  09A3               	comf	___awdiv@quotient+1,f
  4942  1BB7  0AA2               	incf	___awdiv@quotient,f
  4943  1BB8  1903               	skipnz
  4944  1BB9  0AA3               	incf	___awdiv@quotient+1,f
  4945  1BBA                     l2618:	
  4946  1BBA  0823               	movf	___awdiv@quotient+1,w
  4947  1BBB  00F8               	movwf	?___awdiv+1
  4948  1BBC  0822               	movf	___awdiv@quotient,w
  4949  1BBD  00F7               	movwf	?___awdiv
  4950  1BBE  0008               	return
  4951  1BBF                     __end_of___awdiv:	
  4952                           
  4953                           	psect	text6
  4954  18F1                     __ptext6:	
  4955 ;; *************** function _isdigit *****************
  4956 ;; Defined at:
  4957 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  c               1    wreg     unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  c               1    1[COMMON] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;		None               void
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4971 ;;      Params:         0       0       0       0       0
  4972 ;;      Locals:         2       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0
  4974 ;;      Totals:         2       0       0       0       0
  4975 ;;Total ram usage:        2 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_sprintf
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           
  4985                           ;psect for function _isdigit
  4986  18F1                     _isdigit:	
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4990                           ;isdigit@c stored from wreg
  4991  18F1  00F1               	movwf	isdigit@c
  4992  18F2  01F0               	clrf	_isdigit$784
  4993  18F3  303A               	movlw	58
  4994  18F4  0271               	subwf	isdigit@c,w
  4995  18F5  1803               	skipnc
  4996  18F6  28FD               	goto	l3128
  4997  18F7  3030               	movlw	48
  4998  18F8  0271               	subwf	isdigit@c,w
  4999  18F9  1C03               	skipc
  5000  18FA  28FD               	goto	l3128
  5001  18FB  01F0               	clrf	_isdigit$784
  5002  18FC  0AF0               	incf	_isdigit$784,f
  5003  18FD                     l3128:	
  5004  18FD  0C70               	rrf	_isdigit$784,w
  5005  18FE  0008               	return
  5006  18FF                     __end_of_isdigit:	
  5007                           
  5008                           	psect	text7
  5009  1DFF                     __ptext7:	
  5010 ;; *************** function _fround *****************
  5011 ;; Defined at:
  5012 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  prec            1    wreg     unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  prec            1   49[BANK0 ] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  4   30[BANK0 ] unsigned char 
  5019 ;; Registers used:
  5020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5026 ;;      Params:         0       4       0       0       0
  5027 ;;      Locals:         0       9       0       0       0
  5028 ;;      Temps:          0       7       0       0       0
  5029 ;;      Totals:         0      20       0       0       0
  5030 ;;Total ram usage:       20 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    2
  5033 ;; This function calls:
  5034 ;;		___flmul
  5035 ;;		___lwdiv
  5036 ;;		___lwmod
  5037 ;; This function is called by:
  5038 ;;		_sprintf
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function _fround
  5044  1DFF                     _fround:	
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5048                           ;fround@prec stored from wreg
  5049  1DFF  1283               	bcf	3,5	;RP0=0, select bank0
  5050  1E00  1303               	bcf	3,6	;RP1=0, select bank0
  5051  1E01  00D1               	movwf	fround@prec
  5052                           
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  5054  1E02  306E               	movlw	110
  5055  1E03  0251               	subwf	fround@prec,w
  5056  1E04  1C03               	skipc
  5057  1E05  2F11               	goto	l3070
  5058                           
  5059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5060  1E06  303F               	movlw	63
  5061  1E07  00A7               	movwf	___flmul@b+3
  5062  1E08  3000               	movlw	0
  5063  1E09  00A6               	movwf	___flmul@b+2
  5064  1E0A  3000               	movlw	0
  5065  1E0B  00A5               	movwf	___flmul@b+1
  5066  1E0C  3000               	movlw	0
  5067  1E0D  00A4               	movwf	___flmul@b
  5068  1E0E  3064               	movlw	100
  5069  1E0F  00F6               	movwf	___lwdiv@divisor
  5070  1E10  3000               	movlw	0
  5071  1E11  00F7               	movwf	___lwdiv@divisor+1
  5072  1E12  0851               	movf	fround@prec,w
  5073  1E13  00C2               	movwf	??_fround
  5074  1E14  01C3               	clrf	??_fround+1
  5075  1E15  0842               	movf	??_fround,w
  5076  1E16  00F8               	movwf	___lwdiv@dividend
  5077  1E17  0843               	movf	??_fround+1,w
  5078  1E18  00F9               	movwf	___lwdiv@dividend+1
  5079  1E19  160A  158A  2258  160A  158A  	fcall	___lwdiv
  5080  1E1E  0876               	movf	?___lwdiv,w
  5081  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  5082  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  5083  1E21  00C4               	movwf	??_fround+2
  5084  1E22  3001               	movlw	1
  5085  1E23                     u4355:	
  5086  1E23  1003               	clrc
  5087  1E24  0DC4               	rlf	??_fround+2,f
  5088  1E25  3EFF               	addlw	-1
  5089  1E26  1D03               	skipz
  5090  1E27  2E23               	goto	u4355
  5091  1E28  1003               	clrc
  5092  1E29  0D44               	rlf	??_fround+2,w
  5093  1E2A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5094  1E2B  0084               	movwf	4
  5095  1E2C  120A  118A  200D  160A  158A  	fcall	stringdir
  5096  1E31  00C5               	movwf	??_fround+3
  5097  1E32  120A  118A  200D  160A  158A  	fcall	stringdir
  5098  1E37  00C6               	movwf	??_fround+4
  5099  1E38  120A  118A  200D  160A  158A  	fcall	stringdir
  5100  1E3D  00C7               	movwf	??_fround+5
  5101  1E3E  120A  118A  200D  160A  158A  	fcall	stringdir
  5102  1E43  00C8               	movwf	??_fround+6
  5103  1E44  0848               	movf	??_fround+6,w
  5104  1E45  00AB               	movwf	___flmul@a+3
  5105  1E46  0847               	movf	??_fround+5,w
  5106  1E47  00AA               	movwf	___flmul@a+2
  5107  1E48  0846               	movf	??_fround+4,w
  5108  1E49  00A9               	movwf	___flmul@a+1
  5109  1E4A  0845               	movf	??_fround+3,w
  5110  1E4B  00A8               	movwf	___flmul@a
  5111  1E4C  120A  158A  21A2  160A  158A  	fcall	___flmul
  5112  1E51  1283               	bcf	3,5	;RP0=0, select bank0
  5113  1E52  1303               	bcf	3,6	;RP1=0, select bank0
  5114  1E53  0827               	movf	?___flmul+3,w
  5115  1E54  00D0               	movwf	_fround$964+3
  5116  1E55  0826               	movf	?___flmul+2,w
  5117  1E56  00CF               	movwf	_fround$964+2
  5118  1E57  0825               	movf	?___flmul+1,w
  5119  1E58  00CE               	movwf	_fround$964+1
  5120  1E59  0824               	movf	?___flmul,w
  5121  1E5A  00CD               	movwf	_fround$964
  5122                           
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5124  1E5B  300A               	movlw	10
  5125  1E5C  00F6               	movwf	___lwdiv@divisor
  5126  1E5D  3000               	movlw	0
  5127  1E5E  00F7               	movwf	___lwdiv@divisor+1
  5128  1E5F  0851               	movf	fround@prec,w
  5129  1E60  00C2               	movwf	??_fround
  5130  1E61  01C3               	clrf	??_fround+1
  5131  1E62  0842               	movf	??_fround,w
  5132  1E63  00F2               	movwf	___lwmod@dividend
  5133  1E64  0843               	movf	??_fround+1,w
  5134  1E65  00F3               	movwf	___lwmod@dividend+1
  5135  1E66  3064               	movlw	100
  5136  1E67  00F0               	movwf	___lwmod@divisor
  5137  1E68  3000               	movlw	0
  5138  1E69  00F1               	movwf	___lwmod@divisor+1
  5139  1E6A  160A  158A  21F0  160A  158A  	fcall	___lwmod
  5140  1E6F  0871               	movf	?___lwmod+1,w
  5141  1E70  00F9               	movwf	___lwdiv@dividend+1
  5142  1E71  0870               	movf	?___lwmod,w
  5143  1E72  00F8               	movwf	___lwdiv@dividend
  5144  1E73  160A  158A  2258  160A  158A  	fcall	___lwdiv
  5145  1E78  0876               	movf	?___lwdiv,w
  5146  1E79  1283               	bcf	3,5	;RP0=0, select bank0
  5147  1E7A  1303               	bcf	3,6	;RP1=0, select bank0
  5148  1E7B  00C4               	movwf	??_fround+2
  5149  1E7C  3001               	movlw	1
  5150  1E7D                     u4365:	
  5151  1E7D  1003               	clrc
  5152  1E7E  0DC4               	rlf	??_fround+2,f
  5153  1E7F  3EFF               	addlw	-1
  5154  1E80  1D03               	skipz
  5155  1E81  2E7D               	goto	u4365
  5156  1E82  1003               	clrc
  5157  1E83  0D44               	rlf	??_fround+2,w
  5158  1E84  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5159  1E85  0084               	movwf	4
  5160  1E86  120A  118A  200D  160A  158A  	fcall	stringdir
  5161  1E8B  00C5               	movwf	??_fround+3
  5162  1E8C  120A  118A  200D  160A  158A  	fcall	stringdir
  5163  1E91  00C6               	movwf	??_fround+4
  5164  1E92  120A  118A  200D  160A  158A  	fcall	stringdir
  5165  1E97  00C7               	movwf	??_fround+5
  5166  1E98  120A  118A  200D  160A  158A  	fcall	stringdir
  5167  1E9D  00C8               	movwf	??_fround+6
  5168  1E9E  0848               	movf	??_fround+6,w
  5169  1E9F  00A7               	movwf	___flmul@b+3
  5170  1EA0  0847               	movf	??_fround+5,w
  5171  1EA1  00A6               	movwf	___flmul@b+2
  5172  1EA2  0846               	movf	??_fround+4,w
  5173  1EA3  00A5               	movwf	___flmul@b+1
  5174  1EA4  0845               	movf	??_fround+3,w
  5175  1EA5  00A4               	movwf	___flmul@b
  5176  1EA6  0850               	movf	_fround$964+3,w
  5177  1EA7  00AB               	movwf	___flmul@a+3
  5178  1EA8  084F               	movf	_fround$964+2,w
  5179  1EA9  00AA               	movwf	___flmul@a+2
  5180  1EAA  084E               	movf	_fround$964+1,w
  5181  1EAB  00A9               	movwf	___flmul@a+1
  5182  1EAC  084D               	movf	_fround$964,w
  5183  1EAD  00A8               	movwf	___flmul@a
  5184  1EAE  120A  158A  21A2  160A  158A  	fcall	___flmul
  5185  1EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5186  1EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5187  1EB5  0827               	movf	?___flmul+3,w
  5188  1EB6  00CC               	movwf	_fround$965+3
  5189  1EB7  0826               	movf	?___flmul+2,w
  5190  1EB8  00CB               	movwf	_fround$965+2
  5191  1EB9  0825               	movf	?___flmul+1,w
  5192  1EBA  00CA               	movwf	_fround$965+1
  5193  1EBB  0824               	movf	?___flmul,w
  5194  1EBC  00C9               	movwf	_fround$965
  5195                           
  5196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5197  1EBD  300A               	movlw	10
  5198  1EBE  00F0               	movwf	___lwmod@divisor
  5199  1EBF  3000               	movlw	0
  5200  1EC0  00F1               	movwf	___lwmod@divisor+1
  5201  1EC1  0851               	movf	fround@prec,w
  5202  1EC2  00C2               	movwf	??_fround
  5203  1EC3  01C3               	clrf	??_fround+1
  5204  1EC4  0842               	movf	??_fround,w
  5205  1EC5  00F2               	movwf	___lwmod@dividend
  5206  1EC6  0843               	movf	??_fround+1,w
  5207  1EC7  00F3               	movwf	___lwmod@dividend+1
  5208  1EC8  160A  158A  21F0  160A  158A  	fcall	___lwmod
  5209  1ECD  0870               	movf	?___lwmod,w
  5210  1ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5211  1ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5212  1ED0  00C4               	movwf	??_fround+2
  5213  1ED1  3001               	movlw	1
  5214  1ED2                     u4375:	
  5215  1ED2  1003               	clrc
  5216  1ED3  0DC4               	rlf	??_fround+2,f
  5217  1ED4  3EFF               	addlw	-1
  5218  1ED5  1D03               	skipz
  5219  1ED6  2ED2               	goto	u4375
  5220  1ED7  1003               	clrc
  5221  1ED8  0D44               	rlf	??_fround+2,w
  5222  1ED9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5223  1EDA  0084               	movwf	4
  5224  1EDB  120A  118A  200D  160A  158A  	fcall	stringdir
  5225  1EE0  00C5               	movwf	??_fround+3
  5226  1EE1  120A  118A  200D  160A  158A  	fcall	stringdir
  5227  1EE6  00C6               	movwf	??_fround+4
  5228  1EE7  120A  118A  200D  160A  158A  	fcall	stringdir
  5229  1EEC  00C7               	movwf	??_fround+5
  5230  1EED  120A  118A  200D  160A  158A  	fcall	stringdir
  5231  1EF2  00C8               	movwf	??_fround+6
  5232  1EF3  0848               	movf	??_fround+6,w
  5233  1EF4  00A7               	movwf	___flmul@b+3
  5234  1EF5  0847               	movf	??_fround+5,w
  5235  1EF6  00A6               	movwf	___flmul@b+2
  5236  1EF7  0846               	movf	??_fround+4,w
  5237  1EF8  00A5               	movwf	___flmul@b+1
  5238  1EF9  0845               	movf	??_fround+3,w
  5239  1EFA  00A4               	movwf	___flmul@b
  5240  1EFB  084C               	movf	_fround$965+3,w
  5241  1EFC  00AB               	movwf	___flmul@a+3
  5242  1EFD  084B               	movf	_fround$965+2,w
  5243  1EFE  00AA               	movwf	___flmul@a+2
  5244  1EFF  084A               	movf	_fround$965+1,w
  5245  1F00  00A9               	movwf	___flmul@a+1
  5246  1F01  0849               	movf	_fround$965,w
  5247  1F02  00A8               	movwf	___flmul@a
  5248  1F03  120A  158A  21A2   	fcall	___flmul
  5249  1F06  1283               	bcf	3,5	;RP0=0, select bank0
  5250  1F07  1303               	bcf	3,6	;RP1=0, select bank0
  5251  1F08  0827               	movf	?___flmul+3,w
  5252  1F09  00C1               	movwf	?_fround+3
  5253  1F0A  0826               	movf	?___flmul+2,w
  5254  1F0B  00C0               	movwf	?_fround+2
  5255  1F0C  0825               	movf	?___flmul+1,w
  5256  1F0D  00BF               	movwf	?_fround+1
  5257  1F0E  0824               	movf	?___flmul,w
  5258  1F0F  00BE               	movwf	?_fround
  5259  1F10  0008               	return
  5260  1F11                     l3070:	
  5261  1F11  300B               	movlw	11
  5262  1F12  0251               	subwf	fround@prec,w
  5263  1F13  1C03               	skipc
  5264  1F14  2FBE               	goto	l3076
  5265                           
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5267  1F15  303F               	movlw	63
  5268  1F16  00A7               	movwf	___flmul@b+3
  5269  1F17  3000               	movlw	0
  5270  1F18  00A6               	movwf	___flmul@b+2
  5271  1F19  3000               	movlw	0
  5272  1F1A  00A5               	movwf	___flmul@b+1
  5273  1F1B  3000               	movlw	0
  5274  1F1C  00A4               	movwf	___flmul@b
  5275  1F1D  300A               	movlw	10
  5276  1F1E  00F6               	movwf	___lwdiv@divisor
  5277  1F1F  3000               	movlw	0
  5278  1F20  00F7               	movwf	___lwdiv@divisor+1
  5279  1F21  0851               	movf	fround@prec,w
  5280  1F22  00C2               	movwf	??_fround
  5281  1F23  01C3               	clrf	??_fround+1
  5282  1F24  0842               	movf	??_fround,w
  5283  1F25  00F8               	movwf	___lwdiv@dividend
  5284  1F26  0843               	movf	??_fround+1,w
  5285  1F27  00F9               	movwf	___lwdiv@dividend+1
  5286  1F28  160A  158A  2258  160A  158A  	fcall	___lwdiv
  5287  1F2D  0876               	movf	?___lwdiv,w
  5288  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5289  1F2F  1303               	bcf	3,6	;RP1=0, select bank0
  5290  1F30  00C4               	movwf	??_fround+2
  5291  1F31  3001               	movlw	1
  5292  1F32                     u4395:	
  5293  1F32  1003               	clrc
  5294  1F33  0DC4               	rlf	??_fround+2,f
  5295  1F34  3EFF               	addlw	-1
  5296  1F35  1D03               	skipz
  5297  1F36  2F32               	goto	u4395
  5298  1F37  1003               	clrc
  5299  1F38  0D44               	rlf	??_fround+2,w
  5300  1F39  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5301  1F3A  0084               	movwf	4
  5302  1F3B  120A  118A  200D  160A  158A  	fcall	stringdir
  5303  1F40  00C5               	movwf	??_fround+3
  5304  1F41  120A  118A  200D  160A  158A  	fcall	stringdir
  5305  1F46  00C6               	movwf	??_fround+4
  5306  1F47  120A  118A  200D  160A  158A  	fcall	stringdir
  5307  1F4C  00C7               	movwf	??_fround+5
  5308  1F4D  120A  118A  200D  160A  158A  	fcall	stringdir
  5309  1F52  00C8               	movwf	??_fround+6
  5310  1F53  0848               	movf	??_fround+6,w
  5311  1F54  00AB               	movwf	___flmul@a+3
  5312  1F55  0847               	movf	??_fround+5,w
  5313  1F56  00AA               	movwf	___flmul@a+2
  5314  1F57  0846               	movf	??_fround+4,w
  5315  1F58  00A9               	movwf	___flmul@a+1
  5316  1F59  0845               	movf	??_fround+3,w
  5317  1F5A  00A8               	movwf	___flmul@a
  5318  1F5B  120A  158A  21A2  160A  158A  	fcall	___flmul
  5319  1F60  1283               	bcf	3,5	;RP0=0, select bank0
  5320  1F61  1303               	bcf	3,6	;RP1=0, select bank0
  5321  1F62  0827               	movf	?___flmul+3,w
  5322  1F63  00D0               	movwf	_fround$964+3
  5323  1F64  0826               	movf	?___flmul+2,w
  5324  1F65  00CF               	movwf	_fround$964+2
  5325  1F66  0825               	movf	?___flmul+1,w
  5326  1F67  00CE               	movwf	_fround$964+1
  5327  1F68  0824               	movf	?___flmul,w
  5328  1F69  00CD               	movwf	_fround$964
  5329                           
  5330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5331  1F6A  300A               	movlw	10
  5332  1F6B  00F0               	movwf	___lwmod@divisor
  5333  1F6C  3000               	movlw	0
  5334  1F6D  00F1               	movwf	___lwmod@divisor+1
  5335  1F6E  0851               	movf	fround@prec,w
  5336  1F6F  00C2               	movwf	??_fround
  5337  1F70  01C3               	clrf	??_fround+1
  5338  1F71  0842               	movf	??_fround,w
  5339  1F72  00F2               	movwf	___lwmod@dividend
  5340  1F73  0843               	movf	??_fround+1,w
  5341  1F74  00F3               	movwf	___lwmod@dividend+1
  5342  1F75  160A  158A  21F0  160A  158A  	fcall	___lwmod
  5343  1F7A  0870               	movf	?___lwmod,w
  5344  1F7B  1283               	bcf	3,5	;RP0=0, select bank0
  5345  1F7C  1303               	bcf	3,6	;RP1=0, select bank0
  5346  1F7D  00C4               	movwf	??_fround+2
  5347  1F7E  3001               	movlw	1
  5348  1F7F                     u4405:	
  5349  1F7F  1003               	clrc
  5350  1F80  0DC4               	rlf	??_fround+2,f
  5351  1F81  3EFF               	addlw	-1
  5352  1F82  1D03               	skipz
  5353  1F83  2F7F               	goto	u4405
  5354  1F84  1003               	clrc
  5355  1F85  0D44               	rlf	??_fround+2,w
  5356  1F86  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5357  1F87  0084               	movwf	4
  5358  1F88  120A  118A  200D  160A  158A  	fcall	stringdir
  5359  1F8D  00C5               	movwf	??_fround+3
  5360  1F8E  120A  118A  200D  160A  158A  	fcall	stringdir
  5361  1F93  00C6               	movwf	??_fround+4
  5362  1F94  120A  118A  200D  160A  158A  	fcall	stringdir
  5363  1F99  00C7               	movwf	??_fround+5
  5364  1F9A  120A  118A  200D  160A  158A  	fcall	stringdir
  5365  1F9F  00C8               	movwf	??_fround+6
  5366  1FA0  0848               	movf	??_fround+6,w
  5367  1FA1  00A7               	movwf	___flmul@b+3
  5368  1FA2  0847               	movf	??_fround+5,w
  5369  1FA3  00A6               	movwf	___flmul@b+2
  5370  1FA4  0846               	movf	??_fround+4,w
  5371  1FA5  00A5               	movwf	___flmul@b+1
  5372  1FA6  0845               	movf	??_fround+3,w
  5373  1FA7  00A4               	movwf	___flmul@b
  5374  1FA8  0850               	movf	_fround$964+3,w
  5375  1FA9  00AB               	movwf	___flmul@a+3
  5376  1FAA  084F               	movf	_fround$964+2,w
  5377  1FAB  00AA               	movwf	___flmul@a+2
  5378  1FAC  084E               	movf	_fround$964+1,w
  5379  1FAD  00A9               	movwf	___flmul@a+1
  5380  1FAE  084D               	movf	_fround$964,w
  5381  1FAF  00A8               	movwf	___flmul@a
  5382  1FB0  120A  158A  21A2   	fcall	___flmul
  5383  1FB3  1283               	bcf	3,5	;RP0=0, select bank0
  5384  1FB4  1303               	bcf	3,6	;RP1=0, select bank0
  5385  1FB5  0827               	movf	?___flmul+3,w
  5386  1FB6  00C1               	movwf	?_fround+3
  5387  1FB7  0826               	movf	?___flmul+2,w
  5388  1FB8  00C0               	movwf	?_fround+2
  5389  1FB9  0825               	movf	?___flmul+1,w
  5390  1FBA  00BF               	movwf	?_fround+1
  5391  1FBB  0824               	movf	?___flmul,w
  5392  1FBC  00BE               	movwf	?_fround
  5393  1FBD  0008               	return
  5394  1FBE                     l3076:	
  5395                           
  5396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5397  1FBE  303F               	movlw	63
  5398  1FBF  00A7               	movwf	___flmul@b+3
  5399  1FC0  3000               	movlw	0
  5400  1FC1  00A6               	movwf	___flmul@b+2
  5401  1FC2  3000               	movlw	0
  5402  1FC3  00A5               	movwf	___flmul@b+1
  5403  1FC4  3000               	movlw	0
  5404  1FC5  00A4               	movwf	___flmul@b
  5405  1FC6  0851               	movf	fround@prec,w
  5406  1FC7  00C2               	movwf	??_fround
  5407  1FC8  3001               	movlw	1
  5408  1FC9                     u4415:	
  5409  1FC9  1003               	clrc
  5410  1FCA  0DC2               	rlf	??_fround,f
  5411  1FCB  3EFF               	addlw	-1
  5412  1FCC  1D03               	skipz
  5413  1FCD  2FC9               	goto	u4415
  5414  1FCE  1003               	clrc
  5415  1FCF  0D42               	rlf	??_fround,w
  5416  1FD0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5417  1FD1  0084               	movwf	4
  5418  1FD2  120A  118A  200D  160A  158A  	fcall	stringdir
  5419  1FD7  00C3               	movwf	??_fround+1
  5420  1FD8  120A  118A  200D  160A  158A  	fcall	stringdir
  5421  1FDD  00C4               	movwf	??_fround+2
  5422  1FDE  120A  118A  200D  160A  158A  	fcall	stringdir
  5423  1FE3  00C5               	movwf	??_fround+3
  5424  1FE4  120A  118A  200D  160A  158A  	fcall	stringdir
  5425  1FE9  00C6               	movwf	??_fround+4
  5426  1FEA  0846               	movf	??_fround+4,w
  5427  1FEB  00AB               	movwf	___flmul@a+3
  5428  1FEC  0845               	movf	??_fround+3,w
  5429  1FED  00AA               	movwf	___flmul@a+2
  5430  1FEE  0844               	movf	??_fround+2,w
  5431  1FEF  00A9               	movwf	___flmul@a+1
  5432  1FF0  0843               	movf	??_fround+1,w
  5433  1FF1  00A8               	movwf	___flmul@a
  5434  1FF2  120A  158A  21A2   	fcall	___flmul
  5435  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  5436  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  5437  1FF7  0827               	movf	?___flmul+3,w
  5438  1FF8  00C1               	movwf	?_fround+3
  5439  1FF9  0826               	movf	?___flmul+2,w
  5440  1FFA  00C0               	movwf	?_fround+2
  5441  1FFB  0825               	movf	?___flmul+1,w
  5442  1FFC  00BF               	movwf	?_fround+1
  5443  1FFD  0824               	movf	?___flmul,w
  5444  1FFE  00BE               	movwf	?_fround
  5445  1FFF  0008               	return
  5446  2000                     __end_of_fround:	
  5447                           
  5448                           	psect	text8
  5449  19F0                     __ptext8:	
  5450 ;; *************** function ___lwmod *****************
  5451 ;; Defined at:
  5452 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  divisor         2    0[COMMON] unsigned int 
  5455 ;;  dividend        2    2[COMMON] unsigned int 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  counter         1    5[COMMON] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  2    0[COMMON] unsigned int 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         4       0       0       0       0
  5468 ;;      Locals:         1       0       0       0       0
  5469 ;;      Temps:          1       0       0       0       0
  5470 ;;      Totals:         6       0       0       0       0
  5471 ;;Total ram usage:        6 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_fround
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function ___lwmod
  5482  19F0                     ___lwmod:	
  5483                           
  5484                           ;incstack = 0
  5485                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5486  19F0  0870               	movf	___lwmod@divisor,w
  5487  19F1  0471               	iorwf	___lwmod@divisor+1,w
  5488  19F2  1903               	btfsc	3,2
  5489  19F3  2A1D               	goto	l2704
  5490  19F4  01F5               	clrf	___lwmod@counter
  5491  19F5  0AF5               	incf	___lwmod@counter,f
  5492  19F6                     l2694:	
  5493  19F6  1BF1               	btfsc	___lwmod@divisor+1,7
  5494  19F7  2A04               	goto	l2696
  5495  19F8  3001               	movlw	1
  5496  19F9                     u3445:	
  5497  19F9  1003               	clrc
  5498  19FA  0DF0               	rlf	___lwmod@divisor,f
  5499  19FB  0DF1               	rlf	___lwmod@divisor+1,f
  5500  19FC  3EFF               	addlw	-1
  5501  19FD  1D03               	skipz
  5502  19FE  29F9               	goto	u3445
  5503  19FF  3001               	movlw	1
  5504  1A00  00F4               	movwf	??___lwmod
  5505  1A01  0874               	movf	??___lwmod,w
  5506  1A02  07F5               	addwf	___lwmod@counter,f
  5507  1A03  29F6               	goto	l2694
  5508  1A04                     l2696:	
  5509  1A04  0871               	movf	___lwmod@divisor+1,w
  5510  1A05  0273               	subwf	___lwmod@dividend+1,w
  5511  1A06  1D03               	skipz
  5512  1A07  2A0A               	goto	u3465
  5513  1A08  0870               	movf	___lwmod@divisor,w
  5514  1A09  0272               	subwf	___lwmod@dividend,w
  5515  1A0A                     u3465:	
  5516  1A0A  1C03               	skipc
  5517  1A0B  2A12               	goto	l2700
  5518  1A0C  0870               	movf	___lwmod@divisor,w
  5519  1A0D  02F2               	subwf	___lwmod@dividend,f
  5520  1A0E  0871               	movf	___lwmod@divisor+1,w
  5521  1A0F  1C03               	skipc
  5522  1A10  03F3               	decf	___lwmod@dividend+1,f
  5523  1A11  02F3               	subwf	___lwmod@dividend+1,f
  5524  1A12                     l2700:	
  5525  1A12  3001               	movlw	1
  5526  1A13                     u3475:	
  5527  1A13  1003               	clrc
  5528  1A14  0CF1               	rrf	___lwmod@divisor+1,f
  5529  1A15  0CF0               	rrf	___lwmod@divisor,f
  5530  1A16  3EFF               	addlw	-1
  5531  1A17  1D03               	skipz
  5532  1A18  2A13               	goto	u3475
  5533  1A19  3001               	movlw	1
  5534  1A1A  02F5               	subwf	___lwmod@counter,f
  5535  1A1B  1D03               	btfss	3,2
  5536  1A1C  2A04               	goto	l2696
  5537  1A1D                     l2704:	
  5538  1A1D  0873               	movf	___lwmod@dividend+1,w
  5539  1A1E  00F1               	movwf	?___lwmod+1
  5540  1A1F  0872               	movf	___lwmod@dividend,w
  5541  1A20  00F0               	movwf	?___lwmod
  5542  1A21  0008               	return
  5543  1A22                     __end_of___lwmod:	
  5544                           
  5545                           	psect	text9
  5546  1A58                     __ptext9:	
  5547 ;; *************** function ___lwdiv *****************
  5548 ;; Defined at:
  5549 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  divisor         2    6[COMMON] unsigned int 
  5552 ;;  dividend        2    8[COMMON] unsigned int 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  quotient        2   11[COMMON] unsigned int 
  5555 ;;  counter         1   13[COMMON] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  2    6[COMMON] unsigned int 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         4       0       0       0       0
  5566 ;;      Locals:         3       0       0       0       0
  5567 ;;      Temps:          1       0       0       0       0
  5568 ;;      Totals:         8       0       0       0       0
  5569 ;;Total ram usage:        8 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_fround
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function ___lwdiv
  5580  1A58                     ___lwdiv:	
  5581                           
  5582                           ;incstack = 0
  5583                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5584  1A58  01FB               	clrf	___lwdiv@quotient
  5585  1A59  01FC               	clrf	___lwdiv@quotient+1
  5586  1A5A  0876               	movf	___lwdiv@divisor,w
  5587  1A5B  0477               	iorwf	___lwdiv@divisor+1,w
  5588  1A5C  1903               	btfsc	3,2
  5589  1A5D  2A8F               	goto	l2682
  5590  1A5E  01FD               	clrf	___lwdiv@counter
  5591  1A5F  0AFD               	incf	___lwdiv@counter,f
  5592  1A60                     l2670:	
  5593  1A60  1BF7               	btfsc	___lwdiv@divisor+1,7
  5594  1A61  2A6E               	goto	l2672
  5595  1A62  3001               	movlw	1
  5596  1A63                     u3375:	
  5597  1A63  1003               	clrc
  5598  1A64  0DF6               	rlf	___lwdiv@divisor,f
  5599  1A65  0DF7               	rlf	___lwdiv@divisor+1,f
  5600  1A66  3EFF               	addlw	-1
  5601  1A67  1D03               	skipz
  5602  1A68  2A63               	goto	u3375
  5603  1A69  3001               	movlw	1
  5604  1A6A  00FA               	movwf	??___lwdiv
  5605  1A6B  087A               	movf	??___lwdiv,w
  5606  1A6C  07FD               	addwf	___lwdiv@counter,f
  5607  1A6D  2A60               	goto	l2670
  5608  1A6E                     l2672:	
  5609  1A6E  3001               	movlw	1
  5610  1A6F                     u3395:	
  5611  1A6F  1003               	clrc
  5612  1A70  0DFB               	rlf	___lwdiv@quotient,f
  5613  1A71  0DFC               	rlf	___lwdiv@quotient+1,f
  5614  1A72  3EFF               	addlw	-1
  5615  1A73  1D03               	skipz
  5616  1A74  2A6F               	goto	u3395
  5617  1A75  0877               	movf	___lwdiv@divisor+1,w
  5618  1A76  0279               	subwf	___lwdiv@dividend+1,w
  5619  1A77  1D03               	skipz
  5620  1A78  2A7B               	goto	u3405
  5621  1A79  0876               	movf	___lwdiv@divisor,w
  5622  1A7A  0278               	subwf	___lwdiv@dividend,w
  5623  1A7B                     u3405:	
  5624  1A7B  1C03               	skipc
  5625  1A7C  2A84               	goto	l2678
  5626  1A7D  0876               	movf	___lwdiv@divisor,w
  5627  1A7E  02F8               	subwf	___lwdiv@dividend,f
  5628  1A7F  0877               	movf	___lwdiv@divisor+1,w
  5629  1A80  1C03               	skipc
  5630  1A81  03F9               	decf	___lwdiv@dividend+1,f
  5631  1A82  02F9               	subwf	___lwdiv@dividend+1,f
  5632  1A83  147B               	bsf	___lwdiv@quotient,0
  5633  1A84                     l2678:	
  5634  1A84  3001               	movlw	1
  5635  1A85                     u3415:	
  5636  1A85  1003               	clrc
  5637  1A86  0CF7               	rrf	___lwdiv@divisor+1,f
  5638  1A87  0CF6               	rrf	___lwdiv@divisor,f
  5639  1A88  3EFF               	addlw	-1
  5640  1A89  1D03               	skipz
  5641  1A8A  2A85               	goto	u3415
  5642  1A8B  3001               	movlw	1
  5643  1A8C  02FD               	subwf	___lwdiv@counter,f
  5644  1A8D  1D03               	btfss	3,2
  5645  1A8E  2A6E               	goto	l2672
  5646  1A8F                     l2682:	
  5647  1A8F  087C               	movf	___lwdiv@quotient+1,w
  5648  1A90  00F7               	movwf	?___lwdiv+1
  5649  1A91  087B               	movf	___lwdiv@quotient,w
  5650  1A92  00F6               	movwf	?___lwdiv
  5651  1A93  0008               	return
  5652  1A94                     __end_of___lwdiv:	
  5653                           
  5654                           	psect	text10
  5655  09A2                     __ptext10:	
  5656 ;; *************** function ___flmul *****************
  5657 ;; Defined at:
  5658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  b               4    4[BANK0 ] unsigned int 
  5661 ;;  a               4    8[BANK0 ] unsigned int 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  prod            4   24[BANK0 ] struct .
  5664 ;;  grs             4   18[BANK0 ] unsigned long 
  5665 ;;  temp            2   28[BANK0 ] struct .
  5666 ;;  bexp            1   23[BANK0 ] unsigned char 
  5667 ;;  aexp            1   22[BANK0 ] unsigned char 
  5668 ;;  sign            1   17[BANK0 ] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  4    4[BANK0 ] unsigned char 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5678 ;;      Params:         0       8       0       0       0
  5679 ;;      Locals:         0      13       0       0       0
  5680 ;;      Temps:          0       5       0       0       0
  5681 ;;      Totals:         0      26       0       0       0
  5682 ;;Total ram usage:       26 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    1
  5685 ;; This function calls:
  5686 ;;		__Umul8_16
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;;		_fround
  5690 ;;		_scale
  5691 ;;		_sprintf
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           
  5696                           ;psect for function ___flmul
  5697  09A2                     ___flmul:	
  5698                           
  5699                           ;incstack = 0
  5700                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5701  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  5702  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  5703  09A4  0827               	movf	___flmul@b+3,w
  5704  09A5  3980               	andlw	128
  5705  09A6  00AC               	movwf	??___flmul
  5706  09A7  082C               	movf	??___flmul,w
  5707  09A8  00B1               	movwf	___flmul@sign
  5708  09A9  0827               	movf	___flmul@b+3,w
  5709  09AA  00AC               	movwf	??___flmul
  5710  09AB  072C               	addwf	??___flmul,w
  5711  09AC  00AD               	movwf	??___flmul+1
  5712  09AD  082D               	movf	??___flmul+1,w
  5713  09AE  00B7               	movwf	___flmul@bexp
  5714  09AF  1BA6               	btfsc	___flmul@b+2,7
  5715  09B0  1437               	bsf	___flmul@bexp,0
  5716  09B1  0837               	movf	___flmul@bexp,w
  5717  09B2  1903               	btfsc	3,2
  5718  09B3  29C1               	goto	l2918
  5719  09B4  0A37               	incf	___flmul@bexp,w
  5720  09B5  1D03               	btfss	3,2
  5721  09B6  29BF               	goto	l2916
  5722  09B7  3000               	movlw	0
  5723  09B8  00A7               	movwf	___flmul@b+3
  5724  09B9  3000               	movlw	0
  5725  09BA  00A6               	movwf	___flmul@b+2
  5726  09BB  3000               	movlw	0
  5727  09BC  00A5               	movwf	___flmul@b+1
  5728  09BD  3000               	movlw	0
  5729  09BE  00A4               	movwf	___flmul@b
  5730  09BF                     l2916:	
  5731  09BF  17A6               	bsf	___flmul@b+2,7
  5732  09C0  29C9               	goto	l2920
  5733  09C1                     l2918:	
  5734  09C1  3000               	movlw	0
  5735  09C2  00A7               	movwf	___flmul@b+3
  5736  09C3  3000               	movlw	0
  5737  09C4  00A6               	movwf	___flmul@b+2
  5738  09C5  3000               	movlw	0
  5739  09C6  00A5               	movwf	___flmul@b+1
  5740  09C7  3000               	movlw	0
  5741  09C8  00A4               	movwf	___flmul@b
  5742  09C9                     l2920:	
  5743  09C9  082B               	movf	___flmul@a+3,w
  5744  09CA  3980               	andlw	128
  5745  09CB  00AC               	movwf	??___flmul
  5746  09CC  082C               	movf	??___flmul,w
  5747  09CD  06B1               	xorwf	___flmul@sign,f
  5748  09CE  082B               	movf	___flmul@a+3,w
  5749  09CF  00AC               	movwf	??___flmul
  5750  09D0  072C               	addwf	??___flmul,w
  5751  09D1  00AD               	movwf	??___flmul+1
  5752  09D2  082D               	movf	??___flmul+1,w
  5753  09D3  00B6               	movwf	___flmul@aexp
  5754  09D4  1BAA               	btfsc	___flmul@a+2,7
  5755  09D5  1436               	bsf	___flmul@aexp,0
  5756  09D6  0836               	movf	___flmul@aexp,w
  5757  09D7  1903               	btfsc	3,2
  5758  09D8  29E6               	goto	l2936
  5759  09D9  0A36               	incf	___flmul@aexp,w
  5760  09DA  1D03               	btfss	3,2
  5761  09DB  29E4               	goto	l2934
  5762  09DC  3000               	movlw	0
  5763  09DD  00AB               	movwf	___flmul@a+3
  5764  09DE  3000               	movlw	0
  5765  09DF  00AA               	movwf	___flmul@a+2
  5766  09E0  3000               	movlw	0
  5767  09E1  00A9               	movwf	___flmul@a+1
  5768  09E2  3000               	movlw	0
  5769  09E3  00A8               	movwf	___flmul@a
  5770  09E4                     l2934:	
  5771  09E4  17AA               	bsf	___flmul@a+2,7
  5772  09E5  29EE               	goto	l2938
  5773  09E6                     l2936:	
  5774  09E6  3000               	movlw	0
  5775  09E7  00AB               	movwf	___flmul@a+3
  5776  09E8  3000               	movlw	0
  5777  09E9  00AA               	movwf	___flmul@a+2
  5778  09EA  3000               	movlw	0
  5779  09EB  00A9               	movwf	___flmul@a+1
  5780  09EC  3000               	movlw	0
  5781  09ED  00A8               	movwf	___flmul@a
  5782  09EE                     l2938:	
  5783  09EE  0836               	movf	___flmul@aexp,w
  5784  09EF  1D03               	btfss	3,2
  5785  09F0  0837               	movf	___flmul@bexp,w
  5786  09F1  1D03               	btfss	3,2
  5787  09F2  29FC               	goto	l2946
  5788  09F3  3000               	movlw	0
  5789  09F4  00A7               	movwf	?___flmul+3
  5790  09F5  3000               	movlw	0
  5791  09F6  00A6               	movwf	?___flmul+2
  5792  09F7  3000               	movlw	0
  5793  09F8  00A5               	movwf	?___flmul+1
  5794  09F9  3000               	movlw	0
  5795  09FA  00A4               	movwf	?___flmul
  5796  09FB  0008               	return
  5797  09FC                     l2946:	
  5798  09FC  0824               	movf	___flmul@b,w
  5799  09FD  00AC               	movwf	??___flmul
  5800  09FE  082C               	movf	??___flmul,w
  5801  09FF  00F0               	movwf	__Umul8_16@multiplicand
  5802  0A00  082A               	movf	___flmul@a+2,w
  5803  0A01  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  5804  0A06  0871               	movf	?__Umul8_16+1,w
  5805  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0A09  00BD               	movwf	___flmul@temp+1
  5808  0A0A  0870               	movf	?__Umul8_16,w
  5809  0A0B  00BC               	movwf	___flmul@temp
  5810  0A0C  083C               	movf	___flmul@temp,w
  5811  0A0D  00AC               	movwf	??___flmul
  5812  0A0E  01AD               	clrf	??___flmul+1
  5813  0A0F  01AE               	clrf	??___flmul+2
  5814  0A10  01AF               	clrf	??___flmul+3
  5815  0A11  082F               	movf	??___flmul+3,w
  5816  0A12  00B5               	movwf	___flmul@grs+3
  5817  0A13  082E               	movf	??___flmul+2,w
  5818  0A14  00B4               	movwf	___flmul@grs+2
  5819  0A15  082D               	movf	??___flmul+1,w
  5820  0A16  00B3               	movwf	___flmul@grs+1
  5821  0A17  082C               	movf	??___flmul,w
  5822  0A18  00B2               	movwf	___flmul@grs
  5823  0A19  083D               	movf	___flmul@temp+1,w
  5824  0A1A  00AC               	movwf	??___flmul
  5825  0A1B  01AD               	clrf	??___flmul+1
  5826  0A1C  01AE               	clrf	??___flmul+2
  5827  0A1D  01AF               	clrf	??___flmul+3
  5828  0A1E  082F               	movf	??___flmul+3,w
  5829  0A1F  00BB               	movwf	___flmul@prod+3
  5830  0A20  082E               	movf	??___flmul+2,w
  5831  0A21  00BA               	movwf	___flmul@prod+2
  5832  0A22  082D               	movf	??___flmul+1,w
  5833  0A23  00B9               	movwf	___flmul@prod+1
  5834  0A24  082C               	movf	??___flmul,w
  5835  0A25  00B8               	movwf	___flmul@prod
  5836  0A26  0825               	movf	___flmul@b+1,w
  5837  0A27  00AC               	movwf	??___flmul
  5838  0A28  082C               	movf	??___flmul,w
  5839  0A29  00F0               	movwf	__Umul8_16@multiplicand
  5840  0A2A  0829               	movf	___flmul@a+1,w
  5841  0A2B  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  5842  0A30  0871               	movf	?__Umul8_16+1,w
  5843  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  5844  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  5845  0A33  00BD               	movwf	___flmul@temp+1
  5846  0A34  0870               	movf	?__Umul8_16,w
  5847  0A35  00BC               	movwf	___flmul@temp
  5848  0A36  083C               	movf	___flmul@temp,w
  5849  0A37  00AC               	movwf	??___flmul
  5850  0A38  01AD               	clrf	??___flmul+1
  5851  0A39  01AE               	clrf	??___flmul+2
  5852  0A3A  01AF               	clrf	??___flmul+3
  5853  0A3B  082C               	movf	??___flmul,w
  5854  0A3C  07B2               	addwf	___flmul@grs,f
  5855  0A3D  082D               	movf	??___flmul+1,w
  5856  0A3E  1103               	clrz
  5857  0A3F  1803               	skipnc
  5858  0A40  3E01               	addlw	1
  5859  0A41  1D03               	btfss	3,2
  5860  0A42  07B3               	addwf	___flmul@grs+1,f
  5861  0A43  082E               	movf	??___flmul+2,w
  5862  0A44  1103               	clrz
  5863  0A45  1803               	skipnc
  5864  0A46  3E01               	addlw	1
  5865  0A47  1D03               	btfss	3,2
  5866  0A48  07B4               	addwf	___flmul@grs+2,f
  5867  0A49  082F               	movf	??___flmul+3,w
  5868  0A4A  1103               	clrz
  5869  0A4B  1803               	skipnc
  5870  0A4C  3E01               	addlw	1
  5871  0A4D  1D03               	btfss	3,2
  5872  0A4E  07B5               	addwf	___flmul@grs+3,f
  5873  0A4F  083D               	movf	___flmul@temp+1,w
  5874  0A50  00AC               	movwf	??___flmul
  5875  0A51  01AD               	clrf	??___flmul+1
  5876  0A52  01AE               	clrf	??___flmul+2
  5877  0A53  01AF               	clrf	??___flmul+3
  5878  0A54  082C               	movf	??___flmul,w
  5879  0A55  07B8               	addwf	___flmul@prod,f
  5880  0A56  082D               	movf	??___flmul+1,w
  5881  0A57  1103               	clrz
  5882  0A58  1803               	skipnc
  5883  0A59  3E01               	addlw	1
  5884  0A5A  1D03               	btfss	3,2
  5885  0A5B  07B9               	addwf	___flmul@prod+1,f
  5886  0A5C  082E               	movf	??___flmul+2,w
  5887  0A5D  1103               	clrz
  5888  0A5E  1803               	skipnc
  5889  0A5F  3E01               	addlw	1
  5890  0A60  1D03               	btfss	3,2
  5891  0A61  07BA               	addwf	___flmul@prod+2,f
  5892  0A62  082F               	movf	??___flmul+3,w
  5893  0A63  1103               	clrz
  5894  0A64  1803               	skipnc
  5895  0A65  3E01               	addlw	1
  5896  0A66  1D03               	btfss	3,2
  5897  0A67  07BB               	addwf	___flmul@prod+3,f
  5898  0A68  0826               	movf	___flmul@b+2,w
  5899  0A69  00AC               	movwf	??___flmul
  5900  0A6A  082C               	movf	??___flmul,w
  5901  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  5902  0A6C  0828               	movf	___flmul@a,w
  5903  0A6D  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  5904  0A72  0871               	movf	?__Umul8_16+1,w
  5905  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  5906  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  5907  0A75  00BD               	movwf	___flmul@temp+1
  5908  0A76  0870               	movf	?__Umul8_16,w
  5909  0A77  00BC               	movwf	___flmul@temp
  5910  0A78  083C               	movf	___flmul@temp,w
  5911  0A79  00AC               	movwf	??___flmul
  5912  0A7A  01AD               	clrf	??___flmul+1
  5913  0A7B  01AE               	clrf	??___flmul+2
  5914  0A7C  01AF               	clrf	??___flmul+3
  5915  0A7D  082C               	movf	??___flmul,w
  5916  0A7E  07B2               	addwf	___flmul@grs,f
  5917  0A7F  082D               	movf	??___flmul+1,w
  5918  0A80  1103               	clrz
  5919  0A81  1803               	skipnc
  5920  0A82  3E01               	addlw	1
  5921  0A83  1D03               	btfss	3,2
  5922  0A84  07B3               	addwf	___flmul@grs+1,f
  5923  0A85  082E               	movf	??___flmul+2,w
  5924  0A86  1103               	clrz
  5925  0A87  1803               	skipnc
  5926  0A88  3E01               	addlw	1
  5927  0A89  1D03               	btfss	3,2
  5928  0A8A  07B4               	addwf	___flmul@grs+2,f
  5929  0A8B  082F               	movf	??___flmul+3,w
  5930  0A8C  1103               	clrz
  5931  0A8D  1803               	skipnc
  5932  0A8E  3E01               	addlw	1
  5933  0A8F  1D03               	btfss	3,2
  5934  0A90  07B5               	addwf	___flmul@grs+3,f
  5935  0A91  083D               	movf	___flmul@temp+1,w
  5936  0A92  00AC               	movwf	??___flmul
  5937  0A93  01AD               	clrf	??___flmul+1
  5938  0A94  01AE               	clrf	??___flmul+2
  5939  0A95  01AF               	clrf	??___flmul+3
  5940  0A96  082C               	movf	??___flmul,w
  5941  0A97  07B8               	addwf	___flmul@prod,f
  5942  0A98  082D               	movf	??___flmul+1,w
  5943  0A99  1103               	clrz
  5944  0A9A  1803               	skipnc
  5945  0A9B  3E01               	addlw	1
  5946  0A9C  1D03               	btfss	3,2
  5947  0A9D  07B9               	addwf	___flmul@prod+1,f
  5948  0A9E  082E               	movf	??___flmul+2,w
  5949  0A9F  1103               	clrz
  5950  0AA0  1803               	skipnc
  5951  0AA1  3E01               	addlw	1
  5952  0AA2  1D03               	btfss	3,2
  5953  0AA3  07BA               	addwf	___flmul@prod+2,f
  5954  0AA4  082F               	movf	??___flmul+3,w
  5955  0AA5  1103               	clrz
  5956  0AA6  1803               	skipnc
  5957  0AA7  3E01               	addlw	1
  5958  0AA8  1D03               	btfss	3,2
  5959  0AA9  07BB               	addwf	___flmul@prod+3,f
  5960  0AAA  3008               	movlw	8
  5961  0AAB  00AC               	movwf	??___flmul
  5962  0AAC                     u4075:	
  5963  0AAC  1003               	clrc
  5964  0AAD  0DB2               	rlf	___flmul@grs,f
  5965  0AAE  0DB3               	rlf	___flmul@grs+1,f
  5966  0AAF  0DB4               	rlf	___flmul@grs+2,f
  5967  0AB0  0DB5               	rlf	___flmul@grs+3,f
  5968  0AB1  0BAC               	decfsz	??___flmul,f
  5969  0AB2  2AAC               	goto	u4075
  5970  0AB3  0825               	movf	___flmul@b+1,w
  5971  0AB4  00AC               	movwf	??___flmul
  5972  0AB5  082C               	movf	??___flmul,w
  5973  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  5974  0AB7  0828               	movf	___flmul@a,w
  5975  0AB8  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  5976  0ABD  0871               	movf	?__Umul8_16+1,w
  5977  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5978  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5979  0AC0  00BD               	movwf	___flmul@temp+1
  5980  0AC1  0870               	movf	?__Umul8_16,w
  5981  0AC2  00BC               	movwf	___flmul@temp
  5982  0AC3  083C               	movf	___flmul@temp,w
  5983  0AC4  00AC               	movwf	??___flmul
  5984  0AC5  083D               	movf	___flmul@temp+1,w
  5985  0AC6  00AD               	movwf	??___flmul+1
  5986  0AC7  01AE               	clrf	??___flmul+2
  5987  0AC8  01AF               	clrf	??___flmul+3
  5988  0AC9  082C               	movf	??___flmul,w
  5989  0ACA  07B2               	addwf	___flmul@grs,f
  5990  0ACB  082D               	movf	??___flmul+1,w
  5991  0ACC  1103               	clrz
  5992  0ACD  1803               	skipnc
  5993  0ACE  3E01               	addlw	1
  5994  0ACF  1D03               	btfss	3,2
  5995  0AD0  07B3               	addwf	___flmul@grs+1,f
  5996  0AD1  082E               	movf	??___flmul+2,w
  5997  0AD2  1103               	clrz
  5998  0AD3  1803               	skipnc
  5999  0AD4  3E01               	addlw	1
  6000  0AD5  1D03               	btfss	3,2
  6001  0AD6  07B4               	addwf	___flmul@grs+2,f
  6002  0AD7  082F               	movf	??___flmul+3,w
  6003  0AD8  1103               	clrz
  6004  0AD9  1803               	skipnc
  6005  0ADA  3E01               	addlw	1
  6006  0ADB  1D03               	btfss	3,2
  6007  0ADC  07B5               	addwf	___flmul@grs+3,f
  6008  0ADD  0824               	movf	___flmul@b,w
  6009  0ADE  00AC               	movwf	??___flmul
  6010  0ADF  082C               	movf	??___flmul,w
  6011  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  6012  0AE1  0829               	movf	___flmul@a+1,w
  6013  0AE2  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  6014  0AE7  0871               	movf	?__Umul8_16+1,w
  6015  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6016  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6017  0AEA  00BD               	movwf	___flmul@temp+1
  6018  0AEB  0870               	movf	?__Umul8_16,w
  6019  0AEC  00BC               	movwf	___flmul@temp
  6020  0AED  083C               	movf	___flmul@temp,w
  6021  0AEE  00AC               	movwf	??___flmul
  6022  0AEF  083D               	movf	___flmul@temp+1,w
  6023  0AF0  00AD               	movwf	??___flmul+1
  6024  0AF1  01AE               	clrf	??___flmul+2
  6025  0AF2  01AF               	clrf	??___flmul+3
  6026  0AF3  082C               	movf	??___flmul,w
  6027  0AF4  07B2               	addwf	___flmul@grs,f
  6028  0AF5  082D               	movf	??___flmul+1,w
  6029  0AF6  1103               	clrz
  6030  0AF7  1803               	skipnc
  6031  0AF8  3E01               	addlw	1
  6032  0AF9  1D03               	btfss	3,2
  6033  0AFA  07B3               	addwf	___flmul@grs+1,f
  6034  0AFB  082E               	movf	??___flmul+2,w
  6035  0AFC  1103               	clrz
  6036  0AFD  1803               	skipnc
  6037  0AFE  3E01               	addlw	1
  6038  0AFF  1D03               	btfss	3,2
  6039  0B00  07B4               	addwf	___flmul@grs+2,f
  6040  0B01  082F               	movf	??___flmul+3,w
  6041  0B02  1103               	clrz
  6042  0B03  1803               	skipnc
  6043  0B04  3E01               	addlw	1
  6044  0B05  1D03               	btfss	3,2
  6045  0B06  07B5               	addwf	___flmul@grs+3,f
  6046  0B07  3008               	movlw	8
  6047  0B08  00AC               	movwf	??___flmul
  6048  0B09                     u4105:	
  6049  0B09  1003               	clrc
  6050  0B0A  0DB2               	rlf	___flmul@grs,f
  6051  0B0B  0DB3               	rlf	___flmul@grs+1,f
  6052  0B0C  0DB4               	rlf	___flmul@grs+2,f
  6053  0B0D  0DB5               	rlf	___flmul@grs+3,f
  6054  0B0E  0BAC               	decfsz	??___flmul,f
  6055  0B0F  2B09               	goto	u4105
  6056  0B10  0824               	movf	___flmul@b,w
  6057  0B11  00AC               	movwf	??___flmul
  6058  0B12  082C               	movf	??___flmul,w
  6059  0B13  00F0               	movwf	__Umul8_16@multiplicand
  6060  0B14  0828               	movf	___flmul@a,w
  6061  0B15  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  6062  0B1A  0871               	movf	?__Umul8_16+1,w
  6063  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  6065  0B1D  00BD               	movwf	___flmul@temp+1
  6066  0B1E  0870               	movf	?__Umul8_16,w
  6067  0B1F  00BC               	movwf	___flmul@temp
  6068  0B20  083C               	movf	___flmul@temp,w
  6069  0B21  00AC               	movwf	??___flmul
  6070  0B22  083D               	movf	___flmul@temp+1,w
  6071  0B23  00AD               	movwf	??___flmul+1
  6072  0B24  01AE               	clrf	??___flmul+2
  6073  0B25  01AF               	clrf	??___flmul+3
  6074  0B26  082C               	movf	??___flmul,w
  6075  0B27  07B2               	addwf	___flmul@grs,f
  6076  0B28  082D               	movf	??___flmul+1,w
  6077  0B29  1103               	clrz
  6078  0B2A  1803               	skipnc
  6079  0B2B  3E01               	addlw	1
  6080  0B2C  1D03               	btfss	3,2
  6081  0B2D  07B3               	addwf	___flmul@grs+1,f
  6082  0B2E  082E               	movf	??___flmul+2,w
  6083  0B2F  1103               	clrz
  6084  0B30  1803               	skipnc
  6085  0B31  3E01               	addlw	1
  6086  0B32  1D03               	btfss	3,2
  6087  0B33  07B4               	addwf	___flmul@grs+2,f
  6088  0B34  082F               	movf	??___flmul+3,w
  6089  0B35  1103               	clrz
  6090  0B36  1803               	skipnc
  6091  0B37  3E01               	addlw	1
  6092  0B38  1D03               	btfss	3,2
  6093  0B39  07B5               	addwf	___flmul@grs+3,f
  6094  0B3A  0825               	movf	___flmul@b+1,w
  6095  0B3B  00AC               	movwf	??___flmul
  6096  0B3C  082C               	movf	??___flmul,w
  6097  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  6098  0B3E  082A               	movf	___flmul@a+2,w
  6099  0B3F  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  6100  0B44  0871               	movf	?__Umul8_16+1,w
  6101  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  6103  0B47  00BD               	movwf	___flmul@temp+1
  6104  0B48  0870               	movf	?__Umul8_16,w
  6105  0B49  00BC               	movwf	___flmul@temp
  6106  0B4A  083C               	movf	___flmul@temp,w
  6107  0B4B  00AC               	movwf	??___flmul
  6108  0B4C  083D               	movf	___flmul@temp+1,w
  6109  0B4D  00AD               	movwf	??___flmul+1
  6110  0B4E  01AE               	clrf	??___flmul+2
  6111  0B4F  01AF               	clrf	??___flmul+3
  6112  0B50  082C               	movf	??___flmul,w
  6113  0B51  07B8               	addwf	___flmul@prod,f
  6114  0B52  082D               	movf	??___flmul+1,w
  6115  0B53  1103               	clrz
  6116  0B54  1803               	skipnc
  6117  0B55  3E01               	addlw	1
  6118  0B56  1D03               	btfss	3,2
  6119  0B57  07B9               	addwf	___flmul@prod+1,f
  6120  0B58  082E               	movf	??___flmul+2,w
  6121  0B59  1103               	clrz
  6122  0B5A  1803               	skipnc
  6123  0B5B  3E01               	addlw	1
  6124  0B5C  1D03               	btfss	3,2
  6125  0B5D  07BA               	addwf	___flmul@prod+2,f
  6126  0B5E  082F               	movf	??___flmul+3,w
  6127  0B5F  1103               	clrz
  6128  0B60  1803               	skipnc
  6129  0B61  3E01               	addlw	1
  6130  0B62  1D03               	btfss	3,2
  6131  0B63  07BB               	addwf	___flmul@prod+3,f
  6132  0B64  0826               	movf	___flmul@b+2,w
  6133  0B65  00AC               	movwf	??___flmul
  6134  0B66  082C               	movf	??___flmul,w
  6135  0B67  00F0               	movwf	__Umul8_16@multiplicand
  6136  0B68  0829               	movf	___flmul@a+1,w
  6137  0B69  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  6138  0B6E  0871               	movf	?__Umul8_16+1,w
  6139  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0B71  00BD               	movwf	___flmul@temp+1
  6142  0B72  0870               	movf	?__Umul8_16,w
  6143  0B73  00BC               	movwf	___flmul@temp
  6144  0B74  083C               	movf	___flmul@temp,w
  6145  0B75  00AC               	movwf	??___flmul
  6146  0B76  083D               	movf	___flmul@temp+1,w
  6147  0B77  00AD               	movwf	??___flmul+1
  6148  0B78  01AE               	clrf	??___flmul+2
  6149  0B79  01AF               	clrf	??___flmul+3
  6150  0B7A  082C               	movf	??___flmul,w
  6151  0B7B  07B8               	addwf	___flmul@prod,f
  6152  0B7C  082D               	movf	??___flmul+1,w
  6153  0B7D  1103               	clrz
  6154  0B7E  1803               	skipnc
  6155  0B7F  3E01               	addlw	1
  6156  0B80  1D03               	btfss	3,2
  6157  0B81  07B9               	addwf	___flmul@prod+1,f
  6158  0B82  082E               	movf	??___flmul+2,w
  6159  0B83  1103               	clrz
  6160  0B84  1803               	skipnc
  6161  0B85  3E01               	addlw	1
  6162  0B86  1D03               	btfss	3,2
  6163  0B87  07BA               	addwf	___flmul@prod+2,f
  6164  0B88  082F               	movf	??___flmul+3,w
  6165  0B89  1103               	clrz
  6166  0B8A  1803               	skipnc
  6167  0B8B  3E01               	addlw	1
  6168  0B8C  1D03               	btfss	3,2
  6169  0B8D  07BB               	addwf	___flmul@prod+3,f
  6170  0B8E  0826               	movf	___flmul@b+2,w
  6171  0B8F  00AC               	movwf	??___flmul
  6172  0B90  082C               	movf	??___flmul,w
  6173  0B91  00F0               	movwf	__Umul8_16@multiplicand
  6174  0B92  082A               	movf	___flmul@a+2,w
  6175  0B93  160A  158A  21A1  120A  158A  	fcall	__Umul8_16
  6176  0B98  0871               	movf	?__Umul8_16+1,w
  6177  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  6178  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  6179  0B9B  00BD               	movwf	___flmul@temp+1
  6180  0B9C  0870               	movf	?__Umul8_16,w
  6181  0B9D  00BC               	movwf	___flmul@temp
  6182  0B9E  083C               	movf	___flmul@temp,w
  6183  0B9F  00AC               	movwf	??___flmul
  6184  0BA0  083D               	movf	___flmul@temp+1,w
  6185  0BA1  00AD               	movwf	??___flmul+1
  6186  0BA2  01AE               	clrf	??___flmul+2
  6187  0BA3  01AF               	clrf	??___flmul+3
  6188  0BA4  3008               	movlw	8
  6189  0BA5                     u4145:	
  6190  0BA5  1003               	clrc
  6191  0BA6  0DAC               	rlf	??___flmul,f
  6192  0BA7  0DAD               	rlf	??___flmul+1,f
  6193  0BA8  0DAE               	rlf	??___flmul+2,f
  6194  0BA9  0DAF               	rlf	??___flmul+3,f
  6195  0BAA  3EFF               	addlw	-1
  6196  0BAB  1D03               	skipz
  6197  0BAC  2BA5               	goto	u4145
  6198  0BAD  082C               	movf	??___flmul,w
  6199  0BAE  07B8               	addwf	___flmul@prod,f
  6200  0BAF  082D               	movf	??___flmul+1,w
  6201  0BB0  1103               	clrz
  6202  0BB1  1803               	skipnc
  6203  0BB2  3E01               	addlw	1
  6204  0BB3  1D03               	btfss	3,2
  6205  0BB4  07B9               	addwf	___flmul@prod+1,f
  6206  0BB5  082E               	movf	??___flmul+2,w
  6207  0BB6  1103               	clrz
  6208  0BB7  1803               	skipnc
  6209  0BB8  3E01               	addlw	1
  6210  0BB9  1D03               	btfss	3,2
  6211  0BBA  07BA               	addwf	___flmul@prod+2,f
  6212  0BBB  082F               	movf	??___flmul+3,w
  6213  0BBC  1103               	clrz
  6214  0BBD  1803               	skipnc
  6215  0BBE  3E01               	addlw	1
  6216  0BBF  1D03               	btfss	3,2
  6217  0BC0  07BB               	addwf	___flmul@prod+3,f
  6218  0BC1  0832               	movf	___flmul@grs,w
  6219  0BC2  00AC               	movwf	??___flmul
  6220  0BC3  0833               	movf	___flmul@grs+1,w
  6221  0BC4  00AD               	movwf	??___flmul+1
  6222  0BC5  0834               	movf	___flmul@grs+2,w
  6223  0BC6  00AE               	movwf	??___flmul+2
  6224  0BC7  0835               	movf	___flmul@grs+3,w
  6225  0BC8  00AF               	movwf	??___flmul+3
  6226  0BC9  3018               	movlw	24
  6227  0BCA                     u4165:	
  6228  0BCA  1003               	clrc
  6229  0BCB  0CAF               	rrf	??___flmul+3,f
  6230  0BCC  0CAE               	rrf	??___flmul+2,f
  6231  0BCD  0CAD               	rrf	??___flmul+1,f
  6232  0BCE  0CAC               	rrf	??___flmul,f
  6233  0BCF  3EFF               	addlw	-1
  6234  0BD0  1D03               	skipz
  6235  0BD1  2BCA               	goto	u4165
  6236  0BD2  082C               	movf	??___flmul,w
  6237  0BD3  07B8               	addwf	___flmul@prod,f
  6238  0BD4  082D               	movf	??___flmul+1,w
  6239  0BD5  1103               	clrz
  6240  0BD6  1803               	skipnc
  6241  0BD7  3E01               	addlw	1
  6242  0BD8  1D03               	btfss	3,2
  6243  0BD9  07B9               	addwf	___flmul@prod+1,f
  6244  0BDA  082E               	movf	??___flmul+2,w
  6245  0BDB  1103               	clrz
  6246  0BDC  1803               	skipnc
  6247  0BDD  3E01               	addlw	1
  6248  0BDE  1D03               	btfss	3,2
  6249  0BDF  07BA               	addwf	___flmul@prod+2,f
  6250  0BE0  082F               	movf	??___flmul+3,w
  6251  0BE1  1103               	clrz
  6252  0BE2  1803               	skipnc
  6253  0BE3  3E01               	addlw	1
  6254  0BE4  1D03               	btfss	3,2
  6255  0BE5  07BB               	addwf	___flmul@prod+3,f
  6256  0BE6  3008               	movlw	8
  6257  0BE7  00AC               	movwf	??___flmul
  6258  0BE8                     u4185:	
  6259  0BE8  1003               	clrc
  6260  0BE9  0DB2               	rlf	___flmul@grs,f
  6261  0BEA  0DB3               	rlf	___flmul@grs+1,f
  6262  0BEB  0DB4               	rlf	___flmul@grs+2,f
  6263  0BEC  0DB5               	rlf	___flmul@grs+3,f
  6264  0BED  0BAC               	decfsz	??___flmul,f
  6265  0BEE  2BE8               	goto	u4185
  6266  0BEF  0837               	movf	___flmul@bexp,w
  6267  0BF0  0736               	addwf	___flmul@aexp,w
  6268  0BF1  00AC               	movwf	??___flmul
  6269  0BF2  01AD               	clrf	??___flmul+1
  6270  0BF3  0DAD               	rlf	??___flmul+1,f
  6271  0BF4  082C               	movf	??___flmul,w
  6272  0BF5  3E82               	addlw	130
  6273  0BF6  00BC               	movwf	___flmul@temp
  6274  0BF7  082D               	movf	??___flmul+1,w
  6275  0BF8  1803               	skipnc
  6276  0BF9  3E01               	addlw	1
  6277  0BFA  3EFF               	addlw	255
  6278  0BFB  00BD               	movwf	___flmul@temp+1
  6279  0BFC                     l2998:	
  6280  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  6281  0BFD  2C19               	goto	l3000
  6282  0BFE  3001               	movlw	1
  6283  0BFF  00AC               	movwf	??___flmul
  6284  0C00                     u4195:	
  6285  0C00  1003               	clrc
  6286  0C01  0DB8               	rlf	___flmul@prod,f
  6287  0C02  0DB9               	rlf	___flmul@prod+1,f
  6288  0C03  0DBA               	rlf	___flmul@prod+2,f
  6289  0C04  0DBB               	rlf	___flmul@prod+3,f
  6290  0C05  0BAC               	decfsz	??___flmul,f
  6291  0C06  2C00               	goto	u4195
  6292  0C07  1BB5               	btfsc	___flmul@grs+3,7
  6293  0C08  1438               	bsf	___flmul@prod,0
  6294  0C09  3001               	movlw	1
  6295  0C0A  00AC               	movwf	??___flmul
  6296  0C0B                     u4215:	
  6297  0C0B  1003               	clrc
  6298  0C0C  0DB2               	rlf	___flmul@grs,f
  6299  0C0D  0DB3               	rlf	___flmul@grs+1,f
  6300  0C0E  0DB4               	rlf	___flmul@grs+2,f
  6301  0C0F  0DB5               	rlf	___flmul@grs+3,f
  6302  0C10  0BAC               	decfsz	??___flmul,f
  6303  0C11  2C0B               	goto	u4215
  6304  0C12  30FF               	movlw	255
  6305  0C13  07BC               	addwf	___flmul@temp,f
  6306  0C14  1803               	skipnc
  6307  0C15  0ABD               	incf	___flmul@temp+1,f
  6308  0C16  30FF               	movlw	255
  6309  0C17  07BD               	addwf	___flmul@temp+1,f
  6310  0C18  2BFC               	goto	l2998
  6311  0C19                     l3000:	
  6312  0C19  01B6               	clrf	___flmul@aexp
  6313  0C1A  1FB5               	btfss	___flmul@grs+3,7
  6314  0C1B  2C32               	goto	l3010
  6315  0C1C  30FF               	movlw	255
  6316  0C1D  0532               	andwf	___flmul@grs,w
  6317  0C1E  00AC               	movwf	??___flmul
  6318  0C1F  30FF               	movlw	255
  6319  0C20  0533               	andwf	___flmul@grs+1,w
  6320  0C21  00AD               	movwf	??___flmul+1
  6321  0C22  30FF               	movlw	255
  6322  0C23  0534               	andwf	___flmul@grs+2,w
  6323  0C24  00AE               	movwf	??___flmul+2
  6324  0C25  307F               	movlw	127
  6325  0C26  0535               	andwf	___flmul@grs+3,w
  6326  0C27  00AF               	movwf	??___flmul+3
  6327  0C28  082F               	movf	??___flmul+3,w
  6328  0C29  042E               	iorwf	??___flmul+2,w
  6329  0C2A  042D               	iorwf	??___flmul+1,w
  6330  0C2B  042C               	iorwf	??___flmul,w
  6331  0C2C  1903               	skipnz
  6332  0C2D  1838               	btfsc	___flmul@prod,0
  6333  0C2E  2C30               	goto	l3006
  6334  0C2F  2C32               	goto	l3010
  6335  0C30                     l3006:	
  6336  0C30  01B6               	clrf	___flmul@aexp
  6337  0C31  0AB6               	incf	___flmul@aexp,f
  6338  0C32                     l3010:	
  6339  0C32  0836               	movf	___flmul@aexp,w
  6340  0C33  1903               	btfsc	3,2
  6341  0C34  2C64               	goto	l3020
  6342  0C35  3001               	movlw	1
  6343  0C36  07B8               	addwf	___flmul@prod,f
  6344  0C37  3000               	movlw	0
  6345  0C38  1803               	skipnc
  6346  0C39  3001               	movlw	1
  6347  0C3A  07B9               	addwf	___flmul@prod+1,f
  6348  0C3B  3000               	movlw	0
  6349  0C3C  1803               	skipnc
  6350  0C3D  3001               	movlw	1
  6351  0C3E  07BA               	addwf	___flmul@prod+2,f
  6352  0C3F  3000               	movlw	0
  6353  0C40  1803               	skipnc
  6354  0C41  3001               	movlw	1
  6355  0C42  07BB               	addwf	___flmul@prod+3,f
  6356  0C43  1C3B               	btfss	___flmul@prod+3,0
  6357  0C44  2C64               	goto	l3020
  6358  0C45  0838               	movf	___flmul@prod,w
  6359  0C46  00AC               	movwf	??___flmul
  6360  0C47  0839               	movf	___flmul@prod+1,w
  6361  0C48  00AD               	movwf	??___flmul+1
  6362  0C49  083A               	movf	___flmul@prod+2,w
  6363  0C4A  00AE               	movwf	??___flmul+2
  6364  0C4B  083B               	movf	___flmul@prod+3,w
  6365  0C4C  00AF               	movwf	??___flmul+3
  6366  0C4D  3001               	movlw	1
  6367  0C4E  00B0               	movwf	??___flmul+4
  6368  0C4F                     u4285:	
  6369  0C4F  0D2F               	rlf	??___flmul+3,w
  6370  0C50  0CAF               	rrf	??___flmul+3,f
  6371  0C51  0CAE               	rrf	??___flmul+2,f
  6372  0C52  0CAD               	rrf	??___flmul+1,f
  6373  0C53  0CAC               	rrf	??___flmul,f
  6374  0C54  0BB0               	decfsz	??___flmul+4,f
  6375  0C55  2C4F               	goto	u4285
  6376  0C56  082F               	movf	??___flmul+3,w
  6377  0C57  00BB               	movwf	___flmul@prod+3
  6378  0C58  082E               	movf	??___flmul+2,w
  6379  0C59  00BA               	movwf	___flmul@prod+2
  6380  0C5A  082D               	movf	??___flmul+1,w
  6381  0C5B  00B9               	movwf	___flmul@prod+1
  6382  0C5C  082C               	movf	??___flmul,w
  6383  0C5D  00B8               	movwf	___flmul@prod
  6384  0C5E  3001               	movlw	1
  6385  0C5F  07BC               	addwf	___flmul@temp,f
  6386  0C60  1803               	skipnc
  6387  0C61  0ABD               	incf	___flmul@temp+1,f
  6388  0C62  3000               	movlw	0
  6389  0C63  07BD               	addwf	___flmul@temp+1,f
  6390  0C64                     l3020:	
  6391  0C64  083D               	movf	___flmul@temp+1,w
  6392  0C65  3A80               	xorlw	128
  6393  0C66  00FF               	movwf	127
  6394  0C67  3080               	movlw	128
  6395  0C68  027F               	subwf	127,w
  6396  0C69  1D03               	skipz
  6397  0C6A  2C6D               	goto	u4295
  6398  0C6B  30FF               	movlw	255
  6399  0C6C  023C               	subwf	___flmul@temp,w
  6400  0C6D                     u4295:	
  6401  0C6D  1C03               	skipc
  6402  0C6E  2C7A               	goto	l3024
  6403  0C6F  307F               	movlw	127
  6404  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0C72  00BB               	movwf	___flmul@prod+3
  6407  0C73  3080               	movlw	128
  6408  0C74  00BA               	movwf	___flmul@prod+2
  6409  0C75  3000               	movlw	0
  6410  0C76  00B9               	movwf	___flmul@prod+1
  6411  0C77  3000               	movlw	0
  6412  0C78  00B8               	movwf	___flmul@prod
  6413  0C79  2CAA               	goto	l836
  6414  0C7A                     l3024:	
  6415  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6416  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6417  0C7C  083D               	movf	___flmul@temp+1,w
  6418  0C7D  3A80               	xorlw	128
  6419  0C7E  00FF               	movwf	127
  6420  0C7F  3080               	movlw	128
  6421  0C80  027F               	subwf	127,w
  6422  0C81  1D03               	skipz
  6423  0C82  2C85               	goto	u4305
  6424  0C83  3001               	movlw	1
  6425  0C84  023C               	subwf	___flmul@temp,w
  6426  0C85                     u4305:	
  6427  0C85  1803               	skipnc
  6428  0C86  2C93               	goto	l3030
  6429  0C87  3000               	movlw	0
  6430  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0C8A  00BB               	movwf	___flmul@prod+3
  6433  0C8B  3000               	movlw	0
  6434  0C8C  00BA               	movwf	___flmul@prod+2
  6435  0C8D  3000               	movlw	0
  6436  0C8E  00B9               	movwf	___flmul@prod+1
  6437  0C8F  3000               	movlw	0
  6438  0C90  00B8               	movwf	___flmul@prod
  6439  0C91  01B1               	clrf	___flmul@sign
  6440  0C92  2CAA               	goto	l836
  6441  0C93                     l3030:	
  6442  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  6443  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  6444  0C95  083C               	movf	___flmul@temp,w
  6445  0C96  00AC               	movwf	??___flmul
  6446  0C97  082C               	movf	??___flmul,w
  6447  0C98  00B7               	movwf	___flmul@bexp
  6448  0C99  30FF               	movlw	255
  6449  0C9A  05B8               	andwf	___flmul@prod,f
  6450  0C9B  30FF               	movlw	255
  6451  0C9C  05B9               	andwf	___flmul@prod+1,f
  6452  0C9D  307F               	movlw	127
  6453  0C9E  05BA               	andwf	___flmul@prod+2,f
  6454  0C9F  3000               	movlw	0
  6455  0CA0  05BB               	andwf	___flmul@prod+3,f
  6456  0CA1  1837               	btfsc	___flmul@bexp,0
  6457  0CA2  17BA               	bsf	___flmul@prod+2,7
  6458  0CA3  0837               	movf	___flmul@bexp,w
  6459  0CA4  00AC               	movwf	??___flmul
  6460  0CA5  1003               	clrc
  6461  0CA6  0C2C               	rrf	??___flmul,w
  6462  0CA7  00AD               	movwf	??___flmul+1
  6463  0CA8  082D               	movf	??___flmul+1,w
  6464  0CA9  00BB               	movwf	___flmul@prod+3
  6465  0CAA                     l836:	
  6466  0CAA  0831               	movf	___flmul@sign,w
  6467  0CAB  00AC               	movwf	??___flmul
  6468  0CAC  082C               	movf	??___flmul,w
  6469  0CAD  04BB               	iorwf	___flmul@prod+3,f
  6470  0CAE  083B               	movf	___flmul@prod+3,w
  6471  0CAF  00A7               	movwf	?___flmul+3
  6472  0CB0  083A               	movf	___flmul@prod+2,w
  6473  0CB1  00A6               	movwf	?___flmul+2
  6474  0CB2  0839               	movf	___flmul@prod+1,w
  6475  0CB3  00A5               	movwf	?___flmul+1
  6476  0CB4  0838               	movf	___flmul@prod,w
  6477  0CB5  00A4               	movwf	?___flmul
  6478  0CB6  0008               	return
  6479  0CB7                     __end_of___flmul:	
  6480                           
  6481                           	psect	text11
  6482  19A1                     __ptext11:	
  6483 ;; *************** function __Umul8_16 *****************
  6484 ;; Defined at:
  6485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  multiplier      1    wreg     unsigned char 
  6488 ;;  multiplicand    1    0[COMMON] unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  multiplier      1    8[COMMON] unsigned char 
  6491 ;;  word_mpld       2    6[COMMON] unsigned int 
  6492 ;;  product         2    4[COMMON] unsigned int 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2    0[COMMON] unsigned int 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         2       0       0       0       0
  6503 ;;      Locals:         5       0       0       0       0
  6504 ;;      Temps:          2       0       0       0       0
  6505 ;;      Totals:         9       0       0       0       0
  6506 ;;Total ram usage:        9 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		___flmul
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function __Umul8_16
  6517  19A1                     __Umul8_16:	
  6518                           
  6519                           ;incstack = 0
  6520                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6521                           ;__Umul8_16@multiplier stored from wreg
  6522  19A1  00F8               	movwf	__Umul8_16@multiplier
  6523  19A2  01F4               	clrf	__Umul8_16@product
  6524  19A3  01F5               	clrf	__Umul8_16@product+1
  6525  19A4  0870               	movf	__Umul8_16@multiplicand,w
  6526  19A5  00F2               	movwf	??__Umul8_16
  6527  19A6  01F3               	clrf	??__Umul8_16+1
  6528  19A7  0872               	movf	??__Umul8_16,w
  6529  19A8  00F6               	movwf	__Umul8_16@word_mpld
  6530  19A9  0873               	movf	??__Umul8_16+1,w
  6531  19AA  00F7               	movwf	__Umul8_16@word_mpld+1
  6532  19AB                     l2568:	
  6533  19AB  1C78               	btfss	__Umul8_16@multiplier,0
  6534  19AC  29B3               	goto	l890
  6535  19AD  0876               	movf	__Umul8_16@word_mpld,w
  6536  19AE  07F4               	addwf	__Umul8_16@product,f
  6537  19AF  1803               	skipnc
  6538  19B0  0AF5               	incf	__Umul8_16@product+1,f
  6539  19B1  0877               	movf	__Umul8_16@word_mpld+1,w
  6540  19B2  07F5               	addwf	__Umul8_16@product+1,f
  6541  19B3                     l890:	
  6542  19B3  3001               	movlw	1
  6543  19B4                     u3155:	
  6544  19B4  1003               	clrc
  6545  19B5  0DF6               	rlf	__Umul8_16@word_mpld,f
  6546  19B6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6547  19B7  3EFF               	addlw	-1
  6548  19B8  1D03               	skipz
  6549  19B9  29B4               	goto	u3155
  6550  19BA  1003               	clrc
  6551  19BB  0CF8               	rrf	__Umul8_16@multiplier,f
  6552  19BC  0878               	movf	__Umul8_16@multiplier,w
  6553  19BD  1D03               	btfss	3,2
  6554  19BE  29AB               	goto	l2568
  6555  19BF  0875               	movf	__Umul8_16@product+1,w
  6556  19C0  00F1               	movwf	?__Umul8_16+1
  6557  19C1  0874               	movf	__Umul8_16@product,w
  6558  19C2  00F0               	movwf	?__Umul8_16
  6559  19C3  0008               	return
  6560  19C4                     __end_of__Umul8_16:	
  6561                           
  6562                           	psect	text12
  6563  084F                     __ptext12:	
  6564 ;; *************** function __tdiv_to_l_ *****************
  6565 ;; Defined at:
  6566 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  f1              4    0[COMMON] float 
  6569 ;;  f2              4    4[COMMON] float 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  quot            4    0[BANK0 ] unsigned long 
  6572 ;;  exp1            1    5[BANK0 ] unsigned char 
  6573 ;;  cntr            1    4[BANK0 ] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  4    0[COMMON] unsigned long 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, status,0
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6583 ;;      Params:         8       0       0       0       0
  6584 ;;      Locals:         0       6       0       0       0
  6585 ;;      Temps:          4       0       0       0       0
  6586 ;;      Totals:        12       6       0       0       0
  6587 ;;Total ram usage:       18 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_sprintf
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function __tdiv_to_l_
  6598  084F                     __tdiv_to_l_:	
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6602  084F  0870               	movf	__tdiv_to_l_@f1,w
  6603  0850  00F8               	movwf	??__tdiv_to_l_
  6604  0851  0871               	movf	__tdiv_to_l_@f1+1,w
  6605  0852  00F9               	movwf	??__tdiv_to_l_+1
  6606  0853  0872               	movf	__tdiv_to_l_@f1+2,w
  6607  0854  00FA               	movwf	??__tdiv_to_l_+2
  6608  0855  1003               	clrc
  6609  0856  0D79               	rlf	??__tdiv_to_l_+1,w
  6610  0857  0D7A               	rlf	??__tdiv_to_l_+2,w
  6611  0858  00FB               	movwf	??__tdiv_to_l_+3
  6612  0859  087B               	movf	??__tdiv_to_l_+3,w
  6613  085A  1283               	bcf	3,5	;RP0=0, select bank0
  6614  085B  1303               	bcf	3,6	;RP1=0, select bank0
  6615  085C  00A5               	movwf	__tdiv_to_l_@exp1
  6616  085D  0825               	movf	__tdiv_to_l_@exp1,w
  6617  085E  1D03               	btfss	3,2
  6618  085F  2869               	goto	l3138
  6619  0860                     l3134:	
  6620  0860  3000               	movlw	0
  6621  0861  00F3               	movwf	?__tdiv_to_l_+3
  6622  0862  3000               	movlw	0
  6623  0863  00F2               	movwf	?__tdiv_to_l_+2
  6624  0864  3000               	movlw	0
  6625  0865  00F1               	movwf	?__tdiv_to_l_+1
  6626  0866  3000               	movlw	0
  6627  0867  00F0               	movwf	?__tdiv_to_l_
  6628  0868  0008               	return
  6629  0869                     l3138:	
  6630  0869  0874               	movf	__tdiv_to_l_@f2,w
  6631  086A  00F8               	movwf	??__tdiv_to_l_
  6632  086B  0875               	movf	__tdiv_to_l_@f2+1,w
  6633  086C  00F9               	movwf	??__tdiv_to_l_+1
  6634  086D  0876               	movf	__tdiv_to_l_@f2+2,w
  6635  086E  00FA               	movwf	??__tdiv_to_l_+2
  6636  086F  1003               	clrc
  6637  0870  0D79               	rlf	??__tdiv_to_l_+1,w
  6638  0871  0D7A               	rlf	??__tdiv_to_l_+2,w
  6639  0872  00FB               	movwf	??__tdiv_to_l_+3
  6640  0873  087B               	movf	??__tdiv_to_l_+3,w
  6641  0874  00A4               	movwf	__tdiv_to_l_@cntr
  6642  0875  0824               	movf	__tdiv_to_l_@cntr,w
  6643  0876  1903               	btfsc	3,2
  6644  0877  2860               	goto	l3134
  6645  0878  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6646  0879  30FF               	movlw	255
  6647  087A  05F0               	andwf	__tdiv_to_l_@f1,f
  6648  087B  30FF               	movlw	255
  6649  087C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6650  087D  3000               	movlw	0
  6651  087E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6652  087F  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6653  0880  30FF               	movlw	255
  6654  0881  05F4               	andwf	__tdiv_to_l_@f2,f
  6655  0882  30FF               	movlw	255
  6656  0883  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6657  0884  3000               	movlw	0
  6658  0885  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6659  0886  3000               	movlw	0
  6660  0887  00A3               	movwf	__tdiv_to_l_@quot+3
  6661  0888  3000               	movlw	0
  6662  0889  00A2               	movwf	__tdiv_to_l_@quot+2
  6663  088A  3000               	movlw	0
  6664  088B  00A1               	movwf	__tdiv_to_l_@quot+1
  6665  088C  3000               	movlw	0
  6666  088D  00A0               	movwf	__tdiv_to_l_@quot
  6667  088E  307F               	movlw	127
  6668  088F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6669  0890  3098               	movlw	152
  6670  0891  0724               	addwf	__tdiv_to_l_@cntr,w
  6671  0892  00F8               	movwf	??__tdiv_to_l_
  6672  0893  0878               	movf	??__tdiv_to_l_,w
  6673  0894  02A5               	subwf	__tdiv_to_l_@exp1,f
  6674  0895  3018               	movlw	24
  6675  0896  00F8               	movwf	??__tdiv_to_l_
  6676  0897  0878               	movf	??__tdiv_to_l_,w
  6677  0898  00A4               	movwf	__tdiv_to_l_@cntr
  6678  0899                     l3152:	
  6679  0899  3001               	movlw	1
  6680  089A  00F8               	movwf	??__tdiv_to_l_
  6681  089B                     u4635:	
  6682  089B  1003               	clrc
  6683  089C  0DA0               	rlf	__tdiv_to_l_@quot,f
  6684  089D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6685  089E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6686  089F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6687  08A0  0BF8               	decfsz	??__tdiv_to_l_,f
  6688  08A1  289B               	goto	u4635
  6689  08A2  0876               	movf	__tdiv_to_l_@f2+2,w
  6690  08A3  0272               	subwf	__tdiv_to_l_@f1+2,w
  6691  08A4  1D03               	skipz
  6692  08A5  28AC               	goto	u4645
  6693  08A6  0875               	movf	__tdiv_to_l_@f2+1,w
  6694  08A7  0271               	subwf	__tdiv_to_l_@f1+1,w
  6695  08A8  1D03               	skipz
  6696  08A9  28AC               	goto	u4645
  6697  08AA  0874               	movf	__tdiv_to_l_@f2,w
  6698  08AB  0270               	subwf	__tdiv_to_l_@f1,w
  6699  08AC                     u4645:	
  6700  08AC  1C03               	skipc
  6701  08AD  28B9               	goto	l3160
  6702  08AE  0874               	movf	__tdiv_to_l_@f2,w
  6703  08AF  02F0               	subwf	__tdiv_to_l_@f1,f
  6704  08B0  0875               	movf	__tdiv_to_l_@f2+1,w
  6705  08B1  1C03               	skipc
  6706  08B2  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6707  08B3  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6708  08B4  0876               	movf	__tdiv_to_l_@f2+2,w
  6709  08B5  1C03               	skipc
  6710  08B6  0A76               	incf	__tdiv_to_l_@f2+2,w
  6711  08B7  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6712  08B8  1420               	bsf	__tdiv_to_l_@quot,0
  6713  08B9                     l3160:	
  6714  08B9  3001               	movlw	1
  6715  08BA                     u4655:	
  6716  08BA  1003               	clrc
  6717  08BB  0DF0               	rlf	__tdiv_to_l_@f1,f
  6718  08BC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6719  08BD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6720  08BE  3EFF               	addlw	-1
  6721  08BF  1D03               	skipz
  6722  08C0  28BA               	goto	u4655
  6723  08C1  3001               	movlw	1
  6724  08C2  02A4               	subwf	__tdiv_to_l_@cntr,f
  6725  08C3  1D03               	btfss	3,2
  6726  08C4  2899               	goto	l3152
  6727  08C5  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6728  08C6  28DC               	goto	l3172
  6729  08C7  0825               	movf	__tdiv_to_l_@exp1,w
  6730  08C8  3A80               	xorlw	128
  6731  08C9  3E97               	addlw	151
  6732  08CA  1C03               	btfss	3,0
  6733  08CB  2860               	goto	l3134
  6734  08CC                     l3170:	
  6735  08CC  3001               	movlw	1
  6736  08CD                     u4695:	
  6737  08CD  1003               	clrc
  6738  08CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6739  08CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6740  08D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6741  08D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  6742  08D2  3EFF               	addlw	-1
  6743  08D3  1D03               	skipz
  6744  08D4  28CD               	goto	u4695
  6745  08D5  3001               	movlw	1
  6746  08D6  00F8               	movwf	??__tdiv_to_l_
  6747  08D7  0878               	movf	??__tdiv_to_l_,w
  6748  08D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  6749  08D9  1903               	btfsc	3,2
  6750  08DA  28EF               	goto	l3180
  6751  08DB  28CC               	goto	l3170
  6752  08DC                     l3172:	
  6753  08DC  3018               	movlw	24
  6754  08DD  0225               	subwf	__tdiv_to_l_@exp1,w
  6755  08DE  1803               	btfsc	3,0
  6756  08DF  2860               	goto	l3134
  6757  08E0                     l629:	
  6758  08E0  0825               	movf	__tdiv_to_l_@exp1,w
  6759  08E1  1903               	btfsc	3,2
  6760  08E2  28EF               	goto	l3180
  6761  08E3  3001               	movlw	1
  6762  08E4  00F8               	movwf	??__tdiv_to_l_
  6763  08E5                     u4725:	
  6764  08E5  1003               	clrc
  6765  08E6  0DA0               	rlf	__tdiv_to_l_@quot,f
  6766  08E7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6767  08E8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6768  08E9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6769  08EA  0BF8               	decfsz	??__tdiv_to_l_,f
  6770  08EB  28E5               	goto	u4725
  6771  08EC  3001               	movlw	1
  6772  08ED  02A5               	subwf	__tdiv_to_l_@exp1,f
  6773  08EE  28E0               	goto	l629
  6774  08EF                     l3180:	
  6775  08EF  0823               	movf	__tdiv_to_l_@quot+3,w
  6776  08F0  00F3               	movwf	?__tdiv_to_l_+3
  6777  08F1  0822               	movf	__tdiv_to_l_@quot+2,w
  6778  08F2  00F2               	movwf	?__tdiv_to_l_+2
  6779  08F3  0821               	movf	__tdiv_to_l_@quot+1,w
  6780  08F4  00F1               	movwf	?__tdiv_to_l_+1
  6781  08F5  0820               	movf	__tdiv_to_l_@quot,w
  6782  08F6  00F0               	movwf	?__tdiv_to_l_
  6783  08F7  0008               	return
  6784  08F8                     __end_of__tdiv_to_l_:	
  6785                           
  6786                           	psect	text13
  6787  08F8                     __ptext13:	
  6788 ;; *************** function __div_to_l_ *****************
  6789 ;; Defined at:
  6790 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  f1              4    0[COMMON] unsigned long 
  6793 ;;  f2              4    4[COMMON] unsigned long 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  quot            4    0[BANK0 ] unsigned long 
  6796 ;;  exp1            1    5[BANK0 ] unsigned char 
  6797 ;;  cntr            1    4[BANK0 ] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  4    0[COMMON] unsigned long 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6807 ;;      Params:         8       0       0       0       0
  6808 ;;      Locals:         0       6       0       0       0
  6809 ;;      Temps:          1       0       0       0       0
  6810 ;;      Totals:         9       6       0       0       0
  6811 ;;Total ram usage:       15 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_sprintf
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function __div_to_l_
  6822  08F8                     __div_to_l_:	
  6823                           
  6824                           ;incstack = 0
  6825                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6826  08F8  1003               	clrc
  6827  08F9  0D72               	rlf	__div_to_l_@f1+2,w
  6828  08FA  0D73               	rlf	__div_to_l_@f1+3,w
  6829  08FB  00F8               	movwf	??__div_to_l_
  6830  08FC  0878               	movf	??__div_to_l_,w
  6831  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  6832  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  6833  08FF  00A5               	movwf	__div_to_l_@exp1
  6834  0900  0825               	movf	__div_to_l_@exp1,w
  6835  0901  1D03               	btfss	3,2
  6836  0902  290C               	goto	l3190
  6837  0903                     l3186:	
  6838  0903  3000               	movlw	0
  6839  0904  00F3               	movwf	?__div_to_l_+3
  6840  0905  3000               	movlw	0
  6841  0906  00F2               	movwf	?__div_to_l_+2
  6842  0907  3000               	movlw	0
  6843  0908  00F1               	movwf	?__div_to_l_+1
  6844  0909  3000               	movlw	0
  6845  090A  00F0               	movwf	?__div_to_l_
  6846  090B  0008               	return
  6847  090C                     l3190:	
  6848  090C  1003               	clrc
  6849  090D  0D76               	rlf	__div_to_l_@f2+2,w
  6850  090E  0D77               	rlf	__div_to_l_@f2+3,w
  6851  090F  00F8               	movwf	??__div_to_l_
  6852  0910  0878               	movf	??__div_to_l_,w
  6853  0911  00A4               	movwf	__div_to_l_@cntr
  6854  0912  0824               	movf	__div_to_l_@cntr,w
  6855  0913  1903               	btfsc	3,2
  6856  0914  2903               	goto	l3186
  6857  0915  17F2               	bsf	__div_to_l_@f1+2,7
  6858  0916  30FF               	movlw	255
  6859  0917  05F0               	andwf	__div_to_l_@f1,f
  6860  0918  30FF               	movlw	255
  6861  0919  05F1               	andwf	__div_to_l_@f1+1,f
  6862  091A  30FF               	movlw	255
  6863  091B  05F2               	andwf	__div_to_l_@f1+2,f
  6864  091C  3000               	movlw	0
  6865  091D  05F3               	andwf	__div_to_l_@f1+3,f
  6866  091E  17F6               	bsf	__div_to_l_@f2+2,7
  6867  091F  30FF               	movlw	255
  6868  0920  05F4               	andwf	__div_to_l_@f2,f
  6869  0921  30FF               	movlw	255
  6870  0922  05F5               	andwf	__div_to_l_@f2+1,f
  6871  0923  30FF               	movlw	255
  6872  0924  05F6               	andwf	__div_to_l_@f2+2,f
  6873  0925  3000               	movlw	0
  6874  0926  05F7               	andwf	__div_to_l_@f2+3,f
  6875  0927  3000               	movlw	0
  6876  0928  00A3               	movwf	__div_to_l_@quot+3
  6877  0929  3000               	movlw	0
  6878  092A  00A2               	movwf	__div_to_l_@quot+2
  6879  092B  3000               	movlw	0
  6880  092C  00A1               	movwf	__div_to_l_@quot+1
  6881  092D  3000               	movlw	0
  6882  092E  00A0               	movwf	__div_to_l_@quot
  6883  092F  307F               	movlw	127
  6884  0930  02A5               	subwf	__div_to_l_@exp1,f
  6885  0931  30A0               	movlw	160
  6886  0932  0724               	addwf	__div_to_l_@cntr,w
  6887  0933  00F8               	movwf	??__div_to_l_
  6888  0934  0878               	movf	??__div_to_l_,w
  6889  0935  02A5               	subwf	__div_to_l_@exp1,f
  6890  0936  3020               	movlw	32
  6891  0937  00F8               	movwf	??__div_to_l_
  6892  0938  0878               	movf	??__div_to_l_,w
  6893  0939  00A4               	movwf	__div_to_l_@cntr
  6894  093A                     l3204:	
  6895  093A  3001               	movlw	1
  6896  093B  00F8               	movwf	??__div_to_l_
  6897  093C                     u4765:	
  6898  093C  1003               	clrc
  6899  093D  0DA0               	rlf	__div_to_l_@quot,f
  6900  093E  0DA1               	rlf	__div_to_l_@quot+1,f
  6901  093F  0DA2               	rlf	__div_to_l_@quot+2,f
  6902  0940  0DA3               	rlf	__div_to_l_@quot+3,f
  6903  0941  0BF8               	decfsz	??__div_to_l_,f
  6904  0942  293C               	goto	u4765
  6905  0943  0877               	movf	__div_to_l_@f2+3,w
  6906  0944  0273               	subwf	__div_to_l_@f1+3,w
  6907  0945  1D03               	skipz
  6908  0946  2951               	goto	u4775
  6909  0947  0876               	movf	__div_to_l_@f2+2,w
  6910  0948  0272               	subwf	__div_to_l_@f1+2,w
  6911  0949  1D03               	skipz
  6912  094A  2951               	goto	u4775
  6913  094B  0875               	movf	__div_to_l_@f2+1,w
  6914  094C  0271               	subwf	__div_to_l_@f1+1,w
  6915  094D  1D03               	skipz
  6916  094E  2951               	goto	u4775
  6917  094F  0874               	movf	__div_to_l_@f2,w
  6918  0950  0270               	subwf	__div_to_l_@f1,w
  6919  0951                     u4775:	
  6920  0951  1C03               	skipc
  6921  0952  2962               	goto	l3212
  6922  0953  0874               	movf	__div_to_l_@f2,w
  6923  0954  02F0               	subwf	__div_to_l_@f1,f
  6924  0955  0875               	movf	__div_to_l_@f2+1,w
  6925  0956  1C03               	skipc
  6926  0957  0F75               	incfsz	__div_to_l_@f2+1,w
  6927  0958  02F1               	subwf	__div_to_l_@f1+1,f
  6928  0959  0876               	movf	__div_to_l_@f2+2,w
  6929  095A  1C03               	skipc
  6930  095B  0F76               	incfsz	__div_to_l_@f2+2,w
  6931  095C  02F2               	subwf	__div_to_l_@f1+2,f
  6932  095D  0877               	movf	__div_to_l_@f2+3,w
  6933  095E  1C03               	skipc
  6934  095F  0F77               	incfsz	__div_to_l_@f2+3,w
  6935  0960  02F3               	subwf	__div_to_l_@f1+3,f
  6936  0961  1420               	bsf	__div_to_l_@quot,0
  6937  0962                     l3212:	
  6938  0962  3001               	movlw	1
  6939  0963  00F8               	movwf	??__div_to_l_
  6940  0964                     u4785:	
  6941  0964  1003               	clrc
  6942  0965  0DF0               	rlf	__div_to_l_@f1,f
  6943  0966  0DF1               	rlf	__div_to_l_@f1+1,f
  6944  0967  0DF2               	rlf	__div_to_l_@f1+2,f
  6945  0968  0DF3               	rlf	__div_to_l_@f1+3,f
  6946  0969  0BF8               	decfsz	??__div_to_l_,f
  6947  096A  2964               	goto	u4785
  6948  096B  3001               	movlw	1
  6949  096C  02A4               	subwf	__div_to_l_@cntr,f
  6950  096D  1D03               	btfss	3,2
  6951  096E  293A               	goto	l3204
  6952  096F  1FA5               	btfss	__div_to_l_@exp1,7
  6953  0970  2986               	goto	l3224
  6954  0971  0825               	movf	__div_to_l_@exp1,w
  6955  0972  3A80               	xorlw	128
  6956  0973  3E9F               	addlw	159
  6957  0974  1C03               	btfss	3,0
  6958  0975  2903               	goto	l3186
  6959  0976                     l3222:	
  6960  0976  3001               	movlw	1
  6961  0977                     u4825:	
  6962  0977  1003               	clrc
  6963  0978  0CA3               	rrf	__div_to_l_@quot+3,f
  6964  0979  0CA2               	rrf	__div_to_l_@quot+2,f
  6965  097A  0CA1               	rrf	__div_to_l_@quot+1,f
  6966  097B  0CA0               	rrf	__div_to_l_@quot,f
  6967  097C  3EFF               	addlw	-1
  6968  097D  1D03               	skipz
  6969  097E  2977               	goto	u4825
  6970  097F  3001               	movlw	1
  6971  0980  00F8               	movwf	??__div_to_l_
  6972  0981  0878               	movf	??__div_to_l_,w
  6973  0982  07A5               	addwf	__div_to_l_@exp1,f
  6974  0983  1903               	btfsc	3,2
  6975  0984  2999               	goto	l3232
  6976  0985  2976               	goto	l3222
  6977  0986                     l3224:	
  6978  0986  3020               	movlw	32
  6979  0987  0225               	subwf	__div_to_l_@exp1,w
  6980  0988  1803               	btfsc	3,0
  6981  0989  2903               	goto	l3186
  6982  098A                     l582:	
  6983  098A  0825               	movf	__div_to_l_@exp1,w
  6984  098B  1903               	btfsc	3,2
  6985  098C  2999               	goto	l3232
  6986  098D  3001               	movlw	1
  6987  098E  00F8               	movwf	??__div_to_l_
  6988  098F                     u4855:	
  6989  098F  1003               	clrc
  6990  0990  0DA0               	rlf	__div_to_l_@quot,f
  6991  0991  0DA1               	rlf	__div_to_l_@quot+1,f
  6992  0992  0DA2               	rlf	__div_to_l_@quot+2,f
  6993  0993  0DA3               	rlf	__div_to_l_@quot+3,f
  6994  0994  0BF8               	decfsz	??__div_to_l_,f
  6995  0995  298F               	goto	u4855
  6996  0996  3001               	movlw	1
  6997  0997  02A5               	subwf	__div_to_l_@exp1,f
  6998  0998  298A               	goto	l582
  6999  0999                     l3232:	
  7000  0999  0823               	movf	__div_to_l_@quot+3,w
  7001  099A  00F3               	movwf	?__div_to_l_+3
  7002  099B  0822               	movf	__div_to_l_@quot+2,w
  7003  099C  00F2               	movwf	?__div_to_l_+2
  7004  099D  0821               	movf	__div_to_l_@quot+1,w
  7005  099E  00F1               	movwf	?__div_to_l_+1
  7006  099F  0820               	movf	__div_to_l_@quot,w
  7007  09A0  00F0               	movwf	?__div_to_l_
  7008  09A1  0008               	return
  7009  09A2                     __end_of__div_to_l_:	
  7010                           
  7011                           	psect	text14
  7012  109F                     __ptext14:	
  7013 ;; *************** function ___xxtofl *****************
  7014 ;; Defined at:
  7015 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  sign            1    wreg     unsigned char 
  7018 ;;  val             4    0[COMMON] long 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  sign            1    8[COMMON] unsigned char 
  7021 ;;  arg             4   10[COMMON] unsigned long 
  7022 ;;  exp             1    9[COMMON] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  4    0[COMMON] unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7032 ;;      Params:         4       0       0       0       0
  7033 ;;      Locals:         6       0       0       0       0
  7034 ;;      Temps:          4       0       0       0       0
  7035 ;;      Totals:        14       0       0       0       0
  7036 ;;Total ram usage:       14 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_main
  7042 ;;		_sprintf
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function ___xxtofl
  7048  109F                     ___xxtofl:	
  7049                           
  7050                           ;incstack = 0
  7051                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7052                           ;___xxtofl@sign stored from wreg
  7053  109F  00F8               	movwf	___xxtofl@sign
  7054  10A0  0878               	movf	___xxtofl@sign,w
  7055  10A1  1D03               	btfss	3,2
  7056  10A2  1FF3               	btfss	___xxtofl@val+3,7
  7057  10A3  28B4               	goto	l3382
  7058  10A4  0970               	comf	___xxtofl@val,w
  7059  10A5  00FA               	movwf	___xxtofl@arg
  7060  10A6  0971               	comf	___xxtofl@val+1,w
  7061  10A7  00FB               	movwf	___xxtofl@arg+1
  7062  10A8  0972               	comf	___xxtofl@val+2,w
  7063  10A9  00FC               	movwf	___xxtofl@arg+2
  7064  10AA  0973               	comf	___xxtofl@val+3,w
  7065  10AB  00FD               	movwf	___xxtofl@arg+3
  7066  10AC  0AFA               	incf	___xxtofl@arg,f
  7067  10AD  1903               	skipnz
  7068  10AE  0AFB               	incf	___xxtofl@arg+1,f
  7069  10AF  1903               	skipnz
  7070  10B0  0AFC               	incf	___xxtofl@arg+2,f
  7071  10B1  1903               	skipnz
  7072  10B2  0AFD               	incf	___xxtofl@arg+3,f
  7073  10B3  28BC               	goto	l862
  7074  10B4                     l3382:	
  7075  10B4  0873               	movf	___xxtofl@val+3,w
  7076  10B5  00FD               	movwf	___xxtofl@arg+3
  7077  10B6  0872               	movf	___xxtofl@val+2,w
  7078  10B7  00FC               	movwf	___xxtofl@arg+2
  7079  10B8  0871               	movf	___xxtofl@val+1,w
  7080  10B9  00FB               	movwf	___xxtofl@arg+1
  7081  10BA  0870               	movf	___xxtofl@val,w
  7082  10BB  00FA               	movwf	___xxtofl@arg
  7083  10BC                     l862:	
  7084  10BC  0873               	movf	___xxtofl@val+3,w
  7085  10BD  0472               	iorwf	___xxtofl@val+2,w
  7086  10BE  0471               	iorwf	___xxtofl@val+1,w
  7087  10BF  0470               	iorwf	___xxtofl@val,w
  7088  10C0  1D03               	skipz
  7089  10C1  28CB               	goto	l3388
  7090  10C2  3000               	movlw	0
  7091  10C3  00F3               	movwf	?___xxtofl+3
  7092  10C4  3000               	movlw	0
  7093  10C5  00F2               	movwf	?___xxtofl+2
  7094  10C6  3000               	movlw	0
  7095  10C7  00F1               	movwf	?___xxtofl+1
  7096  10C8  3000               	movlw	0
  7097  10C9  00F0               	movwf	?___xxtofl
  7098  10CA  0008               	return
  7099  10CB                     l3388:	
  7100  10CB  3096               	movlw	150
  7101  10CC  00F4               	movwf	??___xxtofl
  7102  10CD  0874               	movf	??___xxtofl,w
  7103  10CE  00F9               	movwf	___xxtofl@exp
  7104  10CF                     l3392:	
  7105  10CF  30FE               	movlw	254
  7106  10D0  057D               	andwf	___xxtofl@arg+3,w
  7107  10D1  1903               	btfsc	3,2
  7108  10D2  28FC               	goto	l868
  7109  10D3  3001               	movlw	1
  7110  10D4  00F4               	movwf	??___xxtofl
  7111  10D5  0874               	movf	??___xxtofl,w
  7112  10D6  07F9               	addwf	___xxtofl@exp,f
  7113  10D7  3001               	movlw	1
  7114  10D8                     u5285:	
  7115  10D8  1003               	clrc
  7116  10D9  0CFD               	rrf	___xxtofl@arg+3,f
  7117  10DA  0CFC               	rrf	___xxtofl@arg+2,f
  7118  10DB  0CFB               	rrf	___xxtofl@arg+1,f
  7119  10DC  0CFA               	rrf	___xxtofl@arg,f
  7120  10DD  3EFF               	addlw	-1
  7121  10DE  1D03               	skipz
  7122  10DF  28D8               	goto	u5285
  7123  10E0  28CF               	goto	l3392
  7124  10E1                     l3394:	
  7125  10E1  3001               	movlw	1
  7126  10E2  00F4               	movwf	??___xxtofl
  7127  10E3  0874               	movf	??___xxtofl,w
  7128  10E4  07F9               	addwf	___xxtofl@exp,f
  7129  10E5  3001               	movlw	1
  7130  10E6  07FA               	addwf	___xxtofl@arg,f
  7131  10E7  3000               	movlw	0
  7132  10E8  1803               	skipnc
  7133  10E9  3001               	movlw	1
  7134  10EA  07FB               	addwf	___xxtofl@arg+1,f
  7135  10EB  3000               	movlw	0
  7136  10EC  1803               	skipnc
  7137  10ED  3001               	movlw	1
  7138  10EE  07FC               	addwf	___xxtofl@arg+2,f
  7139  10EF  3000               	movlw	0
  7140  10F0  1803               	skipnc
  7141  10F1  3001               	movlw	1
  7142  10F2  07FD               	addwf	___xxtofl@arg+3,f
  7143  10F3  3001               	movlw	1
  7144  10F4                     u5305:	
  7145  10F4  1003               	clrc
  7146  10F5  0CFD               	rrf	___xxtofl@arg+3,f
  7147  10F6  0CFC               	rrf	___xxtofl@arg+2,f
  7148  10F7  0CFB               	rrf	___xxtofl@arg+1,f
  7149  10F8  0CFA               	rrf	___xxtofl@arg,f
  7150  10F9  3EFF               	addlw	-1
  7151  10FA  1D03               	skipz
  7152  10FB  28F4               	goto	u5305
  7153  10FC                     l868:	
  7154  10FC  30FF               	movlw	255
  7155  10FD  057D               	andwf	___xxtofl@arg+3,w
  7156  10FE  1903               	btfsc	3,2
  7157  10FF  2910               	goto	l3402
  7158  1100  28E1               	goto	l3394
  7159  1101                     l3404:	
  7160  1101  3002               	movlw	2
  7161  1102  0279               	subwf	___xxtofl@exp,w
  7162  1103  1C03               	btfss	3,0
  7163  1104  2912               	goto	l875
  7164  1105  3001               	movlw	1
  7165  1106  02F9               	subwf	___xxtofl@exp,f
  7166  1107  3001               	movlw	1
  7167  1108  00F4               	movwf	??___xxtofl
  7168  1109                     u5325:	
  7169  1109  1003               	clrc
  7170  110A  0DFA               	rlf	___xxtofl@arg,f
  7171  110B  0DFB               	rlf	___xxtofl@arg+1,f
  7172  110C  0DFC               	rlf	___xxtofl@arg+2,f
  7173  110D  0DFD               	rlf	___xxtofl@arg+3,f
  7174  110E  0BF4               	decfsz	??___xxtofl,f
  7175  110F  2909               	goto	u5325
  7176  1110                     l3402:	
  7177  1110  1FFC               	btfss	___xxtofl@arg+2,7
  7178  1111  2901               	goto	l3404
  7179  1112                     l875:	
  7180  1112  1879               	btfsc	___xxtofl@exp,0
  7181  1113  291C               	goto	l876
  7182  1114  30FF               	movlw	255
  7183  1115  05FA               	andwf	___xxtofl@arg,f
  7184  1116  30FF               	movlw	255
  7185  1117  05FB               	andwf	___xxtofl@arg+1,f
  7186  1118  307F               	movlw	127
  7187  1119  05FC               	andwf	___xxtofl@arg+2,f
  7188  111A  30FF               	movlw	255
  7189  111B  05FD               	andwf	___xxtofl@arg+3,f
  7190  111C                     l876:	
  7191  111C  1003               	clrc
  7192  111D  0CF9               	rrf	___xxtofl@exp,f
  7193  111E  0879               	movf	___xxtofl@exp,w
  7194  111F  00F4               	movwf	??___xxtofl
  7195  1120  01F5               	clrf	??___xxtofl+1
  7196  1121  01F6               	clrf	??___xxtofl+2
  7197  1122  01F7               	clrf	??___xxtofl+3
  7198  1123  3018               	movlw	24
  7199  1124                     u5365:	
  7200  1124  1003               	clrc
  7201  1125  0DF4               	rlf	??___xxtofl,f
  7202  1126  0DF5               	rlf	??___xxtofl+1,f
  7203  1127  0DF6               	rlf	??___xxtofl+2,f
  7204  1128  0DF7               	rlf	??___xxtofl+3,f
  7205  1129  3EFF               	addlw	-1
  7206  112A  1D03               	skipz
  7207  112B  2924               	goto	u5365
  7208  112C  0874               	movf	??___xxtofl,w
  7209  112D  04FA               	iorwf	___xxtofl@arg,f
  7210  112E  0875               	movf	??___xxtofl+1,w
  7211  112F  04FB               	iorwf	___xxtofl@arg+1,f
  7212  1130  0876               	movf	??___xxtofl+2,w
  7213  1131  04FC               	iorwf	___xxtofl@arg+2,f
  7214  1132  0877               	movf	??___xxtofl+3,w
  7215  1133  04FD               	iorwf	___xxtofl@arg+3,f
  7216  1134  0878               	movf	___xxtofl@sign,w
  7217  1135  1D03               	btfss	3,2
  7218  1136  1FF3               	btfss	___xxtofl@val+3,7
  7219  1137  2939               	goto	l3416
  7220  1138  17FD               	bsf	___xxtofl@arg+3,7
  7221  1139                     l3416:	
  7222  1139  087D               	movf	___xxtofl@arg+3,w
  7223  113A  00F3               	movwf	?___xxtofl+3
  7224  113B  087C               	movf	___xxtofl@arg+2,w
  7225  113C  00F2               	movwf	?___xxtofl+2
  7226  113D  087B               	movf	___xxtofl@arg+1,w
  7227  113E  00F1               	movwf	?___xxtofl+1
  7228  113F  087A               	movf	___xxtofl@arg,w
  7229  1140  00F0               	movwf	?___xxtofl
  7230  1141  0008               	return
  7231  1142                     __end_of___xxtofl:	
  7232                           
  7233                           	psect	text15
  7234  0803                     __ptext15:	
  7235 ;; *************** function ___llmod *****************
  7236 ;; Defined at:
  7237 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  divisor         4    0[COMMON] unsigned long 
  7240 ;;  dividend        4    4[COMMON] unsigned long 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  counter         1    9[COMMON] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  4    0[COMMON] unsigned long 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2, status,0
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7252 ;;      Params:         8       0       0       0       0
  7253 ;;      Locals:         1       0       0       0       0
  7254 ;;      Temps:          1       0       0       0       0
  7255 ;;      Totals:        10       0       0       0       0
  7256 ;;Total ram usage:       10 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_sprintf
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           
  7266                           ;psect for function ___llmod
  7267  0803                     ___llmod:	
  7268                           
  7269                           ;incstack = 0
  7270                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7271  0803  0873               	movf	___llmod@divisor+3,w
  7272  0804  0472               	iorwf	___llmod@divisor+2,w
  7273  0805  0471               	iorwf	___llmod@divisor+1,w
  7274  0806  0470               	iorwf	___llmod@divisor,w
  7275  0807  1903               	skipnz
  7276  0808  2846               	goto	l3366
  7277  0809  01F9               	clrf	___llmod@counter
  7278  080A  0AF9               	incf	___llmod@counter,f
  7279  080B                     l3356:	
  7280  080B  1BF3               	btfsc	___llmod@divisor+3,7
  7281  080C  281B               	goto	l3358
  7282  080D  3001               	movlw	1
  7283  080E  00F8               	movwf	??___llmod
  7284  080F                     u5205:	
  7285  080F  1003               	clrc
  7286  0810  0DF0               	rlf	___llmod@divisor,f
  7287  0811  0DF1               	rlf	___llmod@divisor+1,f
  7288  0812  0DF2               	rlf	___llmod@divisor+2,f
  7289  0813  0DF3               	rlf	___llmod@divisor+3,f
  7290  0814  0BF8               	decfsz	??___llmod,f
  7291  0815  280F               	goto	u5205
  7292  0816  3001               	movlw	1
  7293  0817  00F8               	movwf	??___llmod
  7294  0818  0878               	movf	??___llmod,w
  7295  0819  07F9               	addwf	___llmod@counter,f
  7296  081A  280B               	goto	l3356
  7297  081B                     l3358:	
  7298  081B  0873               	movf	___llmod@divisor+3,w
  7299  081C  0277               	subwf	___llmod@dividend+3,w
  7300  081D  1D03               	skipz
  7301  081E  2829               	goto	u5225
  7302  081F  0872               	movf	___llmod@divisor+2,w
  7303  0820  0276               	subwf	___llmod@dividend+2,w
  7304  0821  1D03               	skipz
  7305  0822  2829               	goto	u5225
  7306  0823  0871               	movf	___llmod@divisor+1,w
  7307  0824  0275               	subwf	___llmod@dividend+1,w
  7308  0825  1D03               	skipz
  7309  0826  2829               	goto	u5225
  7310  0827  0870               	movf	___llmod@divisor,w
  7311  0828  0274               	subwf	___llmod@dividend,w
  7312  0829                     u5225:	
  7313  0829  1C03               	skipc
  7314  082A  2839               	goto	l3362
  7315  082B  0870               	movf	___llmod@divisor,w
  7316  082C  02F4               	subwf	___llmod@dividend,f
  7317  082D  0871               	movf	___llmod@divisor+1,w
  7318  082E  1C03               	skipc
  7319  082F  0F71               	incfsz	___llmod@divisor+1,w
  7320  0830  02F5               	subwf	___llmod@dividend+1,f
  7321  0831  0872               	movf	___llmod@divisor+2,w
  7322  0832  1C03               	skipc
  7323  0833  0F72               	incfsz	___llmod@divisor+2,w
  7324  0834  02F6               	subwf	___llmod@dividend+2,f
  7325  0835  0873               	movf	___llmod@divisor+3,w
  7326  0836  1C03               	skipc
  7327  0837  0F73               	incfsz	___llmod@divisor+3,w
  7328  0838  02F7               	subwf	___llmod@dividend+3,f
  7329  0839                     l3362:	
  7330  0839  3001               	movlw	1
  7331  083A                     u5235:	
  7332  083A  1003               	clrc
  7333  083B  0CF3               	rrf	___llmod@divisor+3,f
  7334  083C  0CF2               	rrf	___llmod@divisor+2,f
  7335  083D  0CF1               	rrf	___llmod@divisor+1,f
  7336  083E  0CF0               	rrf	___llmod@divisor,f
  7337  083F  3EFF               	addlw	-1
  7338  0840  1D03               	skipz
  7339  0841  283A               	goto	u5235
  7340  0842  3001               	movlw	1
  7341  0843  02F9               	subwf	___llmod@counter,f
  7342  0844  1D03               	btfss	3,2
  7343  0845  281B               	goto	l3358
  7344  0846                     l3366:	
  7345  0846  0877               	movf	___llmod@dividend+3,w
  7346  0847  00F3               	movwf	?___llmod+3
  7347  0848  0876               	movf	___llmod@dividend+2,w
  7348  0849  00F2               	movwf	?___llmod+2
  7349  084A  0875               	movf	___llmod@dividend+1,w
  7350  084B  00F1               	movwf	?___llmod+1
  7351  084C  0874               	movf	___llmod@dividend,w
  7352  084D  00F0               	movwf	?___llmod
  7353  084E  0008               	return
  7354  084F                     __end_of___llmod:	
  7355                           
  7356                           	psect	text16
  7357  1C80                     __ptext16:	
  7358 ;; *************** function ___fltol *****************
  7359 ;; Defined at:
  7360 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  f1              4   49[BANK0 ] unsigned long 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  exp1            1   59[BANK0 ] unsigned char 
  7365 ;;  sign1           1   58[BANK0 ] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  4   49[BANK0 ] long 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7375 ;;      Params:         0       4       0       0       0
  7376 ;;      Locals:         0       2       0       0       0
  7377 ;;      Temps:          0       5       0       0       0
  7378 ;;      Totals:         0      11       0       0       0
  7379 ;;Total ram usage:       11 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_sprintf
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           
  7389                           ;psect for function ___fltol
  7390  1C80                     ___fltol:	
  7391                           
  7392                           ;incstack = 0
  7393                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7394  1C80  1003               	clrc
  7395  1C81  1283               	bcf	3,5	;RP0=0, select bank0
  7396  1C82  1303               	bcf	3,6	;RP1=0, select bank0
  7397  1C83  0D53               	rlf	___fltol@f1+2,w
  7398  1C84  0D54               	rlf	___fltol@f1+3,w
  7399  1C85  00D5               	movwf	??___fltol
  7400  1C86  0855               	movf	??___fltol,w
  7401  1C87  00DB               	movwf	___fltol@exp1
  7402  1C88  085B               	movf	___fltol@exp1,w
  7403  1C89  1D03               	btfss	3,2
  7404  1C8A  2C94               	goto	l3320
  7405  1C8B                     l3316:	
  7406  1C8B  3000               	movlw	0
  7407  1C8C  00D4               	movwf	?___fltol+3
  7408  1C8D  3000               	movlw	0
  7409  1C8E  00D3               	movwf	?___fltol+2
  7410  1C8F  3000               	movlw	0
  7411  1C90  00D2               	movwf	?___fltol+1
  7412  1C91  3000               	movlw	0
  7413  1C92  00D1               	movwf	?___fltol
  7414  1C93  0008               	return
  7415  1C94                     l3320:	
  7416  1C94  0851               	movf	___fltol@f1,w
  7417  1C95  00D5               	movwf	??___fltol
  7418  1C96  0852               	movf	___fltol@f1+1,w
  7419  1C97  00D6               	movwf	??___fltol+1
  7420  1C98  0853               	movf	___fltol@f1+2,w
  7421  1C99  00D7               	movwf	??___fltol+2
  7422  1C9A  0854               	movf	___fltol@f1+3,w
  7423  1C9B  00D8               	movwf	??___fltol+3
  7424  1C9C  301F               	movlw	31
  7425  1C9D                     u5105:	
  7426  1C9D  1003               	clrc
  7427  1C9E  0CD8               	rrf	??___fltol+3,f
  7428  1C9F  0CD7               	rrf	??___fltol+2,f
  7429  1CA0  0CD6               	rrf	??___fltol+1,f
  7430  1CA1  0CD5               	rrf	??___fltol,f
  7431  1CA2  3EFF               	addlw	-1
  7432  1CA3  1D03               	skipz
  7433  1CA4  2C9D               	goto	u5105
  7434  1CA5  0855               	movf	??___fltol,w
  7435  1CA6  00D9               	movwf	??___fltol+4
  7436  1CA7  0859               	movf	??___fltol+4,w
  7437  1CA8  00DA               	movwf	___fltol@sign1
  7438  1CA9  17D3               	bsf	___fltol@f1+2,7
  7439  1CAA  30FF               	movlw	255
  7440  1CAB  05D1               	andwf	___fltol@f1,f
  7441  1CAC  30FF               	movlw	255
  7442  1CAD  05D2               	andwf	___fltol@f1+1,f
  7443  1CAE  30FF               	movlw	255
  7444  1CAF  05D3               	andwf	___fltol@f1+2,f
  7445  1CB0  3000               	movlw	0
  7446  1CB1  05D4               	andwf	___fltol@f1+3,f
  7447  1CB2  3096               	movlw	150
  7448  1CB3  02DB               	subwf	___fltol@exp1,f
  7449  1CB4  1FDB               	btfss	___fltol@exp1,7
  7450  1CB5  2CCB               	goto	l3338
  7451  1CB6  085B               	movf	___fltol@exp1,w
  7452  1CB7  3A80               	xorlw	128
  7453  1CB8  3E97               	addlw	151
  7454  1CB9  1C03               	btfss	3,0
  7455  1CBA  2C8B               	goto	l3316
  7456  1CBB                     l3336:	
  7457  1CBB  3001               	movlw	1
  7458  1CBC                     u5135:	
  7459  1CBC  1003               	clrc
  7460  1CBD  0CD4               	rrf	___fltol@f1+3,f
  7461  1CBE  0CD3               	rrf	___fltol@f1+2,f
  7462  1CBF  0CD2               	rrf	___fltol@f1+1,f
  7463  1CC0  0CD1               	rrf	___fltol@f1,f
  7464  1CC1  3EFF               	addlw	-1
  7465  1CC2  1D03               	skipz
  7466  1CC3  2CBC               	goto	u5135
  7467  1CC4  3001               	movlw	1
  7468  1CC5  00D5               	movwf	??___fltol
  7469  1CC6  0855               	movf	??___fltol,w
  7470  1CC7  07DB               	addwf	___fltol@exp1,f
  7471  1CC8  1903               	btfsc	3,2
  7472  1CC9  2CDE               	goto	l3346
  7473  1CCA  2CBB               	goto	l3336
  7474  1CCB                     l3338:	
  7475  1CCB  3020               	movlw	32
  7476  1CCC  025B               	subwf	___fltol@exp1,w
  7477  1CCD  1803               	btfsc	3,0
  7478  1CCE  2C8B               	goto	l3316
  7479  1CCF                     l611:	
  7480  1CCF  085B               	movf	___fltol@exp1,w
  7481  1CD0  1903               	btfsc	3,2
  7482  1CD1  2CDE               	goto	l3346
  7483  1CD2  3001               	movlw	1
  7484  1CD3  00D5               	movwf	??___fltol
  7485  1CD4                     u5165:	
  7486  1CD4  1003               	clrc
  7487  1CD5  0DD1               	rlf	___fltol@f1,f
  7488  1CD6  0DD2               	rlf	___fltol@f1+1,f
  7489  1CD7  0DD3               	rlf	___fltol@f1+2,f
  7490  1CD8  0DD4               	rlf	___fltol@f1+3,f
  7491  1CD9  0BD5               	decfsz	??___fltol,f
  7492  1CDA  2CD4               	goto	u5165
  7493  1CDB  3001               	movlw	1
  7494  1CDC  02DB               	subwf	___fltol@exp1,f
  7495  1CDD  2CCF               	goto	l611
  7496  1CDE                     l3346:	
  7497  1CDE  085A               	movf	___fltol@sign1,w
  7498  1CDF  1903               	btfsc	3,2
  7499  1CE0  0008               	return
  7500  1CE1  09D1               	comf	___fltol@f1,f
  7501  1CE2  09D2               	comf	___fltol@f1+1,f
  7502  1CE3  09D3               	comf	___fltol@f1+2,f
  7503  1CE4  09D4               	comf	___fltol@f1+3,f
  7504  1CE5  0AD1               	incf	___fltol@f1,f
  7505  1CE6  1903               	skipnz
  7506  1CE7  0AD2               	incf	___fltol@f1+1,f
  7507  1CE8  1903               	skipnz
  7508  1CE9  0AD3               	incf	___fltol@f1+2,f
  7509  1CEA  1903               	skipnz
  7510  1CEB  0AD4               	incf	___fltol@f1+3,f
  7511  1CEC  0008               	return
  7512  1CED                     __end_of___fltol:	
  7513                           
  7514                           	psect	text17
  7515  197F                     __ptext17:	
  7516 ;; *************** function ___flsub *****************
  7517 ;; Defined at:
  7518 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  a               4   70[BANK0 ] long 
  7521 ;;  b               4   74[BANK0 ] long 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  4   70[BANK0 ] long 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7533 ;;      Params:         0       8       0       0       0
  7534 ;;      Locals:         0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0
  7536 ;;      Totals:         0       8       0       0       0
  7537 ;;Total ram usage:        8 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    1
  7540 ;; This function calls:
  7541 ;;		___fladd
  7542 ;; This function is called by:
  7543 ;;		_sprintf
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           
  7548                           ;psect for function ___flsub
  7549  197F                     ___flsub:	
  7550                           
  7551                           ;incstack = 0
  7552                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7553  197F  3080               	movlw	128
  7554  1980  1283               	bcf	3,5	;RP0=0, select bank0
  7555  1981  1303               	bcf	3,6	;RP1=0, select bank0
  7556  1982  06E9               	xorwf	___flsub@a+3,f
  7557  1983  086D               	movf	___flsub@b+3,w
  7558  1984  00D5               	movwf	___fladd@b+3
  7559  1985  086C               	movf	___flsub@b+2,w
  7560  1986  00D4               	movwf	___fladd@b+2
  7561  1987  086B               	movf	___flsub@b+1,w
  7562  1988  00D3               	movwf	___fladd@b+1
  7563  1989  086A               	movf	___flsub@b,w
  7564  198A  00D2               	movwf	___fladd@b
  7565  198B  0869               	movf	___flsub@a+3,w
  7566  198C  00D9               	movwf	___fladd@a+3
  7567  198D  0868               	movf	___flsub@a+2,w
  7568  198E  00D8               	movwf	___fladd@a+2
  7569  198F  0867               	movf	___flsub@a+1,w
  7570  1990  00D7               	movwf	___fladd@a+1
  7571  1991  0866               	movf	___flsub@a,w
  7572  1992  00D6               	movwf	___fladd@a
  7573  1993  160A  118A  2142   	fcall	___fladd
  7574  1996  1283               	bcf	3,5	;RP0=0, select bank0
  7575  1997  1303               	bcf	3,6	;RP1=0, select bank0
  7576  1998  0855               	movf	?___fladd+3,w
  7577  1999  00E9               	movwf	?___flsub+3
  7578  199A  0854               	movf	?___fladd+2,w
  7579  199B  00E8               	movwf	?___flsub+2
  7580  199C  0853               	movf	?___fladd+1,w
  7581  199D  00E7               	movwf	?___flsub+1
  7582  199E  0852               	movf	?___fladd,w
  7583  199F  00E6               	movwf	?___flsub
  7584  19A0  0008               	return
  7585  19A1                     __end_of___flsub:	
  7586                           
  7587                           	psect	text18
  7588  1142                     __ptext18:	
  7589 ;; *************** function ___fladd *****************
  7590 ;; Defined at:
  7591 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  b               4   50[BANK0 ] long 
  7594 ;;  a               4   54[BANK0 ] long 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  grs             1   69[BANK0 ] unsigned char 
  7597 ;;  bexp            1   68[BANK0 ] unsigned char 
  7598 ;;  aexp            1   67[BANK0 ] unsigned char 
  7599 ;;  signs           1   66[BANK0 ] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  4   50[BANK0 ] unsigned char 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0, btemp+1
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7609 ;;      Params:         0       8       0       0       0
  7610 ;;      Locals:         0       4       0       0       0
  7611 ;;      Temps:          0       8       0       0       0
  7612 ;;      Totals:         0      20       0       0       0
  7613 ;;Total ram usage:       20 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_main
  7619 ;;		_sprintf
  7620 ;;		___flsub
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           
  7625                           ;psect for function ___fladd
  7626  1142                     ___fladd:	
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7630  1142  1283               	bcf	3,5	;RP0=0, select bank0
  7631  1143  1303               	bcf	3,6	;RP1=0, select bank0
  7632  1144  0855               	movf	___fladd@b+3,w
  7633  1145  3980               	andlw	128
  7634  1146  00DA               	movwf	??___fladd
  7635  1147  085A               	movf	??___fladd,w
  7636  1148  00E2               	movwf	___fladd@signs
  7637  1149  0855               	movf	___fladd@b+3,w
  7638  114A  00DA               	movwf	??___fladd
  7639  114B  075A               	addwf	??___fladd,w
  7640  114C  00DB               	movwf	??___fladd+1
  7641  114D  085B               	movf	??___fladd+1,w
  7642  114E  00E4               	movwf	___fladd@bexp
  7643  114F  1BD4               	btfsc	___fladd@b+2,7
  7644  1150  1464               	bsf	___fladd@bexp,0
  7645  1151  0864               	movf	___fladd@bexp,w
  7646  1152  1903               	btfsc	3,2
  7647  1153  2962               	goto	l2726
  7648  1154  0A64               	incf	___fladd@bexp,w
  7649  1155  1D03               	btfss	3,2
  7650  1156  295F               	goto	l2722
  7651  1157  3000               	movlw	0
  7652  1158  00D5               	movwf	___fladd@b+3
  7653  1159  3000               	movlw	0
  7654  115A  00D4               	movwf	___fladd@b+2
  7655  115B  3000               	movlw	0
  7656  115C  00D3               	movwf	___fladd@b+1
  7657  115D  3000               	movlw	0
  7658  115E  00D2               	movwf	___fladd@b
  7659  115F                     l2722:	
  7660  115F  17D4               	bsf	___fladd@b+2,7
  7661  1160  01D5               	clrf	___fladd@b+3
  7662  1161  296A               	goto	l2728
  7663  1162                     l2726:	
  7664  1162  3000               	movlw	0
  7665  1163  00D5               	movwf	___fladd@b+3
  7666  1164  3000               	movlw	0
  7667  1165  00D4               	movwf	___fladd@b+2
  7668  1166  3000               	movlw	0
  7669  1167  00D3               	movwf	___fladd@b+1
  7670  1168  3000               	movlw	0
  7671  1169  00D2               	movwf	___fladd@b
  7672  116A                     l2728:	
  7673  116A  0859               	movf	___fladd@a+3,w
  7674  116B  3980               	andlw	128
  7675  116C  00DA               	movwf	??___fladd
  7676  116D  085A               	movf	??___fladd,w
  7677  116E  00E3               	movwf	___fladd@aexp
  7678  116F  0863               	movf	___fladd@aexp,w
  7679  1170  0662               	xorwf	___fladd@signs,w
  7680  1171  1D03               	btfss	3,2
  7681  1172  1762               	bsf	___fladd@signs,6
  7682  1173  0859               	movf	___fladd@a+3,w
  7683  1174  00DA               	movwf	??___fladd
  7684  1175  075A               	addwf	??___fladd,w
  7685  1176  00DB               	movwf	??___fladd+1
  7686  1177  085B               	movf	??___fladd+1,w
  7687  1178  00E3               	movwf	___fladd@aexp
  7688  1179  1BD8               	btfsc	___fladd@a+2,7
  7689  117A  1463               	bsf	___fladd@aexp,0
  7690  117B  0863               	movf	___fladd@aexp,w
  7691  117C  1903               	btfsc	3,2
  7692  117D  298C               	goto	l2750
  7693  117E  0A63               	incf	___fladd@aexp,w
  7694  117F  1D03               	btfss	3,2
  7695  1180  2989               	goto	l2746
  7696  1181  3000               	movlw	0
  7697  1182  00D9               	movwf	___fladd@a+3
  7698  1183  3000               	movlw	0
  7699  1184  00D8               	movwf	___fladd@a+2
  7700  1185  3000               	movlw	0
  7701  1186  00D7               	movwf	___fladd@a+1
  7702  1187  3000               	movlw	0
  7703  1188  00D6               	movwf	___fladd@a
  7704  1189                     l2746:	
  7705  1189  17D8               	bsf	___fladd@a+2,7
  7706  118A  01D9               	clrf	___fladd@a+3
  7707  118B  2994               	goto	l728
  7708  118C                     l2750:	
  7709  118C  3000               	movlw	0
  7710  118D  00D9               	movwf	___fladd@a+3
  7711  118E  3000               	movlw	0
  7712  118F  00D8               	movwf	___fladd@a+2
  7713  1190  3000               	movlw	0
  7714  1191  00D7               	movwf	___fladd@a+1
  7715  1192  3000               	movlw	0
  7716  1193  00D6               	movwf	___fladd@a
  7717  1194                     l728:	
  7718  1194  0864               	movf	___fladd@bexp,w
  7719  1195  0263               	subwf	___fladd@aexp,w
  7720  1196  1803               	skipnc
  7721  1197  29DA               	goto	l2786
  7722  1198  1F62               	btfss	___fladd@signs,6
  7723  1199  299E               	goto	l2756
  7724  119A  3080               	movlw	128
  7725  119B  00DA               	movwf	??___fladd
  7726  119C  085A               	movf	??___fladd,w
  7727  119D  06E2               	xorwf	___fladd@signs,f
  7728  119E                     l2756:	
  7729  119E  0864               	movf	___fladd@bexp,w
  7730  119F  00DA               	movwf	??___fladd
  7731  11A0  085A               	movf	??___fladd,w
  7732  11A1  00E5               	movwf	___fladd@grs
  7733  11A2  0863               	movf	___fladd@aexp,w
  7734  11A3  00DA               	movwf	??___fladd
  7735  11A4  085A               	movf	??___fladd,w
  7736  11A5  00E4               	movwf	___fladd@bexp
  7737  11A6  0865               	movf	___fladd@grs,w
  7738  11A7  00DA               	movwf	??___fladd
  7739  11A8  085A               	movf	??___fladd,w
  7740  11A9  00E3               	movwf	___fladd@aexp
  7741  11AA  0852               	movf	___fladd@b,w
  7742  11AB  00DA               	movwf	??___fladd
  7743  11AC  085A               	movf	??___fladd,w
  7744  11AD  00E5               	movwf	___fladd@grs
  7745  11AE  0856               	movf	___fladd@a,w
  7746  11AF  00DA               	movwf	??___fladd
  7747  11B0  085A               	movf	??___fladd,w
  7748  11B1  00D2               	movwf	___fladd@b
  7749  11B2  0865               	movf	___fladd@grs,w
  7750  11B3  00DA               	movwf	??___fladd
  7751  11B4  085A               	movf	??___fladd,w
  7752  11B5  00D6               	movwf	___fladd@a
  7753  11B6  0853               	movf	___fladd@b+1,w
  7754  11B7  00DA               	movwf	??___fladd
  7755  11B8  085A               	movf	??___fladd,w
  7756  11B9  00E5               	movwf	___fladd@grs
  7757  11BA  0857               	movf	___fladd@a+1,w
  7758  11BB  00DA               	movwf	??___fladd
  7759  11BC  085A               	movf	??___fladd,w
  7760  11BD  00D3               	movwf	___fladd@b+1
  7761  11BE  0865               	movf	___fladd@grs,w
  7762  11BF  00DA               	movwf	??___fladd
  7763  11C0  085A               	movf	??___fladd,w
  7764  11C1  00D7               	movwf	___fladd@a+1
  7765  11C2  0854               	movf	___fladd@b+2,w
  7766  11C3  00DA               	movwf	??___fladd
  7767  11C4  085A               	movf	??___fladd,w
  7768  11C5  00E5               	movwf	___fladd@grs
  7769  11C6  0858               	movf	___fladd@a+2,w
  7770  11C7  00DA               	movwf	??___fladd
  7771  11C8  085A               	movf	??___fladd,w
  7772  11C9  00D4               	movwf	___fladd@b+2
  7773  11CA  0865               	movf	___fladd@grs,w
  7774  11CB  00DA               	movwf	??___fladd
  7775  11CC  085A               	movf	??___fladd,w
  7776  11CD  00D8               	movwf	___fladd@a+2
  7777  11CE  0855               	movf	___fladd@b+3,w
  7778  11CF  00DA               	movwf	??___fladd
  7779  11D0  085A               	movf	??___fladd,w
  7780  11D1  00E5               	movwf	___fladd@grs
  7781  11D2  0859               	movf	___fladd@a+3,w
  7782  11D3  00DA               	movwf	??___fladd
  7783  11D4  085A               	movf	??___fladd,w
  7784  11D5  00D5               	movwf	___fladd@b+3
  7785  11D6  0865               	movf	___fladd@grs,w
  7786  11D7  00DA               	movwf	??___fladd
  7787  11D8  085A               	movf	??___fladd,w
  7788  11D9  00D9               	movwf	___fladd@a+3
  7789  11DA                     l2786:	
  7790  11DA  01E5               	clrf	___fladd@grs
  7791  11DB  0863               	movf	___fladd@aexp,w
  7792  11DC  00DA               	movwf	??___fladd
  7793  11DD  01DB               	clrf	??___fladd+1
  7794  11DE  085B               	movf	??___fladd+1,w
  7795  11DF  00DD               	movwf	??___fladd+3
  7796  11E0  0864               	movf	___fladd@bexp,w
  7797  11E1  025A               	subwf	??___fladd,w
  7798  11E2  00DC               	movwf	??___fladd+2
  7799  11E3  1C03               	skipc
  7800  11E4  03DD               	decf	??___fladd+3,f
  7801  11E5  085D               	movf	??___fladd+3,w
  7802  11E6  3A80               	xorlw	128
  7803  11E7  00FF               	movwf	127
  7804  11E8  3080               	movlw	128
  7805  11E9  027F               	subwf	127,w
  7806  11EA  1D03               	skipz
  7807  11EB  29EE               	goto	u3585
  7808  11EC  301A               	movlw	26
  7809  11ED  025C               	subwf	??___fladd+2,w
  7810  11EE                     u3585:	
  7811  11EE  1C03               	skipc
  7812  11EF  2A27               	goto	l2804
  7813  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  7814  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  7815  11F2  0855               	movf	___fladd@b+3,w
  7816  11F3  0454               	iorwf	___fladd@b+2,w
  7817  11F4  0453               	iorwf	___fladd@b+1,w
  7818  11F5  0452               	iorwf	___fladd@b,w
  7819  11F6  1903               	btfsc	3,2
  7820  11F7  29FA               	goto	u3590
  7821  11F8  3001               	movlw	1
  7822  11F9  29FB               	goto	u3600
  7823  11FA                     u3590:	
  7824  11FA  3000               	movlw	0
  7825  11FB                     u3600:	
  7826  11FB  00DA               	movwf	??___fladd
  7827  11FC  085A               	movf	??___fladd,w
  7828  11FD  00E5               	movwf	___fladd@grs
  7829  11FE  3000               	movlw	0
  7830  11FF  00D5               	movwf	___fladd@b+3
  7831  1200  3000               	movlw	0
  7832  1201  00D4               	movwf	___fladd@b+2
  7833  1202  3000               	movlw	0
  7834  1203  00D3               	movwf	___fladd@b+1
  7835  1204  3000               	movlw	0
  7836  1205  00D2               	movwf	___fladd@b
  7837  1206  0863               	movf	___fladd@aexp,w
  7838  1207  00DA               	movwf	??___fladd
  7839  1208  085A               	movf	??___fladd,w
  7840  1209  00E4               	movwf	___fladd@bexp
  7841  120A  2A2D               	goto	l732
  7842  120B                     l734:	
  7843  120B  1C65               	btfss	___fladd@grs,0
  7844  120C  2A16               	goto	l2794
  7845  120D  0865               	movf	___fladd@grs,w
  7846  120E  00DA               	movwf	??___fladd
  7847  120F  1003               	clrc
  7848  1210  0C5A               	rrf	??___fladd,w
  7849  1211  3801               	iorlw	1
  7850  1212  00DB               	movwf	??___fladd+1
  7851  1213  085B               	movf	??___fladd+1,w
  7852  1214  00E5               	movwf	___fladd@grs
  7853  1215  2A18               	goto	l2796
  7854  1216                     l2794:	
  7855  1216  1003               	clrc
  7856  1217  0CE5               	rrf	___fladd@grs,f
  7857  1218                     l2796:	
  7858  1218  1852               	btfsc	___fladd@b,0
  7859  1219  17E5               	bsf	___fladd@grs,7
  7860  121A  3001               	movlw	1
  7861  121B  00DA               	movwf	??___fladd
  7862  121C                     u3635:	
  7863  121C  0D55               	rlf	___fladd@b+3,w
  7864  121D  0CD5               	rrf	___fladd@b+3,f
  7865  121E  0CD4               	rrf	___fladd@b+2,f
  7866  121F  0CD3               	rrf	___fladd@b+1,f
  7867  1220  0CD2               	rrf	___fladd@b,f
  7868  1221  0BDA               	decfsz	??___fladd& (0+127),f
  7869  1222  2A1C               	goto	u3635
  7870  1223  3001               	movlw	1
  7871  1224  00DA               	movwf	??___fladd
  7872  1225  085A               	movf	??___fladd,w
  7873  1226  07E4               	addwf	___fladd@bexp,f
  7874  1227                     l2804:	
  7875  1227  1283               	bcf	3,5	;RP0=0, select bank0
  7876  1228  1303               	bcf	3,6	;RP1=0, select bank0
  7877  1229  0863               	movf	___fladd@aexp,w
  7878  122A  0264               	subwf	___fladd@bexp,w
  7879  122B  1C03               	skipc
  7880  122C  2A0B               	goto	l734
  7881  122D                     l732:	
  7882  122D  1B62               	btfsc	___fladd@signs,6
  7883  122E  2A6E               	goto	l2830
  7884  122F  0864               	movf	___fladd@bexp,w
  7885  1230  1D03               	btfss	3,2
  7886  1231  2A3B               	goto	l2812
  7887  1232  3000               	movlw	0
  7888  1233  00D5               	movwf	?___fladd+3
  7889  1234  3000               	movlw	0
  7890  1235  00D4               	movwf	?___fladd+2
  7891  1236  3000               	movlw	0
  7892  1237  00D3               	movwf	?___fladd+1
  7893  1238  3000               	movlw	0
  7894  1239  00D2               	movwf	?___fladd
  7895  123A  0008               	return
  7896  123B                     l2812:	
  7897  123B  0856               	movf	___fladd@a,w
  7898  123C  07D2               	addwf	___fladd@b,f
  7899  123D  0857               	movf	___fladd@a+1,w
  7900  123E  1103               	clrz
  7901  123F  1803               	skipnc
  7902  1240  3E01               	addlw	1
  7903  1241  1D03               	btfss	3,2
  7904  1242  07D3               	addwf	___fladd@b+1,f
  7905  1243  0858               	movf	___fladd@a+2,w
  7906  1244  1103               	clrz
  7907  1245  1803               	skipnc
  7908  1246  3E01               	addlw	1
  7909  1247  1D03               	btfss	3,2
  7910  1248  07D4               	addwf	___fladd@b+2,f
  7911  1249  0859               	movf	___fladd@a+3,w
  7912  124A  1103               	clrz
  7913  124B  1803               	skipnc
  7914  124C  3E01               	addlw	1
  7915  124D  1D03               	btfss	3,2
  7916  124E  07D5               	addwf	___fladd@b+3,f
  7917  124F  1C55               	btfss	___fladd@b+3,0
  7918  1250  2B10               	goto	l2864
  7919  1251  1C65               	btfss	___fladd@grs,0
  7920  1252  2A5C               	goto	l2820
  7921  1253  0865               	movf	___fladd@grs,w
  7922  1254  00DA               	movwf	??___fladd
  7923  1255  1003               	clrc
  7924  1256  0C5A               	rrf	??___fladd,w
  7925  1257  3801               	iorlw	1
  7926  1258  00DB               	movwf	??___fladd+1
  7927  1259  085B               	movf	??___fladd+1,w
  7928  125A  00E5               	movwf	___fladd@grs
  7929  125B  2A5E               	goto	l2822
  7930  125C                     l2820:	
  7931  125C  1003               	clrc
  7932  125D  0CE5               	rrf	___fladd@grs,f
  7933  125E                     l2822:	
  7934  125E  1852               	btfsc	___fladd@b,0
  7935  125F  17E5               	bsf	___fladd@grs,7
  7936  1260  3001               	movlw	1
  7937  1261  00DA               	movwf	??___fladd
  7938  1262                     u3715:	
  7939  1262  0D55               	rlf	___fladd@b+3,w
  7940  1263  0CD5               	rrf	___fladd@b+3,f
  7941  1264  0CD4               	rrf	___fladd@b+2,f
  7942  1265  0CD3               	rrf	___fladd@b+1,f
  7943  1266  0CD2               	rrf	___fladd@b,f
  7944  1267  0BDA               	decfsz	??___fladd& (0+127),f
  7945  1268  2A62               	goto	u3715
  7946  1269  3001               	movlw	1
  7947  126A  00DA               	movwf	??___fladd
  7948  126B  085A               	movf	??___fladd,w
  7949  126C  07E4               	addwf	___fladd@bexp,f
  7950  126D  2B10               	goto	l2864
  7951  126E                     l2830:	
  7952  126E  0855               	movf	___fladd@b+3,w
  7953  126F  3A80               	xorlw	128
  7954  1270  00FF               	movwf	127
  7955  1271  0859               	movf	___fladd@a+3,w
  7956  1272  3A80               	xorlw	128
  7957  1273  027F               	subwf	127,w
  7958  1274  1D03               	skipz
  7959  1275  2A80               	goto	u3723
  7960  1276  0858               	movf	___fladd@a+2,w
  7961  1277  0254               	subwf	___fladd@b+2,w
  7962  1278  1D03               	skipz
  7963  1279  2A80               	goto	u3723
  7964  127A  0857               	movf	___fladd@a+1,w
  7965  127B  0253               	subwf	___fladd@b+1,w
  7966  127C  1D03               	skipz
  7967  127D  2A80               	goto	u3723
  7968  127E  0856               	movf	___fladd@a,w
  7969  127F  0252               	subwf	___fladd@b,w
  7970  1280                     u3723:	
  7971  1280  1803               	skipnc
  7972  1281  2AD8               	goto	l2840
  7973  1282  30FF               	movlw	255
  7974  1283  00DA               	movwf	??___fladd
  7975  1284  30FF               	movlw	255
  7976  1285  00DB               	movwf	??___fladd+1
  7977  1286  30FF               	movlw	255
  7978  1287  00DC               	movwf	??___fladd+2
  7979  1288  30FF               	movlw	255
  7980  1289  00DD               	movwf	??___fladd+3
  7981  128A  0856               	movf	___fladd@a,w
  7982  128B  00DE               	movwf	??___fladd+4
  7983  128C  0857               	movf	___fladd@a+1,w
  7984  128D  00DF               	movwf	??___fladd+5
  7985  128E  0858               	movf	___fladd@a+2,w
  7986  128F  00E0               	movwf	??___fladd+6
  7987  1290  0859               	movf	___fladd@a+3,w
  7988  1291  00E1               	movwf	??___fladd+7
  7989  1292  0852               	movf	___fladd@b,w
  7990  1293  02DE               	subwf	??___fladd+4,f
  7991  1294  0853               	movf	___fladd@b+1,w
  7992  1295  1C03               	skipc
  7993  1296  0F53               	incfsz	___fladd@b+1,w
  7994  1297  2A99               	goto	u3731
  7995  1298  2A9A               	goto	u3732
  7996  1299                     u3731:	
  7997  1299  02DF               	subwf	??___fladd+5,f
  7998  129A                     u3732:	
  7999  129A  0854               	movf	___fladd@b+2,w
  8000  129B  1C03               	skipc
  8001  129C  0F54               	incfsz	___fladd@b+2,w
  8002  129D  2A9F               	goto	u3733
  8003  129E  2AA0               	goto	u3734
  8004  129F                     u3733:	
  8005  129F  02E0               	subwf	??___fladd+6,f
  8006  12A0                     u3734:	
  8007  12A0  0855               	movf	___fladd@b+3,w
  8008  12A1  1C03               	skipc
  8009  12A2  0F55               	incfsz	___fladd@b+3,w
  8010  12A3  2AA5               	goto	u3735
  8011  12A4  2AA6               	goto	u3736
  8012  12A5                     u3735:	
  8013  12A5  02E1               	subwf	??___fladd+7,f
  8014  12A6                     u3736:	
  8015  12A6  085E               	movf	??___fladd+4,w
  8016  12A7  07DA               	addwf	??___fladd,f
  8017  12A8  085F               	movf	??___fladd+5,w
  8018  12A9  1803               	skipnc
  8019  12AA  0F5F               	incfsz	??___fladd+5,w
  8020  12AB  2AAD               	goto	u3740
  8021  12AC  2AAE               	goto	u3741
  8022  12AD                     u3740:	
  8023  12AD  07DB               	addwf	??___fladd+1,f
  8024  12AE                     u3741:	
  8025  12AE  0860               	movf	??___fladd+6,w
  8026  12AF  1803               	skipnc
  8027  12B0  0F60               	incfsz	??___fladd+6,w
  8028  12B1  2AB3               	goto	u3742
  8029  12B2  2AB4               	goto	u3743
  8030  12B3                     u3742:	
  8031  12B3  07DC               	addwf	??___fladd+2,f
  8032  12B4                     u3743:	
  8033  12B4  0861               	movf	??___fladd+7,w
  8034  12B5  1803               	skipnc
  8035  12B6  0A61               	incf	??___fladd+7,w
  8036  12B7  07DD               	addwf	??___fladd+3,f
  8037  12B8  085D               	movf	??___fladd+3,w
  8038  12B9  00D5               	movwf	___fladd@b+3
  8039  12BA  085C               	movf	??___fladd+2,w
  8040  12BB  00D4               	movwf	___fladd@b+2
  8041  12BC  085B               	movf	??___fladd+1,w
  8042  12BD  00D3               	movwf	___fladd@b+1
  8043  12BE  085A               	movf	??___fladd,w
  8044  12BF  00D2               	movwf	___fladd@b
  8045  12C0  3080               	movlw	128
  8046  12C1  00DA               	movwf	??___fladd
  8047  12C2  085A               	movf	??___fladd,w
  8048  12C3  06E2               	xorwf	___fladd@signs,f
  8049  12C4  09E5               	comf	___fladd@grs,f
  8050  12C5  0AE5               	incf	___fladd@grs,f
  8051  12C6  0865               	movf	___fladd@grs,w
  8052  12C7  1D03               	btfss	3,2
  8053  12C8  2AE6               	goto	l749
  8054  12C9  3001               	movlw	1
  8055  12CA  07D2               	addwf	___fladd@b,f
  8056  12CB  3000               	movlw	0
  8057  12CC  1803               	skipnc
  8058  12CD  3001               	movlw	1
  8059  12CE  07D3               	addwf	___fladd@b+1,f
  8060  12CF  3000               	movlw	0
  8061  12D0  1803               	skipnc
  8062  12D1  3001               	movlw	1
  8063  12D2  07D4               	addwf	___fladd@b+2,f
  8064  12D3  3000               	movlw	0
  8065  12D4  1803               	skipnc
  8066  12D5  3001               	movlw	1
  8067  12D6  07D5               	addwf	___fladd@b+3,f
  8068  12D7  2AE6               	goto	l749
  8069  12D8                     l2840:	
  8070  12D8  0856               	movf	___fladd@a,w
  8071  12D9  02D2               	subwf	___fladd@b,f
  8072  12DA  0857               	movf	___fladd@a+1,w
  8073  12DB  1C03               	skipc
  8074  12DC  0F57               	incfsz	___fladd@a+1,w
  8075  12DD  02D3               	subwf	___fladd@b+1,f
  8076  12DE  0858               	movf	___fladd@a+2,w
  8077  12DF  1C03               	skipc
  8078  12E0  0F58               	incfsz	___fladd@a+2,w
  8079  12E1  02D4               	subwf	___fladd@b+2,f
  8080  12E2  0859               	movf	___fladd@a+3,w
  8081  12E3  1C03               	skipc
  8082  12E4  0F59               	incfsz	___fladd@a+3,w
  8083  12E5  02D5               	subwf	___fladd@b+3,f
  8084  12E6                     l749:	
  8085  12E6  0855               	movf	___fladd@b+3,w
  8086  12E7  0454               	iorwf	___fladd@b+2,w
  8087  12E8  0453               	iorwf	___fladd@b+1,w
  8088  12E9  0452               	iorwf	___fladd@b,w
  8089  12EA  1D03               	skipz
  8090  12EB  2B0E               	goto	l2862
  8091  12EC  0865               	movf	___fladd@grs,w
  8092  12ED  1D03               	btfss	3,2
  8093  12EE  2B0E               	goto	l2862
  8094  12EF  3000               	movlw	0
  8095  12F0  00D5               	movwf	?___fladd+3
  8096  12F1  3000               	movlw	0
  8097  12F2  00D4               	movwf	?___fladd+2
  8098  12F3  3000               	movlw	0
  8099  12F4  00D3               	movwf	?___fladd+1
  8100  12F5  3000               	movlw	0
  8101  12F6  00D2               	movwf	?___fladd
  8102  12F7  0008               	return
  8103  12F8                     l2848:	
  8104  12F8  3001               	movlw	1
  8105  12F9  00DA               	movwf	??___fladd
  8106  12FA                     u3785:	
  8107  12FA  1003               	clrc
  8108  12FB  0DD2               	rlf	___fladd@b,f
  8109  12FC  0DD3               	rlf	___fladd@b+1,f
  8110  12FD  0DD4               	rlf	___fladd@b+2,f
  8111  12FE  0DD5               	rlf	___fladd@b+3,f
  8112  12FF  0BDA               	decfsz	??___fladd,f
  8113  1300  2AFA               	goto	u3785
  8114  1301  1BE5               	btfsc	___fladd@grs,7
  8115  1302  1452               	bsf	___fladd@b,0
  8116  1303  1C65               	btfss	___fladd@grs,0
  8117  1304  2B07               	goto	l2856
  8118  1305  1403               	setc
  8119  1306  2B08               	goto	L23
  8120  1307                     l2856:	
  8121  1307  1003               	clrc
  8122  1308                     L23:	
  8123  1308  0DE5               	rlf	___fladd@grs,f
  8124  1309  0864               	movf	___fladd@bexp,w
  8125  130A  1903               	btfsc	3,2
  8126  130B  2B0E               	goto	l2862
  8127  130C  3001               	movlw	1
  8128  130D  02E4               	subwf	___fladd@bexp,f
  8129  130E                     l2862:	
  8130  130E  1FD4               	btfss	___fladd@b+2,7
  8131  130F  2AF8               	goto	l2848
  8132  1310                     l2864:	
  8133  1310  01E3               	clrf	___fladd@aexp
  8134  1311  1FE5               	btfss	___fladd@grs,7
  8135  1312  2B1B               	goto	l2874
  8136  1313  0865               	movf	___fladd@grs,w
  8137  1314  397F               	andlw	127
  8138  1315  1903               	btfsc	3,2
  8139  1316  1852               	btfsc	___fladd@b,0
  8140  1317  2B19               	goto	l2870
  8141  1318  2B1B               	goto	l2874
  8142  1319                     l2870:	
  8143  1319  01E3               	clrf	___fladd@aexp
  8144  131A  0AE3               	incf	___fladd@aexp,f
  8145  131B                     l2874:	
  8146  131B  0863               	movf	___fladd@aexp,w
  8147  131C  1903               	btfsc	3,2
  8148  131D  2B4E               	goto	l762
  8149  131E  3001               	movlw	1
  8150  131F  07D2               	addwf	___fladd@b,f
  8151  1320  3000               	movlw	0
  8152  1321  1803               	skipnc
  8153  1322  3001               	movlw	1
  8154  1323  07D3               	addwf	___fladd@b+1,f
  8155  1324  3000               	movlw	0
  8156  1325  1803               	skipnc
  8157  1326  3001               	movlw	1
  8158  1327  07D4               	addwf	___fladd@b+2,f
  8159  1328  3000               	movlw	0
  8160  1329  1803               	skipnc
  8161  132A  3001               	movlw	1
  8162  132B  07D5               	addwf	___fladd@b+3,f
  8163  132C  1C55               	btfss	___fladd@b+3,0
  8164  132D  2B4E               	goto	l762
  8165  132E  0852               	movf	___fladd@b,w
  8166  132F  00DA               	movwf	??___fladd
  8167  1330  0853               	movf	___fladd@b+1,w
  8168  1331  00DB               	movwf	??___fladd+1
  8169  1332  0854               	movf	___fladd@b+2,w
  8170  1333  00DC               	movwf	??___fladd+2
  8171  1334  0855               	movf	___fladd@b+3,w
  8172  1335  00DD               	movwf	??___fladd+3
  8173  1336  3001               	movlw	1
  8174  1337  00DE               	movwf	??___fladd+4
  8175  1338                     u3885:	
  8176  1338  0D5D               	rlf	??___fladd+3,w
  8177  1339  0CDD               	rrf	??___fladd+3,f
  8178  133A  0CDC               	rrf	??___fladd+2,f
  8179  133B  0CDB               	rrf	??___fladd+1,f
  8180  133C  0CDA               	rrf	??___fladd,f
  8181  133D  0BDE               	decfsz	??___fladd+4,f
  8182  133E  2B38               	goto	u3885
  8183  133F  085D               	movf	??___fladd+3,w
  8184  1340  00D5               	movwf	___fladd@b+3
  8185  1341  085C               	movf	??___fladd+2,w
  8186  1342  00D4               	movwf	___fladd@b+2
  8187  1343  085B               	movf	??___fladd+1,w
  8188  1344  00D3               	movwf	___fladd@b+1
  8189  1345  085A               	movf	??___fladd,w
  8190  1346  00D2               	movwf	___fladd@b
  8191  1347  0A64               	incf	___fladd@bexp,w
  8192  1348  1903               	btfsc	3,2
  8193  1349  2B4E               	goto	l762
  8194  134A  3001               	movlw	1
  8195  134B  00DA               	movwf	??___fladd
  8196  134C  085A               	movf	??___fladd,w
  8197  134D  07E4               	addwf	___fladd@bexp,f
  8198  134E                     l762:	
  8199  134E  0A64               	incf	___fladd@bexp,w
  8200  134F  1D03               	btfss	3,2
  8201  1350  0864               	movf	___fladd@bexp,w
  8202  1351  1D03               	btfss	3,2
  8203  1352  2B5E               	goto	l2892
  8204  1353  3000               	movlw	0
  8205  1354  00D5               	movwf	___fladd@b+3
  8206  1355  3000               	movlw	0
  8207  1356  00D4               	movwf	___fladd@b+2
  8208  1357  3000               	movlw	0
  8209  1358  00D3               	movwf	___fladd@b+1
  8210  1359  3000               	movlw	0
  8211  135A  00D2               	movwf	___fladd@b
  8212  135B  0864               	movf	___fladd@bexp,w
  8213  135C  1903               	btfsc	3,2
  8214  135D  01E2               	clrf	___fladd@signs
  8215  135E                     l2892:	
  8216  135E  1C64               	btfss	___fladd@bexp,0
  8217  135F  2B62               	goto	l2896
  8218  1360  17D4               	bsf	___fladd@b+2,7
  8219  1361  2B66               	goto	l770
  8220  1362                     l2896:	
  8221  1362  307F               	movlw	127
  8222  1363  00DA               	movwf	??___fladd
  8223  1364  085A               	movf	??___fladd,w
  8224  1365  05D4               	andwf	___fladd@b+2,f
  8225  1366                     l770:	
  8226  1366  0864               	movf	___fladd@bexp,w
  8227  1367  00DA               	movwf	??___fladd
  8228  1368  1003               	clrc
  8229  1369  0C5A               	rrf	??___fladd,w
  8230  136A  00DB               	movwf	??___fladd+1
  8231  136B  085B               	movf	??___fladd+1,w
  8232  136C  00D5               	movwf	___fladd@b+3
  8233  136D  1FE2               	btfss	___fladd@signs,7
  8234  136E  0008               	return
  8235  136F  17D5               	bsf	___fladd@b+3,7
  8236  1370  0008               	return
  8237  1371                     __end_of___fladd:	
  8238                           
  8239                           	psect	text19
  8240  18E8                     __ptext19:	
  8241 ;; *************** function ___flneg *****************
  8242 ;; Defined at:
  8243 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  f1              4    0[COMMON] unsigned char 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  4    0[COMMON] unsigned char 
  8250 ;; Registers used:
  8251 ;;		wreg
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8257 ;;      Params:         4       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0
  8260 ;;      Totals:         4       0       0       0       0
  8261 ;;Total ram usage:        4 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		_sprintf
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           
  8271                           ;psect for function ___flneg
  8272  18E8                     ___flneg:	
  8273                           
  8274                           ;incstack = 0
  8275                           ; Regs used in ___flneg: [wreg]
  8276  18E8  0873               	movf	___flneg@f1+3,w
  8277  18E9  0472               	iorwf	___flneg@f1+2,w
  8278  18EA  0471               	iorwf	___flneg@f1+1,w
  8279  18EB  0470               	iorwf	___flneg@f1,w
  8280  18EC  1903               	skipnz
  8281  18ED  0008               	return
  8282  18EE  3080               	movlw	128
  8283  18EF  06F3               	xorwf	___flneg@f1+3,f
  8284  18F0  0008               	return
  8285  18F1                     __end_of___flneg:	
  8286                           
  8287                           	psect	text20
  8288  1D6C                     __ptext20:	
  8289 ;; *************** function ___flge *****************
  8290 ;; Defined at:
  8291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  ff1             4    0[COMMON] unsigned char 
  8294 ;;  ff2             4    4[COMMON] unsigned char 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;		None               void
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8306 ;;      Params:         8       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0
  8308 ;;      Temps:          4       0       0       0       0
  8309 ;;      Totals:        12       0       0       0       0
  8310 ;;Total ram usage:       12 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_sprintf
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function ___flge
  8321  1D6C                     ___flge:	
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8325  1D6C  3000               	movlw	0
  8326  1D6D  0570               	andwf	___flge@ff1,w
  8327  1D6E  00F8               	movwf	??___flge
  8328  1D6F  3000               	movlw	0
  8329  1D70  0571               	andwf	___flge@ff1+1,w
  8330  1D71  00F9               	movwf	??___flge+1
  8331  1D72  3080               	movlw	128
  8332  1D73  0572               	andwf	___flge@ff1+2,w
  8333  1D74  00FA               	movwf	??___flge+2
  8334  1D75  307F               	movlw	127
  8335  1D76  0573               	andwf	___flge@ff1+3,w
  8336  1D77  00FB               	movwf	??___flge+3
  8337  1D78  087B               	movf	??___flge+3,w
  8338  1D79  047A               	iorwf	??___flge+2,w
  8339  1D7A  0479               	iorwf	??___flge+1,w
  8340  1D7B  0478               	iorwf	??___flge,w
  8341  1D7C  1D03               	skipz
  8342  1D7D  2D86               	goto	l592
  8343  1D7E  3000               	movlw	0
  8344  1D7F  00F3               	movwf	___flge@ff1+3
  8345  1D80  3000               	movlw	0
  8346  1D81  00F2               	movwf	___flge@ff1+2
  8347  1D82  3000               	movlw	0
  8348  1D83  00F1               	movwf	___flge@ff1+1
  8349  1D84  3000               	movlw	0
  8350  1D85  00F0               	movwf	___flge@ff1
  8351  1D86                     l592:	
  8352  1D86  3000               	movlw	0
  8353  1D87  0574               	andwf	___flge@ff2,w
  8354  1D88  00F8               	movwf	??___flge
  8355  1D89  3000               	movlw	0
  8356  1D8A  0575               	andwf	___flge@ff2+1,w
  8357  1D8B  00F9               	movwf	??___flge+1
  8358  1D8C  3080               	movlw	128
  8359  1D8D  0576               	andwf	___flge@ff2+2,w
  8360  1D8E  00FA               	movwf	??___flge+2
  8361  1D8F  307F               	movlw	127
  8362  1D90  0577               	andwf	___flge@ff2+3,w
  8363  1D91  00FB               	movwf	??___flge+3
  8364  1D92  087B               	movf	??___flge+3,w
  8365  1D93  047A               	iorwf	??___flge+2,w
  8366  1D94  0479               	iorwf	??___flge+1,w
  8367  1D95  0478               	iorwf	??___flge,w
  8368  1D96  1D03               	skipz
  8369  1D97  2DA0               	goto	l3292
  8370  1D98  3000               	movlw	0
  8371  1D99  00F7               	movwf	___flge@ff2+3
  8372  1D9A  3000               	movlw	0
  8373  1D9B  00F6               	movwf	___flge@ff2+2
  8374  1D9C  3000               	movlw	0
  8375  1D9D  00F5               	movwf	___flge@ff2+1
  8376  1D9E  3000               	movlw	0
  8377  1D9F  00F4               	movwf	___flge@ff2
  8378  1DA0                     l3292:	
  8379  1DA0  1FF3               	btfss	___flge@ff1+3,7
  8380  1DA1  2DC6               	goto	l3296
  8381  1DA2  3000               	movlw	0
  8382  1DA3  00F8               	movwf	??___flge
  8383  1DA4  3000               	movlw	0
  8384  1DA5  00F9               	movwf	??___flge+1
  8385  1DA6  3000               	movlw	0
  8386  1DA7  00FA               	movwf	??___flge+2
  8387  1DA8  3080               	movlw	128
  8388  1DA9  00FB               	movwf	??___flge+3
  8389  1DAA  0870               	movf	___flge@ff1,w
  8390  1DAB  02F8               	subwf	??___flge,f
  8391  1DAC  0871               	movf	___flge@ff1+1,w
  8392  1DAD  1C03               	skipc
  8393  1DAE  0F71               	incfsz	___flge@ff1+1,w
  8394  1DAF  2DB1               	goto	u5041
  8395  1DB0  2DB2               	goto	u5042
  8396  1DB1                     u5041:	
  8397  1DB1  02F9               	subwf	??___flge+1,f
  8398  1DB2                     u5042:	
  8399  1DB2  0872               	movf	___flge@ff1+2,w
  8400  1DB3  1C03               	skipc
  8401  1DB4  0F72               	incfsz	___flge@ff1+2,w
  8402  1DB5  2DB7               	goto	u5043
  8403  1DB6  2DB8               	goto	u5044
  8404  1DB7                     u5043:	
  8405  1DB7  02FA               	subwf	??___flge+2,f
  8406  1DB8                     u5044:	
  8407  1DB8  0873               	movf	___flge@ff1+3,w
  8408  1DB9  1C03               	skipc
  8409  1DBA  0F73               	incfsz	___flge@ff1+3,w
  8410  1DBB  2DBD               	goto	u5045
  8411  1DBC  2DBE               	goto	u5046
  8412  1DBD                     u5045:	
  8413  1DBD  02FB               	subwf	??___flge+3,f
  8414  1DBE                     u5046:	
  8415  1DBE  087B               	movf	??___flge+3,w
  8416  1DBF  00F3               	movwf	___flge@ff1+3
  8417  1DC0  087A               	movf	??___flge+2,w
  8418  1DC1  00F2               	movwf	___flge@ff1+2
  8419  1DC2  0879               	movf	??___flge+1,w
  8420  1DC3  00F1               	movwf	___flge@ff1+1
  8421  1DC4  0878               	movf	??___flge,w
  8422  1DC5  00F0               	movwf	___flge@ff1
  8423  1DC6                     l3296:	
  8424  1DC6  1FF7               	btfss	___flge@ff2+3,7
  8425  1DC7  2DEC               	goto	l595
  8426  1DC8  3000               	movlw	0
  8427  1DC9  00F8               	movwf	??___flge
  8428  1DCA  3000               	movlw	0
  8429  1DCB  00F9               	movwf	??___flge+1
  8430  1DCC  3000               	movlw	0
  8431  1DCD  00FA               	movwf	??___flge+2
  8432  1DCE  3080               	movlw	128
  8433  1DCF  00FB               	movwf	??___flge+3
  8434  1DD0  0874               	movf	___flge@ff2,w
  8435  1DD1  02F8               	subwf	??___flge,f
  8436  1DD2  0875               	movf	___flge@ff2+1,w
  8437  1DD3  1C03               	skipc
  8438  1DD4  0F75               	incfsz	___flge@ff2+1,w
  8439  1DD5  2DD7               	goto	u5061
  8440  1DD6  2DD8               	goto	u5062
  8441  1DD7                     u5061:	
  8442  1DD7  02F9               	subwf	??___flge+1,f
  8443  1DD8                     u5062:	
  8444  1DD8  0876               	movf	___flge@ff2+2,w
  8445  1DD9  1C03               	skipc
  8446  1DDA  0F76               	incfsz	___flge@ff2+2,w
  8447  1DDB  2DDD               	goto	u5063
  8448  1DDC  2DDE               	goto	u5064
  8449  1DDD                     u5063:	
  8450  1DDD  02FA               	subwf	??___flge+2,f
  8451  1DDE                     u5064:	
  8452  1DDE  0877               	movf	___flge@ff2+3,w
  8453  1DDF  1C03               	skipc
  8454  1DE0  0F77               	incfsz	___flge@ff2+3,w
  8455  1DE1  2DE3               	goto	u5065
  8456  1DE2  2DE4               	goto	u5066
  8457  1DE3                     u5065:	
  8458  1DE3  02FB               	subwf	??___flge+3,f
  8459  1DE4                     u5066:	
  8460  1DE4  087B               	movf	??___flge+3,w
  8461  1DE5  00F7               	movwf	___flge@ff2+3
  8462  1DE6  087A               	movf	??___flge+2,w
  8463  1DE7  00F6               	movwf	___flge@ff2+2
  8464  1DE8  0879               	movf	??___flge+1,w
  8465  1DE9  00F5               	movwf	___flge@ff2+1
  8466  1DEA  0878               	movf	??___flge,w
  8467  1DEB  00F4               	movwf	___flge@ff2
  8468  1DEC                     l595:	
  8469  1DEC  3080               	movlw	128
  8470  1DED  06F3               	xorwf	___flge@ff1+3,f
  8471  1DEE  3080               	movlw	128
  8472  1DEF  06F7               	xorwf	___flge@ff2+3,f
  8473  1DF0  0877               	movf	___flge@ff2+3,w
  8474  1DF1  0273               	subwf	___flge@ff1+3,w
  8475  1DF2  1D03               	skipz
  8476  1DF3  0008               	return
  8477  1DF4  0876               	movf	___flge@ff2+2,w
  8478  1DF5  0272               	subwf	___flge@ff1+2,w
  8479  1DF6  1D03               	skipz
  8480  1DF7  0008               	return
  8481  1DF8  0875               	movf	___flge@ff2+1,w
  8482  1DF9  0271               	subwf	___flge@ff1+1,w
  8483  1DFA  1D03               	skipz
  8484  1DFB  0008               	return
  8485  1DFC  0874               	movf	___flge@ff2,w
  8486  1DFD  0270               	subwf	___flge@ff1,w
  8487  1DFE  0008               	return
  8488  1DFF                     __end_of___flge:	
  8489                           
  8490                           	psect	text21
  8491  1AD1                     __ptext21:	
  8492 ;; *************** function ___fleq *****************
  8493 ;; Defined at:
  8494 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  ff1             4    0[COMMON] unsigned char 
  8497 ;;  ff2             4    4[COMMON] unsigned char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;		None               void
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8509 ;;      Params:         8       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0
  8511 ;;      Temps:          4       0       0       0       0
  8512 ;;      Totals:        12       0       0       0       0
  8513 ;;Total ram usage:       12 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_sprintf
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function ___fleq
  8524  1AD1                     ___fleq:	
  8525                           
  8526                           ;incstack = 0
  8527                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8528  1AD1  3000               	movlw	0
  8529  1AD2  0570               	andwf	___fleq@ff1,w
  8530  1AD3  00F8               	movwf	??___fleq
  8531  1AD4  3000               	movlw	0
  8532  1AD5  0571               	andwf	___fleq@ff1+1,w
  8533  1AD6  00F9               	movwf	??___fleq+1
  8534  1AD7  3080               	movlw	128
  8535  1AD8  0572               	andwf	___fleq@ff1+2,w
  8536  1AD9  00FA               	movwf	??___fleq+2
  8537  1ADA  307F               	movlw	127
  8538  1ADB  0573               	andwf	___fleq@ff1+3,w
  8539  1ADC  00FB               	movwf	??___fleq+3
  8540  1ADD  087B               	movf	??___fleq+3,w
  8541  1ADE  047A               	iorwf	??___fleq+2,w
  8542  1ADF  0479               	iorwf	??___fleq+1,w
  8543  1AE0  0478               	iorwf	??___fleq,w
  8544  1AE1  1D03               	skipz
  8545  1AE2  2AEB               	goto	l587
  8546  1AE3  3000               	movlw	0
  8547  1AE4  00F3               	movwf	___fleq@ff1+3
  8548  1AE5  3000               	movlw	0
  8549  1AE6  00F2               	movwf	___fleq@ff1+2
  8550  1AE7  3000               	movlw	0
  8551  1AE8  00F1               	movwf	___fleq@ff1+1
  8552  1AE9  3000               	movlw	0
  8553  1AEA  00F0               	movwf	___fleq@ff1
  8554  1AEB                     l587:	
  8555  1AEB  3000               	movlw	0
  8556  1AEC  0574               	andwf	___fleq@ff2,w
  8557  1AED  00F8               	movwf	??___fleq
  8558  1AEE  3000               	movlw	0
  8559  1AEF  0575               	andwf	___fleq@ff2+1,w
  8560  1AF0  00F9               	movwf	??___fleq+1
  8561  1AF1  3080               	movlw	128
  8562  1AF2  0576               	andwf	___fleq@ff2+2,w
  8563  1AF3  00FA               	movwf	??___fleq+2
  8564  1AF4  307F               	movlw	127
  8565  1AF5  0577               	andwf	___fleq@ff2+3,w
  8566  1AF6  00FB               	movwf	??___fleq+3
  8567  1AF7  087B               	movf	??___fleq+3,w
  8568  1AF8  047A               	iorwf	??___fleq+2,w
  8569  1AF9  0479               	iorwf	??___fleq+1,w
  8570  1AFA  0478               	iorwf	??___fleq,w
  8571  1AFB  1D03               	skipz
  8572  1AFC  2B05               	goto	l588
  8573  1AFD  3000               	movlw	0
  8574  1AFE  00F7               	movwf	___fleq@ff2+3
  8575  1AFF  3000               	movlw	0
  8576  1B00  00F6               	movwf	___fleq@ff2+2
  8577  1B01  3000               	movlw	0
  8578  1B02  00F5               	movwf	___fleq@ff2+1
  8579  1B03  3000               	movlw	0
  8580  1B04  00F4               	movwf	___fleq@ff2
  8581  1B05                     l588:	
  8582  1B05  0877               	movf	___fleq@ff2+3,w
  8583  1B06  0673               	xorwf	___fleq@ff1+3,w
  8584  1B07  1D03               	skipz
  8585  1B08  2B13               	goto	u5005
  8586  1B09  0876               	movf	___fleq@ff2+2,w
  8587  1B0A  0672               	xorwf	___fleq@ff1+2,w
  8588  1B0B  1D03               	skipz
  8589  1B0C  2B13               	goto	u5005
  8590  1B0D  0875               	movf	___fleq@ff2+1,w
  8591  1B0E  0671               	xorwf	___fleq@ff1+1,w
  8592  1B0F  1D03               	skipz
  8593  1B10  2B13               	goto	u5005
  8594  1B11  0874               	movf	___fleq@ff2,w
  8595  1B12  0670               	xorwf	___fleq@ff1,w
  8596  1B13                     u5005:	
  8597  1B13  1903               	skipnz
  8598  1B14  2B17               	goto	l3282
  8599  1B15  1003               	clrc
  8600  1B16  0008               	return
  8601  1B17                     l3282:	
  8602  1B17  1403               	setc
  8603  1B18  0008               	return
  8604  1B19                     __end_of___fleq:	
  8605                           
  8606                           	psect	text22
  8607  1001                     __ptext22:	
  8608 ;; *************** function _mapear *****************
  8609 ;; Defined at:
  8610 ;;		line 264 in file "funciones0.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  valor           1    wreg     unsigned char 
  8613 ;;  limReal         1    6[COMMON] unsigned char 
  8614 ;;  limSup          1    7[COMMON] unsigned char 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  valor           1    0[BANK0 ] unsigned char 
  8617 ;;  resultado       6    1[BANK0 ] unsigned int [3]
  8618 ;;  dividendo       2    7[BANK0 ] unsigned int 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      PTR unsigned int 
  8621 ;; Registers used:
  8622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8628 ;;      Params:         2       0       0       0       0
  8629 ;;      Locals:         0       9       0       0       0
  8630 ;;      Temps:          4       0       0       0       0
  8631 ;;      Totals:         6       9       0       0       0
  8632 ;;Total ram usage:       15 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    1
  8635 ;; This function calls:
  8636 ;;		___wmul
  8637 ;; This function is called by:
  8638 ;;		_main
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           
  8643                           ;psect for function _mapear
  8644  1001                     _mapear:	
  8645                           
  8646                           ;incstack = 0
  8647                           ; Regs used in _mapear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8648                           ;mapear@valor stored from wreg
  8649  1001  1283               	bcf	3,5	;RP0=0, select bank0
  8650  1002  1303               	bcf	3,6	;RP1=0, select bank0
  8651  1003  00A0               	movwf	mapear@valor
  8652                           
  8653                           ;funciones0.c: 265:     uint16_t resultado[3] = {0,0,0};
  8654  1004  3021               	movlw	mapear@resultado& (0+255)
  8655  1005  0084               	movwf	4
  8656  1006  3006               	movlw	6
  8657  1007  00FF               	movwf	127
  8658  1008                     u5460:	
  8659  1008  1383               	bcf	3,7	;select IRP bank0
  8660  1009  0180               	clrf	0
  8661  100A  0A84               	incf	4,f
  8662  100B  0BFF               	decfsz	127,f
  8663  100C  2808               	goto	u5460
  8664                           
  8665                           ;funciones0.c: 266:     uint16_t dividendo = valor*limSup;
  8666  100D  0820               	movf	mapear@valor,w
  8667  100E  00F8               	movwf	??_mapear
  8668  100F  01F9               	clrf	??_mapear+1
  8669  1010  0878               	movf	??_mapear,w
  8670  1011  00F0               	movwf	___wmul@multiplier
  8671  1012  0879               	movf	??_mapear+1,w
  8672  1013  00F1               	movwf	___wmul@multiplier+1
  8673  1014  0877               	movf	mapear@limSup,w
  8674  1015  00FA               	movwf	??_mapear+2
  8675  1016  01FB               	clrf	??_mapear+3
  8676  1017  087A               	movf	??_mapear+2,w
  8677  1018  00F2               	movwf	___wmul@multiplicand
  8678  1019  087B               	movf	??_mapear+3,w
  8679  101A  00F3               	movwf	___wmul@multiplicand+1
  8680  101B  160A  158A  215E  160A  118A  	fcall	___wmul
  8681  1020  0871               	movf	?___wmul+1,w
  8682  1021  1283               	bcf	3,5	;RP0=0, select bank0
  8683  1022  1303               	bcf	3,6	;RP1=0, select bank0
  8684  1023  00A8               	movwf	mapear@dividendo+1
  8685  1024  0870               	movf	?___wmul,w
  8686  1025  00A7               	movwf	mapear@dividendo
  8687  1026                     l3516:	
  8688                           ;funciones0.c: 267:     while (limReal <= dividendo){
  8689                           
  8690                           
  8691                           ;funciones0.c: 267:     while (limReal <= dividendo){
  8692  1026  0876               	movf	mapear@limReal,w
  8693  1027  00F8               	movwf	??_mapear
  8694  1028  01F9               	clrf	??_mapear+1
  8695  1029  0879               	movf	??_mapear+1,w
  8696  102A  0228               	subwf	mapear@dividendo+1,w
  8697  102B  1D03               	skipz
  8698  102C  282F               	goto	u5475
  8699  102D  0878               	movf	??_mapear,w
  8700  102E  0227               	subwf	mapear@dividendo,w
  8701  102F                     u5475:	
  8702  102F  1C03               	btfss	3,0
  8703  1030  2841               	goto	l3518
  8704                           
  8705                           ;funciones0.c: 268:         resultado[0] = resultado[0] + 1;
  8706  1031  0821               	movf	mapear@resultado,w
  8707  1032  3E01               	addlw	1
  8708  1033  00A1               	movwf	mapear@resultado
  8709  1034  0822               	movf	mapear@resultado+1,w
  8710  1035  1803               	skipnc
  8711  1036  3E01               	addlw	1
  8712  1037  3E00               	addlw	0
  8713  1038  00A2               	movwf	mapear@resultado+1
  8714                           
  8715                           ;funciones0.c: 269:         dividendo = dividendo - limReal;
  8716  1039  0876               	movf	mapear@limReal,w
  8717  103A  0227               	subwf	mapear@dividendo,w
  8718  103B  00A7               	movwf	mapear@dividendo
  8719  103C  0828               	movf	mapear@dividendo+1,w
  8720  103D  1C03               	skipc
  8721  103E  0328               	decf	mapear@dividendo+1,w
  8722  103F  00A8               	movwf	mapear@dividendo+1
  8723  1040  2826               	goto	l3516
  8724  1041                     l3518:	
  8725                           
  8726                           ;funciones0.c: 271:     dividendo = dividendo *10;
  8727  1041  0828               	movf	mapear@dividendo+1,w
  8728  1042  00F1               	movwf	___wmul@multiplier+1
  8729  1043  0827               	movf	mapear@dividendo,w
  8730  1044  00F0               	movwf	___wmul@multiplier
  8731  1045  300A               	movlw	10
  8732  1046  00F2               	movwf	___wmul@multiplicand
  8733  1047  3000               	movlw	0
  8734  1048  00F3               	movwf	___wmul@multiplicand+1
  8735  1049  160A  158A  215E  160A  118A  	fcall	___wmul
  8736  104E  0871               	movf	?___wmul+1,w
  8737  104F  1283               	bcf	3,5	;RP0=0, select bank0
  8738  1050  1303               	bcf	3,6	;RP1=0, select bank0
  8739  1051  00A8               	movwf	mapear@dividendo+1
  8740  1052  0870               	movf	?___wmul,w
  8741  1053  00A7               	movwf	mapear@dividendo
  8742  1054                     l3522:	
  8743                           ;funciones0.c: 272:     while (limReal <= dividendo){
  8744                           
  8745                           
  8746                           ;funciones0.c: 272:     while (limReal <= dividendo){
  8747  1054  0876               	movf	mapear@limReal,w
  8748  1055  00F8               	movwf	??_mapear
  8749  1056  01F9               	clrf	??_mapear+1
  8750  1057  0879               	movf	??_mapear+1,w
  8751  1058  0228               	subwf	mapear@dividendo+1,w
  8752  1059  1D03               	skipz
  8753  105A  285D               	goto	u5485
  8754  105B  0878               	movf	??_mapear,w
  8755  105C  0227               	subwf	mapear@dividendo,w
  8756  105D                     u5485:	
  8757  105D  1C03               	btfss	3,0
  8758  105E  286F               	goto	l3524
  8759                           
  8760                           ;funciones0.c: 273:         resultado[1] = resultado[1] +1;
  8761  105F  0823               	movf	mapear@resultado+2,w
  8762  1060  3E01               	addlw	1
  8763  1061  00A3               	movwf	mapear@resultado+2
  8764  1062  0824               	movf	mapear@resultado+3,w
  8765  1063  1803               	skipnc
  8766  1064  3E01               	addlw	1
  8767  1065  3E00               	addlw	0
  8768  1066  00A4               	movwf	mapear@resultado+3
  8769                           
  8770                           ;funciones0.c: 274:         dividendo = dividendo - limReal;
  8771  1067  0876               	movf	mapear@limReal,w
  8772  1068  0227               	subwf	mapear@dividendo,w
  8773  1069  00A7               	movwf	mapear@dividendo
  8774  106A  0828               	movf	mapear@dividendo+1,w
  8775  106B  1C03               	skipc
  8776  106C  0328               	decf	mapear@dividendo+1,w
  8777  106D  00A8               	movwf	mapear@dividendo+1
  8778  106E  2854               	goto	l3522
  8779  106F                     l3524:	
  8780                           
  8781                           ;funciones0.c: 276:     dividendo = dividendo *10;
  8782  106F  0828               	movf	mapear@dividendo+1,w
  8783  1070  00F1               	movwf	___wmul@multiplier+1
  8784  1071  0827               	movf	mapear@dividendo,w
  8785  1072  00F0               	movwf	___wmul@multiplier
  8786  1073  300A               	movlw	10
  8787  1074  00F2               	movwf	___wmul@multiplicand
  8788  1075  3000               	movlw	0
  8789  1076  00F3               	movwf	___wmul@multiplicand+1
  8790  1077  160A  158A  215E  160A  118A  	fcall	___wmul
  8791  107C  0871               	movf	?___wmul+1,w
  8792  107D  1283               	bcf	3,5	;RP0=0, select bank0
  8793  107E  1303               	bcf	3,6	;RP1=0, select bank0
  8794  107F  00A8               	movwf	mapear@dividendo+1
  8795  1080  0870               	movf	?___wmul,w
  8796  1081  00A7               	movwf	mapear@dividendo
  8797  1082                     l3528:	
  8798                           ;funciones0.c: 277:     while (limReal <= dividendo){
  8799                           
  8800                           
  8801                           ;funciones0.c: 277:     while (limReal <= dividendo){
  8802  1082  0876               	movf	mapear@limReal,w
  8803  1083  00F8               	movwf	??_mapear
  8804  1084  01F9               	clrf	??_mapear+1
  8805  1085  0879               	movf	??_mapear+1,w
  8806  1086  0228               	subwf	mapear@dividendo+1,w
  8807  1087  1D03               	skipz
  8808  1088  288B               	goto	u5495
  8809  1089  0878               	movf	??_mapear,w
  8810  108A  0227               	subwf	mapear@dividendo,w
  8811  108B                     u5495:	
  8812  108B  1C03               	btfss	3,0
  8813  108C  289D               	goto	l3530
  8814                           
  8815                           ;funciones0.c: 278:         resultado[2] = resultado[2] +1;
  8816  108D  0825               	movf	mapear@resultado+4,w
  8817  108E  3E01               	addlw	1
  8818  108F  00A5               	movwf	mapear@resultado+4
  8819  1090  0826               	movf	mapear@resultado+5,w
  8820  1091  1803               	skipnc
  8821  1092  3E01               	addlw	1
  8822  1093  3E00               	addlw	0
  8823  1094  00A6               	movwf	mapear@resultado+5
  8824                           
  8825                           ;funciones0.c: 279:         dividendo = dividendo - limReal;
  8826  1095  0876               	movf	mapear@limReal,w
  8827  1096  0227               	subwf	mapear@dividendo,w
  8828  1097  00A7               	movwf	mapear@dividendo
  8829  1098  0828               	movf	mapear@dividendo+1,w
  8830  1099  1C03               	skipc
  8831  109A  0328               	decf	mapear@dividendo+1,w
  8832  109B  00A8               	movwf	mapear@dividendo+1
  8833  109C  2882               	goto	l3528
  8834  109D                     l3530:	
  8835                           
  8836                           ;funciones0.c: 282:     return resultado;
  8837  109D  3021               	movlw	(low (mapear@resultado| 0))& (0+255)
  8838  109E  0008               	return
  8839  109F                     __end_of_mapear:	
  8840                           
  8841                           	psect	text23
  8842  195E                     __ptext23:	
  8843 ;; *************** function ___wmul *****************
  8844 ;; Defined at:
  8845 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  multiplier      2    0[COMMON] unsigned int 
  8848 ;;  multiplicand    2    2[COMMON] unsigned int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  product         2    4[COMMON] unsigned int 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  2    0[COMMON] unsigned int 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8860 ;;      Params:         4       0       0       0       0
  8861 ;;      Locals:         2       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0
  8863 ;;      Totals:         6       0       0       0       0
  8864 ;;Total ram usage:        6 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_mapear
  8870 ;;		_sprintf
  8871 ;;		_uint_to_array
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           
  8876                           ;psect for function ___wmul
  8877  195E                     ___wmul:	
  8878                           
  8879                           ;incstack = 0
  8880                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8881  195E  01F4               	clrf	___wmul@product
  8882  195F  01F5               	clrf	___wmul@product+1
  8883  1960                     l3238:	
  8884  1960  1C70               	btfss	___wmul@multiplier,0
  8885  1961  2968               	goto	l401
  8886  1962  0872               	movf	___wmul@multiplicand,w
  8887  1963  07F4               	addwf	___wmul@product,f
  8888  1964  1803               	skipnc
  8889  1965  0AF5               	incf	___wmul@product+1,f
  8890  1966  0873               	movf	___wmul@multiplicand+1,w
  8891  1967  07F5               	addwf	___wmul@product+1,f
  8892  1968                     l401:	
  8893  1968  3001               	movlw	1
  8894  1969                     u4885:	
  8895  1969  1003               	clrc
  8896  196A  0DF2               	rlf	___wmul@multiplicand,f
  8897  196B  0DF3               	rlf	___wmul@multiplicand+1,f
  8898  196C  3EFF               	addlw	-1
  8899  196D  1D03               	skipz
  8900  196E  2969               	goto	u4885
  8901  196F  3001               	movlw	1
  8902  1970                     u4895:	
  8903  1970  1003               	clrc
  8904  1971  0CF1               	rrf	___wmul@multiplier+1,f
  8905  1972  0CF0               	rrf	___wmul@multiplier,f
  8906  1973  3EFF               	addlw	-1
  8907  1974  1D03               	skipz
  8908  1975  2970               	goto	u4895
  8909  1976  0870               	movf	___wmul@multiplier,w
  8910  1977  0471               	iorwf	___wmul@multiplier+1,w
  8911  1978  1D03               	btfss	3,2
  8912  1979  2960               	goto	l3238
  8913  197A  0875               	movf	___wmul@product+1,w
  8914  197B  00F1               	movwf	?___wmul+1
  8915  197C  0874               	movf	___wmul@product,w
  8916  197D  00F0               	movwf	?___wmul
  8917  197E  0008               	return
  8918  197F                     __end_of___wmul:	
  8919                           
  8920                           	psect	text24
  8921  190E                     __ptext24:	
  8922 ;; *************** function _config *****************
  8923 ;; Defined at:
  8924 ;;		line 107 in file "LAB_5_MASTER.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		status,2
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8938 ;;      Params:         0       0       0       0       0
  8939 ;;      Locals:         0       0       0       0       0
  8940 ;;      Temps:          0       0       0       0       0
  8941 ;;      Totals:         0       0       0       0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		_main
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           
  8952                           ;psect for function _config
  8953  190E                     _config:	
  8954                           
  8955                           ;LAB_5_MASTER.c: 109:     PORTB = 0x00;
  8956                           
  8957                           ;incstack = 0
  8958                           ; Regs used in _config: [status,2]
  8959  190E  1283               	bcf	3,5	;RP0=0, select bank0
  8960  190F  1303               	bcf	3,6	;RP1=0, select bank0
  8961  1910  0186               	clrf	6	;volatile
  8962                           
  8963                           ;LAB_5_MASTER.c: 110:     ANSELH = 0x00;
  8964  1911  1683               	bsf	3,5	;RP0=1, select bank3
  8965  1912  1703               	bsf	3,6	;RP1=1, select bank3
  8966  1913  0189               	clrf	9	;volatile
  8967                           
  8968                           ;LAB_5_MASTER.c: 111:     TRISB = 0x00;
  8969  1914  1683               	bsf	3,5	;RP0=1, select bank1
  8970  1915  1303               	bcf	3,6	;RP1=0, select bank1
  8971  1916  0186               	clrf	6	;volatile
  8972                           
  8973                           ;LAB_5_MASTER.c: 113:     PORTD = 0x00;
  8974  1917  1283               	bcf	3,5	;RP0=0, select bank0
  8975  1918  1303               	bcf	3,6	;RP1=0, select bank0
  8976  1919  0188               	clrf	8	;volatile
  8977                           
  8978                           ;LAB_5_MASTER.c: 114:     TRISD = 0x00;
  8979  191A  1683               	bsf	3,5	;RP0=1, select bank1
  8980  191B  1303               	bcf	3,6	;RP1=0, select bank1
  8981  191C  0188               	clrf	8	;volatile
  8982                           
  8983                           ;LAB_5_MASTER.c: 115:     PORTA = 0;
  8984  191D  1283               	bcf	3,5	;RP0=0, select bank0
  8985  191E  1303               	bcf	3,6	;RP1=0, select bank0
  8986  191F  0185               	clrf	5	;volatile
  8987                           
  8988                           ;LAB_5_MASTER.c: 116:     TRISA = 0;
  8989  1920  1683               	bsf	3,5	;RP0=1, select bank1
  8990  1921  1303               	bcf	3,6	;RP1=0, select bank1
  8991  1922  0185               	clrf	5	;volatile
  8992                           
  8993                           ;LAB_5_MASTER.c: 117:     ANSEL = 0;
  8994  1923  1683               	bsf	3,5	;RP0=1, select bank3
  8995  1924  1703               	bsf	3,6	;RP1=1, select bank3
  8996  1925  0188               	clrf	8	;volatile
  8997  1926  0008               	return
  8998  1927                     __end_of_config:	
  8999                           
  9000                           	psect	text25
  9001  15A5                     __ptext25:	
  9002 ;; *************** function ___fldiv *****************
  9003 ;; Defined at:
  9004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  a               4   70[BANK0 ] void 
  9007 ;;  b               4   74[BANK0 ] void 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  grs             4   12[BANK1 ] unsigned long 
  9010 ;;  rem             4    5[BANK1 ] unsigned long 
  9011 ;;  new_exp         2   10[BANK1 ] int 
  9012 ;;  aexp            1   17[BANK1 ] unsigned char 
  9013 ;;  bexp            1   16[BANK1 ] unsigned char 
  9014 ;;  sign            1    9[BANK1 ] unsigned char 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  4   70[BANK0 ] unsigned char 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0, btemp+1
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9024 ;;      Params:         0       8       0       0       0
  9025 ;;      Locals:         0       0      13       0       0
  9026 ;;      Temps:          0       0       5       0       0
  9027 ;;      Totals:         0       8      18       0       0
  9028 ;;Total ram usage:       26 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_main
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function ___fldiv
  9039  15A5                     ___fldiv:	
  9040                           
  9041                           ;incstack = 0
  9042                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9043  15A5  1283               	bcf	3,5	;RP0=0, select bank0
  9044  15A6  1303               	bcf	3,6	;RP1=0, select bank0
  9045  15A7  086D               	movf	___fldiv@b+3,w
  9046  15A8  3980               	andlw	128
  9047  15A9  1683               	bsf	3,5	;RP0=1, select bank1
  9048  15AA  1303               	bcf	3,6	;RP1=0, select bank1
  9049  15AB  00A0               	movwf	??___fldiv^(0+128)
  9050  15AC  0820               	movf	??___fldiv^(0+128),w
  9051  15AD  00A9               	movwf	___fldiv@sign^(0+128)
  9052  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  9053  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  9054  15B0  086D               	movf	___fldiv@b+3,w
  9055  15B1  1683               	bsf	3,5	;RP0=1, select bank1
  9056  15B2  1303               	bcf	3,6	;RP1=0, select bank1
  9057  15B3  00A0               	movwf	??___fldiv^(0+128)
  9058  15B4  0720               	addwf	??___fldiv^(0+128),w
  9059  15B5  00A1               	movwf	(??___fldiv+1)^(0+128)
  9060  15B6  0821               	movf	(??___fldiv+1)^(0+128),w
  9061  15B7  00B0               	movwf	___fldiv@bexp^(0+128)
  9062  15B8  1283               	bcf	3,5	;RP0=0, select bank0
  9063  15B9  1303               	bcf	3,6	;RP1=0, select bank0
  9064  15BA  1FEC               	btfss	___fldiv@b+2,7
  9065  15BB  2DBF               	goto	l3848
  9066  15BC  1683               	bsf	3,5	;RP0=1, select bank1
  9067  15BD  1303               	bcf	3,6	;RP1=0, select bank1
  9068  15BE  1430               	bsf	___fldiv@bexp^(0+128),0
  9069  15BF                     l3848:	
  9070  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  9071  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  9072  15C1  0830               	movf	___fldiv@bexp^(0+128),w
  9073  15C2  1903               	btfsc	3,2
  9074  15C3  2DD5               	goto	l3858
  9075  15C4  0A30               	incf	___fldiv@bexp^(0+128),w
  9076  15C5  1D03               	btfss	3,2
  9077  15C6  2DD1               	goto	l3854
  9078  15C7  3000               	movlw	0
  9079  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  9080  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  9081  15CA  00ED               	movwf	___fldiv@b+3
  9082  15CB  3000               	movlw	0
  9083  15CC  00EC               	movwf	___fldiv@b+2
  9084  15CD  3000               	movlw	0
  9085  15CE  00EB               	movwf	___fldiv@b+1
  9086  15CF  3000               	movlw	0
  9087  15D0  00EA               	movwf	___fldiv@b
  9088  15D1                     l3854:	
  9089  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  9090  15D2  17EC               	bsf	___fldiv@b+2,7
  9091  15D3  01ED               	clrf	___fldiv@b+3
  9092  15D4  2DDF               	goto	l3860
  9093  15D5                     l3858:	
  9094  15D5  3000               	movlw	0
  9095  15D6  1283               	bcf	3,5	;RP0=0, select bank0
  9096  15D7  1303               	bcf	3,6	;RP1=0, select bank0
  9097  15D8  00ED               	movwf	___fldiv@b+3
  9098  15D9  3000               	movlw	0
  9099  15DA  00EC               	movwf	___fldiv@b+2
  9100  15DB  3000               	movlw	0
  9101  15DC  00EB               	movwf	___fldiv@b+1
  9102  15DD  3000               	movlw	0
  9103  15DE  00EA               	movwf	___fldiv@b
  9104  15DF                     l3860:	
  9105  15DF  0869               	movf	___fldiv@a+3,w
  9106  15E0  3980               	andlw	128
  9107  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  9108  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  9109  15E3  00A0               	movwf	??___fldiv^(0+128)
  9110  15E4  0820               	movf	??___fldiv^(0+128),w
  9111  15E5  06A9               	xorwf	___fldiv@sign^(0+128),f
  9112  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  9113  15E7  1303               	bcf	3,6	;RP1=0, select bank0
  9114  15E8  0869               	movf	___fldiv@a+3,w
  9115  15E9  1683               	bsf	3,5	;RP0=1, select bank1
  9116  15EA  1303               	bcf	3,6	;RP1=0, select bank1
  9117  15EB  00A0               	movwf	??___fldiv^(0+128)
  9118  15EC  0720               	addwf	??___fldiv^(0+128),w
  9119  15ED  00A1               	movwf	(??___fldiv+1)^(0+128)
  9120  15EE  0821               	movf	(??___fldiv+1)^(0+128),w
  9121  15EF  00B1               	movwf	___fldiv@aexp^(0+128)
  9122  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  9123  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  9124  15F2  1FE8               	btfss	___fldiv@a+2,7
  9125  15F3  2DF7               	goto	l3868
  9126  15F4  1683               	bsf	3,5	;RP0=1, select bank1
  9127  15F5  1303               	bcf	3,6	;RP1=0, select bank1
  9128  15F6  1431               	bsf	___fldiv@aexp^(0+128),0
  9129  15F7                     l3868:	
  9130  15F7  1683               	bsf	3,5	;RP0=1, select bank1
  9131  15F8  1303               	bcf	3,6	;RP1=0, select bank1
  9132  15F9  0831               	movf	___fldiv@aexp^(0+128),w
  9133  15FA  1903               	btfsc	3,2
  9134  15FB  2E0D               	goto	l3878
  9135  15FC  0A31               	incf	___fldiv@aexp^(0+128),w
  9136  15FD  1D03               	btfss	3,2
  9137  15FE  2E09               	goto	l3874
  9138  15FF  3000               	movlw	0
  9139  1600  1283               	bcf	3,5	;RP0=0, select bank0
  9140  1601  1303               	bcf	3,6	;RP1=0, select bank0
  9141  1602  00E9               	movwf	___fldiv@a+3
  9142  1603  3000               	movlw	0
  9143  1604  00E8               	movwf	___fldiv@a+2
  9144  1605  3000               	movlw	0
  9145  1606  00E7               	movwf	___fldiv@a+1
  9146  1607  3000               	movlw	0
  9147  1608  00E6               	movwf	___fldiv@a
  9148  1609                     l3874:	
  9149  1609  1283               	bcf	3,5	;RP0=0, select bank0
  9150  160A  17E8               	bsf	___fldiv@a+2,7
  9151  160B  01E9               	clrf	___fldiv@a+3
  9152  160C  2E17               	goto	l784
  9153  160D                     l3878:	
  9154  160D  3000               	movlw	0
  9155  160E  1283               	bcf	3,5	;RP0=0, select bank0
  9156  160F  1303               	bcf	3,6	;RP1=0, select bank0
  9157  1610  00E9               	movwf	___fldiv@a+3
  9158  1611  3000               	movlw	0
  9159  1612  00E8               	movwf	___fldiv@a+2
  9160  1613  3000               	movlw	0
  9161  1614  00E7               	movwf	___fldiv@a+1
  9162  1615  3000               	movlw	0
  9163  1616  00E6               	movwf	___fldiv@a
  9164  1617                     l784:	
  9165  1617  0869               	movf	___fldiv@a+3,w
  9166  1618  0468               	iorwf	___fldiv@a+2,w
  9167  1619  0467               	iorwf	___fldiv@a+1,w
  9168  161A  0466               	iorwf	___fldiv@a,w
  9169  161B  1D03               	skipz
  9170  161C  2E3A               	goto	l3888
  9171  161D  3000               	movlw	0
  9172  161E  00ED               	movwf	___fldiv@b+3
  9173  161F  3000               	movlw	0
  9174  1620  00EC               	movwf	___fldiv@b+2
  9175  1621  3000               	movlw	0
  9176  1622  00EB               	movwf	___fldiv@b+1
  9177  1623  3000               	movlw	0
  9178  1624  00EA               	movwf	___fldiv@b
  9179  1625  3080               	movlw	128
  9180  1626  04EC               	iorwf	___fldiv@b+2,f
  9181  1627  307F               	movlw	127
  9182  1628  04ED               	iorwf	___fldiv@b+3,f
  9183  1629                     L25:	
  9184  1629  1683               	bsf	3,5	;RP0=1, select bank1
  9185  162A  1303               	bcf	3,6	;RP1=0, select bank1
  9186  162B  0829               	movf	___fldiv@sign^(0+128),w
  9187  162C  00A0               	movwf	??___fldiv^(0+128)
  9188  162D  0820               	movf	??___fldiv^(0+128),w
  9189  162E  1283               	bcf	3,5	;RP0=0, select bank0
  9190  162F  1303               	bcf	3,6	;RP1=0, select bank0
  9191  1630  04ED               	iorwf	___fldiv@b+3,f
  9192  1631  086D               	movf	___fldiv@b+3,w
  9193  1632  00E9               	movwf	?___fldiv+3
  9194  1633  086C               	movf	___fldiv@b+2,w
  9195  1634  00E8               	movwf	?___fldiv+2
  9196  1635  086B               	movf	___fldiv@b+1,w
  9197  1636  00E7               	movwf	?___fldiv+1
  9198  1637  086A               	movf	___fldiv@b,w
  9199  1638  00E6               	movwf	?___fldiv
  9200  1639  0008               	return
  9201  163A                     l3888:	
  9202  163A  1683               	bsf	3,5	;RP0=1, select bank1
  9203  163B  1303               	bcf	3,6	;RP1=0, select bank1
  9204  163C  0830               	movf	___fldiv@bexp^(0+128),w
  9205  163D  1D03               	btfss	3,2
  9206  163E  2E4A               	goto	l3894
  9207  163F  3000               	movlw	0
  9208  1640  1283               	bcf	3,5	;RP0=0, select bank0
  9209  1641  1303               	bcf	3,6	;RP1=0, select bank0
  9210  1642  00E9               	movwf	?___fldiv+3
  9211  1643  3000               	movlw	0
  9212  1644  00E8               	movwf	?___fldiv+2
  9213  1645  3000               	movlw	0
  9214  1646  00E7               	movwf	?___fldiv+1
  9215  1647  3000               	movlw	0
  9216  1648  00E6               	movwf	?___fldiv
  9217  1649  0008               	return
  9218  164A                     l3894:	
  9219  164A  0830               	movf	___fldiv@bexp^(0+128),w
  9220  164B  00A0               	movwf	??___fldiv^(0+128)
  9221  164C  01A1               	clrf	(??___fldiv^(0+128)+1)
  9222  164D  0821               	movf	(??___fldiv+1)^(0+128),w
  9223  164E  00A3               	movwf	((??___fldiv+2)^(0+128)+1)
  9224  164F  0831               	movf	___fldiv@aexp^(0+128),w
  9225  1650  0220               	subwf	??___fldiv^(0+128),w
  9226  1651  00A2               	movwf	(??___fldiv+2)^(0+128)
  9227  1652  1C03               	skipc
  9228  1653  03A3               	decf	((??___fldiv+2)^(0+128)+1),f
  9229  1654  0822               	movf	(??___fldiv+2)^(0+128),w
  9230  1655  3E7F               	addlw	127
  9231  1656  00AA               	movwf	___fldiv@new_exp^(0+128)
  9232  1657  0823               	movf	(??___fldiv+3)^(0+128),w
  9233  1658  1803               	skipnc
  9234  1659  3E01               	addlw	1
  9235  165A  3E00               	addlw	0
  9236  165B  00AB               	movwf	(___fldiv@new_exp+1)^(0+128)
  9237  165C  1283               	bcf	3,5	;RP0=0, select bank0
  9238  165D  1303               	bcf	3,6	;RP1=0, select bank0
  9239  165E  086D               	movf	___fldiv@b+3,w
  9240  165F  1683               	bsf	3,5	;RP0=1, select bank1
  9241  1660  1303               	bcf	3,6	;RP1=0, select bank1
  9242  1661  00A8               	movwf	(___fldiv@rem+3)^(0+128)
  9243  1662  1283               	bcf	3,5	;RP0=0, select bank0
  9244  1663  1303               	bcf	3,6	;RP1=0, select bank0
  9245  1664  086C               	movf	___fldiv@b+2,w
  9246  1665  1683               	bsf	3,5	;RP0=1, select bank1
  9247  1666  1303               	bcf	3,6	;RP1=0, select bank1
  9248  1667  00A7               	movwf	(___fldiv@rem+2)^(0+128)
  9249  1668  1283               	bcf	3,5	;RP0=0, select bank0
  9250  1669  1303               	bcf	3,6	;RP1=0, select bank0
  9251  166A  086B               	movf	___fldiv@b+1,w
  9252  166B  1683               	bsf	3,5	;RP0=1, select bank1
  9253  166C  1303               	bcf	3,6	;RP1=0, select bank1
  9254  166D  00A6               	movwf	(___fldiv@rem+1)^(0+128)
  9255  166E  1283               	bcf	3,5	;RP0=0, select bank0
  9256  166F  1303               	bcf	3,6	;RP1=0, select bank0
  9257  1670  086A               	movf	___fldiv@b,w
  9258  1671  1683               	bsf	3,5	;RP0=1, select bank1
  9259  1672  1303               	bcf	3,6	;RP1=0, select bank1
  9260  1673  00A5               	movwf	___fldiv@rem^(0+128)
  9261  1674  3000               	movlw	0
  9262  1675  1283               	bcf	3,5	;RP0=0, select bank0
  9263  1676  1303               	bcf	3,6	;RP1=0, select bank0
  9264  1677  00ED               	movwf	___fldiv@b+3
  9265  1678  3000               	movlw	0
  9266  1679  00EC               	movwf	___fldiv@b+2
  9267  167A  3000               	movlw	0
  9268  167B  00EB               	movwf	___fldiv@b+1
  9269  167C  3000               	movlw	0
  9270  167D  00EA               	movwf	___fldiv@b
  9271  167E  3000               	movlw	0
  9272  167F  1683               	bsf	3,5	;RP0=1, select bank1
  9273  1680  1303               	bcf	3,6	;RP1=0, select bank1
  9274  1681  00AF               	movwf	(___fldiv@grs+3)^(0+128)
  9275  1682  3000               	movlw	0
  9276  1683  00AE               	movwf	(___fldiv@grs+2)^(0+128)
  9277  1684  3000               	movlw	0
  9278  1685  00AD               	movwf	(___fldiv@grs+1)^(0+128)
  9279  1686  3000               	movlw	0
  9280  1687  00AC               	movwf	___fldiv@grs^(0+128)
  9281  1688  01B1               	clrf	___fldiv@aexp^(0+128)
  9282  1689                     l3922:	
  9283  1689  301A               	movlw	26
  9284  168A  0231               	subwf	___fldiv@aexp^(0+128),w
  9285  168B  1803               	btfsc	3,0
  9286  168C  2F04               	goto	l3924
  9287  168D  0831               	movf	___fldiv@aexp^(0+128),w
  9288  168E  1903               	btfsc	3,2
  9289  168F  2EB6               	goto	l3914
  9290  1690  3001               	movlw	1
  9291  1691  00A0               	movwf	??___fldiv^(0+128)
  9292  1692                     u6065:	
  9293  1692  1003               	clrc
  9294  1693  0DA5               	rlf	___fldiv@rem^(0+128),f
  9295  1694  0DA6               	rlf	(___fldiv@rem+1)^(0+128),f
  9296  1695  0DA7               	rlf	(___fldiv@rem+2)^(0+128),f
  9297  1696  0DA8               	rlf	(___fldiv@rem+3)^(0+128),f
  9298  1697  0BA0               	decfsz	??___fldiv^(0+128),f
  9299  1698  2E92               	goto	u6065
  9300  1699  3001               	movlw	1
  9301  169A  00A0               	movwf	??___fldiv^(0+128)
  9302  169B                     u6075:	
  9303  169B  1003               	clrc
  9304  169C  1283               	bcf	3,5	;RP0=0, select bank0
  9305  169D  1303               	bcf	3,6	;RP1=0, select bank0
  9306  169E  0DEA               	rlf	___fldiv@b,f
  9307  169F  0DEB               	rlf	___fldiv@b+1,f
  9308  16A0  0DEC               	rlf	___fldiv@b+2,f
  9309  16A1  0DED               	rlf	___fldiv@b+3,f
  9310  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  9311  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  9312  16A4  0BA0               	decfsz	??___fldiv^(0+128),f
  9313  16A5  2E9B               	goto	u6075
  9314  16A6  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  9315  16A7  2EAB               	goto	l3912
  9316  16A8  1283               	bcf	3,5	;RP0=0, select bank0
  9317  16A9  1303               	bcf	3,6	;RP1=0, select bank0
  9318  16AA  146A               	bsf	___fldiv@b,0
  9319  16AB                     l3912:	
  9320  16AB  3001               	movlw	1
  9321  16AC  1683               	bsf	3,5	;RP0=1, select bank1
  9322  16AD  1303               	bcf	3,6	;RP1=0, select bank1
  9323  16AE  00A0               	movwf	??___fldiv^(0+128)
  9324  16AF                     u6095:	
  9325  16AF  1003               	clrc
  9326  16B0  0DAC               	rlf	___fldiv@grs^(0+128),f
  9327  16B1  0DAD               	rlf	(___fldiv@grs+1)^(0+128),f
  9328  16B2  0DAE               	rlf	(___fldiv@grs+2)^(0+128),f
  9329  16B3  0DAF               	rlf	(___fldiv@grs+3)^(0+128),f
  9330  16B4  0BA0               	decfsz	??___fldiv^(0+128),f
  9331  16B5  2EAF               	goto	u6095
  9332  16B6                     l3914:	
  9333  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  9334  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  9335  16B8  0869               	movf	___fldiv@a+3,w
  9336  16B9  1683               	bsf	3,5	;RP0=1, select bank1
  9337  16BA  1303               	bcf	3,6	;RP1=0, select bank1
  9338  16BB  0228               	subwf	(___fldiv@rem+3)^(0+128),w
  9339  16BC  1D03               	skipz
  9340  16BD  2ED4               	goto	u6105
  9341  16BE  1283               	bcf	3,5	;RP0=0, select bank0
  9342  16BF  1303               	bcf	3,6	;RP1=0, select bank0
  9343  16C0  0868               	movf	___fldiv@a+2,w
  9344  16C1  1683               	bsf	3,5	;RP0=1, select bank1
  9345  16C2  1303               	bcf	3,6	;RP1=0, select bank1
  9346  16C3  0227               	subwf	(___fldiv@rem+2)^(0+128),w
  9347  16C4  1D03               	skipz
  9348  16C5  2ED4               	goto	u6105
  9349  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  9350  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  9351  16C8  0867               	movf	___fldiv@a+1,w
  9352  16C9  1683               	bsf	3,5	;RP0=1, select bank1
  9353  16CA  1303               	bcf	3,6	;RP1=0, select bank1
  9354  16CB  0226               	subwf	(___fldiv@rem+1)^(0+128),w
  9355  16CC  1D03               	skipz
  9356  16CD  2ED4               	goto	u6105
  9357  16CE  1283               	bcf	3,5	;RP0=0, select bank0
  9358  16CF  1303               	bcf	3,6	;RP1=0, select bank0
  9359  16D0  0866               	movf	___fldiv@a,w
  9360  16D1  1683               	bsf	3,5	;RP0=1, select bank1
  9361  16D2  1303               	bcf	3,6	;RP1=0, select bank1
  9362  16D3  0225               	subwf	___fldiv@rem^(0+128),w
  9363  16D4                     u6105:	
  9364  16D4  1C03               	skipc
  9365  16D5  2EFF               	goto	l3920
  9366  16D6  172F               	bsf	(___fldiv@grs^(0+128)+3),6
  9367  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  9368  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  9369  16D9  0866               	movf	___fldiv@a,w
  9370  16DA  1683               	bsf	3,5	;RP0=1, select bank1
  9371  16DB  1303               	bcf	3,6	;RP1=0, select bank1
  9372  16DC  02A5               	subwf	___fldiv@rem^(0+128),f
  9373  16DD  1283               	bcf	3,5	;RP0=0, select bank0
  9374  16DE  1303               	bcf	3,6	;RP1=0, select bank0
  9375  16DF  0867               	movf	___fldiv@a+1,w
  9376  16E0  1C03               	skipc
  9377  16E1  0F67               	incfsz	___fldiv@a+1,w
  9378  16E2  2EE4               	goto	u6115
  9379  16E3  2EE7               	goto	u6116
  9380  16E4                     u6115:	
  9381  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  9382  16E5  1303               	bcf	3,6	;RP1=0, select bank1
  9383  16E6  02A6               	subwf	(___fldiv@rem+1)^(0+128),f
  9384  16E7                     u6116:	
  9385  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  9386  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  9387  16E9  0868               	movf	___fldiv@a+2,w
  9388  16EA  1C03               	skipc
  9389  16EB  0F68               	incfsz	___fldiv@a+2,w
  9390  16EC  2EEE               	goto	u6117
  9391  16ED  2EF1               	goto	u6118
  9392  16EE                     u6117:	
  9393  16EE  1683               	bsf	3,5	;RP0=1, select bank1
  9394  16EF  1303               	bcf	3,6	;RP1=0, select bank1
  9395  16F0  02A7               	subwf	(___fldiv@rem+2)^(0+128),f
  9396  16F1                     u6118:	
  9397  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  9398  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  9399  16F3  0869               	movf	___fldiv@a+3,w
  9400  16F4  1C03               	skipc
  9401  16F5  0F69               	incfsz	___fldiv@a+3,w
  9402  16F6  2EF8               	goto	u6119
  9403  16F7  2EFB               	goto	u6110
  9404  16F8                     u6119:	
  9405  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  9406  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  9407  16FA  02A8               	subwf	(___fldiv@rem+3)^(0+128),f
  9408  16FB                     u6110:	
  9409  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  9410  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  9411  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  9412  16FE  1303               	bcf	3,6	;RP1=0, select bank1
  9413  16FF                     l3920:	
  9414  16FF  3001               	movlw	1
  9415  1700  00A0               	movwf	??___fldiv^(0+128)
  9416  1701  0820               	movf	??___fldiv^(0+128),w
  9417  1702  07B1               	addwf	___fldiv@aexp^(0+128),f
  9418  1703  2E89               	goto	l3922
  9419  1704                     l3924:	
  9420  1704  0828               	movf	(___fldiv@rem+3)^(0+128),w
  9421  1705  0427               	iorwf	(___fldiv@rem+2)^(0+128),w
  9422  1706  0426               	iorwf	(___fldiv@rem+1)^(0+128),w
  9423  1707  0425               	iorwf	___fldiv@rem^(0+128),w
  9424  1708  1D03               	btfss	3,2
  9425  1709  142C               	bsf	___fldiv@grs^(0+128),0
  9426  170A                     l3938:	
  9427  170A  1283               	bcf	3,5	;RP0=0, select bank0
  9428  170B  1303               	bcf	3,6	;RP1=0, select bank0
  9429  170C  1BEC               	btfsc	___fldiv@b+2,7
  9430  170D  2F34               	goto	l3940
  9431  170E  3001               	movlw	1
  9432  170F  1683               	bsf	3,5	;RP0=1, select bank1
  9433  1710  1303               	bcf	3,6	;RP1=0, select bank1
  9434  1711  00A0               	movwf	??___fldiv^(0+128)
  9435  1712                     u6145:	
  9436  1712  1003               	clrc
  9437  1713  1283               	bcf	3,5	;RP0=0, select bank0
  9438  1714  1303               	bcf	3,6	;RP1=0, select bank0
  9439  1715  0DEA               	rlf	___fldiv@b,f
  9440  1716  0DEB               	rlf	___fldiv@b+1,f
  9441  1717  0DEC               	rlf	___fldiv@b+2,f
  9442  1718  0DED               	rlf	___fldiv@b+3,f
  9443  1719  1683               	bsf	3,5	;RP0=1, select bank1
  9444  171A  1303               	bcf	3,6	;RP1=0, select bank1
  9445  171B  0BA0               	decfsz	??___fldiv^(0+128),f
  9446  171C  2F12               	goto	u6145
  9447  171D  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  9448  171E  2F22               	goto	l3934
  9449  171F  1283               	bcf	3,5	;RP0=0, select bank0
  9450  1720  1303               	bcf	3,6	;RP1=0, select bank0
  9451  1721  146A               	bsf	___fldiv@b,0
  9452  1722                     l3934:	
  9453  1722  3001               	movlw	1
  9454  1723  1683               	bsf	3,5	;RP0=1, select bank1
  9455  1724  1303               	bcf	3,6	;RP1=0, select bank1
  9456  1725  00A0               	movwf	??___fldiv^(0+128)
  9457  1726                     u6165:	
  9458  1726  1003               	clrc
  9459  1727  0DAC               	rlf	___fldiv@grs^(0+128),f
  9460  1728  0DAD               	rlf	(___fldiv@grs+1)^(0+128),f
  9461  1729  0DAE               	rlf	(___fldiv@grs+2)^(0+128),f
  9462  172A  0DAF               	rlf	(___fldiv@grs+3)^(0+128),f
  9463  172B  0BA0               	decfsz	??___fldiv^(0+128),f
  9464  172C  2F26               	goto	u6165
  9465  172D  30FF               	movlw	255
  9466  172E  07AA               	addwf	___fldiv@new_exp^(0+128),f
  9467  172F  1803               	skipnc
  9468  1730  0AAB               	incf	(___fldiv@new_exp+1)^(0+128),f
  9469  1731  30FF               	movlw	255
  9470  1732  07AB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  9471  1733  2F0A               	goto	l3938
  9472  1734                     l3940:	
  9473  1734  1683               	bsf	3,5	;RP0=1, select bank1
  9474  1735  1303               	bcf	3,6	;RP1=0, select bank1
  9475  1736  01B1               	clrf	___fldiv@aexp^(0+128)
  9476  1737  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  9477  1738  2F53               	goto	l3950
  9478  1739  30FF               	movlw	255
  9479  173A  052C               	andwf	___fldiv@grs^(0+128),w
  9480  173B  00A0               	movwf	??___fldiv^(0+128)
  9481  173C  30FF               	movlw	255
  9482  173D  052D               	andwf	(___fldiv@grs+1)^(0+128),w
  9483  173E  00A1               	movwf	(??___fldiv^(0+128)+1)
  9484  173F  30FF               	movlw	255
  9485  1740  052E               	andwf	(___fldiv@grs+2)^(0+128),w
  9486  1741  00A2               	movwf	(??___fldiv^(0+128)+2)
  9487  1742  307F               	movlw	127
  9488  1743  052F               	andwf	(___fldiv@grs+3)^(0+128),w
  9489  1744  00A3               	movwf	(??___fldiv^(0+128)+3)
  9490  1745  0823               	movf	(??___fldiv+3)^(0+128),w
  9491  1746  0422               	iorwf	(??___fldiv+2)^(0+128),w
  9492  1747  0421               	iorwf	(??___fldiv+1)^(0+128),w
  9493  1748  0420               	iorwf	??___fldiv^(0+128),w
  9494  1749  1D03               	btfss	3,2
  9495  174A  2F4F               	goto	l3946
  9496  174B  1283               	bcf	3,5	;RP0=0, select bank0
  9497  174C  1303               	bcf	3,6	;RP1=0, select bank0
  9498  174D  1C6A               	btfss	___fldiv@b,0
  9499  174E  2F53               	goto	l3950
  9500  174F                     l3946:	
  9501  174F  1683               	bsf	3,5	;RP0=1, select bank1
  9502  1750  1303               	bcf	3,6	;RP1=0, select bank1
  9503  1751  01B1               	clrf	___fldiv@aexp^(0+128)
  9504  1752  0AB1               	incf	___fldiv@aexp^(0+128),f
  9505  1753                     l3950:	
  9506  1753  1683               	bsf	3,5	;RP0=1, select bank1
  9507  1754  1303               	bcf	3,6	;RP1=0, select bank1
  9508  1755  0831               	movf	___fldiv@aexp^(0+128),w
  9509  1756  1903               	btfsc	3,2
  9510  1757  2FA7               	goto	l3960
  9511  1758  3001               	movlw	1
  9512  1759  1283               	bcf	3,5	;RP0=0, select bank0
  9513  175A  1303               	bcf	3,6	;RP1=0, select bank0
  9514  175B  07EA               	addwf	___fldiv@b,f
  9515  175C  3000               	movlw	0
  9516  175D  1803               	skipnc
  9517  175E  3001               	movlw	1
  9518  175F  07EB               	addwf	___fldiv@b+1,f
  9519  1760  3000               	movlw	0
  9520  1761  1803               	skipnc
  9521  1762  3001               	movlw	1
  9522  1763  07EC               	addwf	___fldiv@b+2,f
  9523  1764  3000               	movlw	0
  9524  1765  1803               	skipnc
  9525  1766  3001               	movlw	1
  9526  1767  07ED               	addwf	___fldiv@b+3,f
  9527  1768  1C6D               	btfss	___fldiv@b+3,0
  9528  1769  2FA7               	goto	l3960
  9529  176A  086A               	movf	___fldiv@b,w
  9530  176B  1683               	bsf	3,5	;RP0=1, select bank1
  9531  176C  1303               	bcf	3,6	;RP1=0, select bank1
  9532  176D  00A0               	movwf	??___fldiv^(0+128)
  9533  176E  1283               	bcf	3,5	;RP0=0, select bank0
  9534  176F  1303               	bcf	3,6	;RP1=0, select bank0
  9535  1770  086B               	movf	___fldiv@b+1,w
  9536  1771  1683               	bsf	3,5	;RP0=1, select bank1
  9537  1772  1303               	bcf	3,6	;RP1=0, select bank1
  9538  1773  00A1               	movwf	(??___fldiv^(0+128)+1)
  9539  1774  1283               	bcf	3,5	;RP0=0, select bank0
  9540  1775  1303               	bcf	3,6	;RP1=0, select bank0
  9541  1776  086C               	movf	___fldiv@b+2,w
  9542  1777  1683               	bsf	3,5	;RP0=1, select bank1
  9543  1778  1303               	bcf	3,6	;RP1=0, select bank1
  9544  1779  00A2               	movwf	(??___fldiv^(0+128)+2)
  9545  177A  1283               	bcf	3,5	;RP0=0, select bank0
  9546  177B  1303               	bcf	3,6	;RP1=0, select bank0
  9547  177C  086D               	movf	___fldiv@b+3,w
  9548  177D  1683               	bsf	3,5	;RP0=1, select bank1
  9549  177E  1303               	bcf	3,6	;RP1=0, select bank1
  9550  177F  00A3               	movwf	(??___fldiv^(0+128)+3)
  9551  1780  3001               	movlw	1
  9552  1781  00A4               	movwf	(??___fldiv+4)^(0+128)
  9553  1782                     u6235:	
  9554  1782  0D23               	rlf	(??___fldiv^(0+128)+3),w
  9555  1783  0CA3               	rrf	(??___fldiv^(0+128)+3),f
  9556  1784  0CA2               	rrf	(??___fldiv^(0+128)+2),f
  9557  1785  0CA1               	rrf	(??___fldiv^(0+128)+1),f
  9558  1786  0CA0               	rrf	??___fldiv^(0+128),f
  9559  1787  0BA4               	decfsz	(??___fldiv+4)^(0+128),f
  9560  1788  2F82               	goto	u6235
  9561  1789  0823               	movf	(??___fldiv+3)^(0+128),w
  9562  178A  1283               	bcf	3,5	;RP0=0, select bank0
  9563  178B  1303               	bcf	3,6	;RP1=0, select bank0
  9564  178C  00ED               	movwf	___fldiv@b+3
  9565  178D  1683               	bsf	3,5	;RP0=1, select bank1
  9566  178E  1303               	bcf	3,6	;RP1=0, select bank1
  9567  178F  0822               	movf	(??___fldiv+2)^(0+128),w
  9568  1790  1283               	bcf	3,5	;RP0=0, select bank0
  9569  1791  1303               	bcf	3,6	;RP1=0, select bank0
  9570  1792  00EC               	movwf	___fldiv@b+2
  9571  1793  1683               	bsf	3,5	;RP0=1, select bank1
  9572  1794  1303               	bcf	3,6	;RP1=0, select bank1
  9573  1795  0821               	movf	(??___fldiv+1)^(0+128),w
  9574  1796  1283               	bcf	3,5	;RP0=0, select bank0
  9575  1797  1303               	bcf	3,6	;RP1=0, select bank0
  9576  1798  00EB               	movwf	___fldiv@b+1
  9577  1799  1683               	bsf	3,5	;RP0=1, select bank1
  9578  179A  1303               	bcf	3,6	;RP1=0, select bank1
  9579  179B  0820               	movf	??___fldiv^(0+128),w
  9580  179C  1283               	bcf	3,5	;RP0=0, select bank0
  9581  179D  1303               	bcf	3,6	;RP1=0, select bank0
  9582  179E  00EA               	movwf	___fldiv@b
  9583  179F  3001               	movlw	1
  9584  17A0  1683               	bsf	3,5	;RP0=1, select bank1
  9585  17A1  1303               	bcf	3,6	;RP1=0, select bank1
  9586  17A2  07AA               	addwf	___fldiv@new_exp^(0+128),f
  9587  17A3  1803               	skipnc
  9588  17A4  0AAB               	incf	(___fldiv@new_exp+1)^(0+128),f
  9589  17A5  3000               	movlw	0
  9590  17A6  07AB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  9591  17A7                     l3960:	
  9592  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  9593  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  9594  17A9  082B               	movf	(___fldiv@new_exp+1)^(0+128),w
  9595  17AA  3A80               	xorlw	128
  9596  17AB  00FF               	movwf	127
  9597  17AC  3080               	movlw	128
  9598  17AD  027F               	subwf	127,w
  9599  17AE  1D03               	skipz
  9600  17AF  2FB2               	goto	u6245
  9601  17B0  30FF               	movlw	255
  9602  17B1  022A               	subwf	___fldiv@new_exp^(0+128),w
  9603  17B2                     u6245:	
  9604  17B2  1C03               	skipc
  9605  17B3  2FC4               	goto	l3964
  9606  17B4  30FF               	movlw	255
  9607  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  9608  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  9609  17B7  00AA               	movwf	___fldiv@new_exp^(0+128)
  9610  17B8  3000               	movlw	0
  9611  17B9  00AB               	movwf	(___fldiv@new_exp^(0+128)+1)
  9612  17BA  3000               	movlw	0
  9613  17BB  1283               	bcf	3,5	;RP0=0, select bank0
  9614  17BC  1303               	bcf	3,6	;RP1=0, select bank0
  9615  17BD  00ED               	movwf	___fldiv@b+3
  9616  17BE  3000               	movlw	0
  9617  17BF  00EC               	movwf	___fldiv@b+2
  9618  17C0  3000               	movlw	0
  9619  17C1  00EB               	movwf	___fldiv@b+1
  9620  17C2  3000               	movlw	0
  9621  17C3  00EA               	movwf	___fldiv@b
  9622  17C4                     l3964:	
  9623  17C4  1683               	bsf	3,5	;RP0=1, select bank1
  9624  17C5  1303               	bcf	3,6	;RP1=0, select bank1
  9625  17C6  082B               	movf	(___fldiv@new_exp+1)^(0+128),w
  9626  17C7  3A80               	xorlw	128
  9627  17C8  00FF               	movwf	127
  9628  17C9  3080               	movlw	128
  9629  17CA  027F               	subwf	127,w
  9630  17CB  1D03               	skipz
  9631  17CC  2FCF               	goto	u6255
  9632  17CD  3001               	movlw	1
  9633  17CE  022A               	subwf	___fldiv@new_exp^(0+128),w
  9634  17CF                     u6255:	
  9635  17CF  1803               	skipnc
  9636  17D0  2FE2               	goto	l806
  9637  17D1  1683               	bsf	3,5	;RP0=1, select bank1
  9638  17D2  1303               	bcf	3,6	;RP1=0, select bank1
  9639  17D3  01AA               	clrf	___fldiv@new_exp^(0+128)
  9640  17D4  01AB               	clrf	(___fldiv@new_exp+1)^(0+128)
  9641  17D5  3000               	movlw	0
  9642  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  9643  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  9644  17D8  00ED               	movwf	___fldiv@b+3
  9645  17D9  3000               	movlw	0
  9646  17DA  00EC               	movwf	___fldiv@b+2
  9647  17DB  3000               	movlw	0
  9648  17DC  00EB               	movwf	___fldiv@b+1
  9649  17DD  3000               	movlw	0
  9650  17DE  00EA               	movwf	___fldiv@b
  9651  17DF  1683               	bsf	3,5	;RP0=1, select bank1
  9652  17E0  1303               	bcf	3,6	;RP1=0, select bank1
  9653  17E1  01A9               	clrf	___fldiv@sign^(0+128)
  9654  17E2                     l806:	
  9655  17E2  1683               	bsf	3,5	;RP0=1, select bank1
  9656  17E3  1303               	bcf	3,6	;RP1=0, select bank1
  9657  17E4  082A               	movf	___fldiv@new_exp^(0+128),w
  9658  17E5  00A0               	movwf	??___fldiv^(0+128)
  9659  17E6  0820               	movf	??___fldiv^(0+128),w
  9660  17E7  00B0               	movwf	___fldiv@bexp^(0+128)
  9661  17E8  1C30               	btfss	___fldiv@bexp^(0+128),0
  9662  17E9  2FEE               	goto	l3976
  9663  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  9664  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  9665  17EC  17EC               	bsf	___fldiv@b+2,7
  9666  17ED  2FF4               	goto	l808
  9667  17EE                     l3976:	
  9668  17EE  307F               	movlw	127
  9669  17EF  00A0               	movwf	??___fldiv^(0+128)
  9670  17F0  0820               	movf	??___fldiv^(0+128),w
  9671  17F1  1283               	bcf	3,5	;RP0=0, select bank0
  9672  17F2  1303               	bcf	3,6	;RP1=0, select bank0
  9673  17F3  05EC               	andwf	___fldiv@b+2,f
  9674  17F4                     l808:	
  9675  17F4  1683               	bsf	3,5	;RP0=1, select bank1
  9676  17F5  1303               	bcf	3,6	;RP1=0, select bank1
  9677  17F6  0830               	movf	___fldiv@bexp^(0+128),w
  9678  17F7  00A0               	movwf	??___fldiv^(0+128)
  9679  17F8  1003               	clrc
  9680  17F9  0C20               	rrf	??___fldiv^(0+128),w
  9681  17FA  00A1               	movwf	(??___fldiv+1)^(0+128)
  9682  17FB  0821               	movf	(??___fldiv+1)^(0+128),w
  9683  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  9684  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  9685  17FE  00ED               	movwf	___fldiv@b+3
  9686  17FF  2E29               	goto	L25
  9687  1800                     __end_of___fldiv:	
  9688                           
  9689                           	psect	text26
  9690  1A94                     __ptext26:	
  9691 ;; *************** function _Lcd_Write_String *****************
  9692 ;; Defined at:
  9693 ;;		line 94 in file "funciones0.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  a               2    2[COMMON] PTR unsigned char 
  9696 ;;		 -> STR_6(2), print_lcd(16), STR_4(2), STR_3(2), 
  9697 ;;		 -> STR_2(3), STR_1(13), 
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;  n               2    7[COMMON] int 
  9700 ;; Return value:  Size  Location     Type
  9701 ;;                  1    wreg      void 
  9702 ;; Registers used:
  9703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9709 ;;      Params:         2       0       0       0       0
  9710 ;;      Locals:         2       0       0       0       0
  9711 ;;      Temps:          3       0       0       0       0
  9712 ;;      Totals:         7       0       0       0       0
  9713 ;;Total ram usage:        7 bytes
  9714 ;; Hardware stack levels used:    1
  9715 ;; Hardware stack levels required when called:    1
  9716 ;; This function calls:
  9717 ;;		_Lcd_Write_Char
  9718 ;; This function is called by:
  9719 ;;		_main
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           
  9724                           ;psect for function _Lcd_Write_String
  9725  1A94                     _Lcd_Write_String:	
  9726                           
  9727                           ;funciones0.c: 94: void Lcd_Write_String(char *a);funciones0.c: 95: {;funciones0.c: 96: 
      +                              int n;;funciones0.c: 97:     for(n = 0; a[n] != '\0'; n++){
  9728                           
  9729                           ;incstack = 0
  9730                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9731  1A94  01F7               	clrf	Lcd_Write_String@n
  9732  1A95  01F8               	clrf	Lcd_Write_String@n+1
  9733  1A96                     l3468:	
  9734  1A96  0877               	movf	Lcd_Write_String@n,w
  9735  1A97  0772               	addwf	Lcd_Write_String@a,w
  9736  1A98  00F5               	movwf	??_Lcd_Write_String+1
  9737  1A99  0873               	movf	Lcd_Write_String@a+1,w
  9738  1A9A  00F4               	movwf	??_Lcd_Write_String
  9739  1A9B  1803               	skipnc
  9740  1A9C  0AF4               	incf	??_Lcd_Write_String,f
  9741  1A9D  1BF7               	btfsc	Lcd_Write_String@n,7
  9742  1A9E  03F4               	decf	??_Lcd_Write_String,f
  9743  1A9F  0874               	movf	??_Lcd_Write_String,w
  9744  1AA0  00F6               	movwf	??_Lcd_Write_String+2
  9745  1AA1  0876               	movf	??_Lcd_Write_String+2,w
  9746  1AA2  1283               	bcf	3,5	;RP0=0, select bank0
  9747  1AA3  1303               	bcf	3,6	;RP1=0, select bank0
  9748  1AA4  00FF               	movwf	127
  9749  1AA5  0875               	movf	??_Lcd_Write_String+1,w
  9750  1AA6  0084               	movwf	4
  9751  1AA7  120A  118A  2003  160A  158A  	fcall	stringtab
  9752  1AAC  3A00               	xorlw	0
  9753  1AAD  1903               	btfsc	3,2
  9754  1AAE  0008               	return
  9755                           
  9756                           ;funciones0.c: 98:         Lcd_Write_Char(a[n]);
  9757  1AAF  0877               	movf	Lcd_Write_String@n,w
  9758  1AB0  0772               	addwf	Lcd_Write_String@a,w
  9759  1AB1  00F5               	movwf	??_Lcd_Write_String+1
  9760  1AB2  0873               	movf	Lcd_Write_String@a+1,w
  9761  1AB3  00F4               	movwf	??_Lcd_Write_String
  9762  1AB4  1803               	skipnc
  9763  1AB5  0AF4               	incf	??_Lcd_Write_String,f
  9764  1AB6  1BF7               	btfsc	Lcd_Write_String@n,7
  9765  1AB7  03F4               	decf	??_Lcd_Write_String,f
  9766  1AB8  0874               	movf	??_Lcd_Write_String,w
  9767  1AB9  00F6               	movwf	??_Lcd_Write_String+2
  9768  1ABA  0876               	movf	??_Lcd_Write_String+2,w
  9769  1ABB  1283               	bcf	3,5	;RP0=0, select bank0
  9770  1ABC  1303               	bcf	3,6	;RP1=0, select bank0
  9771  1ABD  00FF               	movwf	127
  9772  1ABE  0875               	movf	??_Lcd_Write_String+1,w
  9773  1ABF  0084               	movwf	4
  9774  1AC0  120A  118A  2003  160A  158A  	fcall	stringtab
  9775  1AC5  160A  158A  20FF  160A  158A  	fcall	_Lcd_Write_Char
  9776                           
  9777                           ;funciones0.c: 99:     }
  9778  1ACA  3001               	movlw	1
  9779  1ACB  07F7               	addwf	Lcd_Write_String@n,f
  9780  1ACC  1803               	skipnc
  9781  1ACD  0AF8               	incf	Lcd_Write_String@n+1,f
  9782  1ACE  3000               	movlw	0
  9783  1ACF  07F8               	addwf	Lcd_Write_String@n+1,f
  9784  1AD0  2A96               	goto	l3468
  9785  1AD1                     __end_of_Lcd_Write_String:	
  9786                           
  9787                           	psect	text27
  9788  18FF                     __ptext27:	
  9789 ;; *************** function _Lcd_Write_Char *****************
  9790 ;; Defined at:
  9791 ;;		line 84 in file "funciones0.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  a               1    wreg     unsigned char 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  a               1    1[COMMON] unsigned char 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		wreg
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9805 ;;      Params:         0       0       0       0       0
  9806 ;;      Locals:         1       0       0       0       0
  9807 ;;      Temps:          1       0       0       0       0
  9808 ;;      Totals:         2       0       0       0       0
  9809 ;;Total ram usage:        2 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		_main
  9815 ;;		_Lcd_Write_String
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           
  9820                           ;psect for function _Lcd_Write_Char
  9821  18FF                     _Lcd_Write_Char:	
  9822                           
  9823                           ;incstack = 0
  9824                           ; Regs used in _Lcd_Write_Char: [wreg]
  9825                           ;Lcd_Write_Char@a stored from wreg
  9826  18FF  00F1               	movwf	Lcd_Write_Char@a
  9827                           
  9828                           ;funciones0.c: 84: void Lcd_Write_Char(char a);funciones0.c: 85: {;funciones0.c: 86:    
      +                           PORTDbits.RD6 = 1;
  9829  1900  1283               	bcf	3,5	;RP0=0, select bank0
  9830  1901  1303               	bcf	3,6	;RP1=0, select bank0
  9831  1902  1708               	bsf	8,6	;volatile
  9832                           
  9833                           ;funciones0.c: 88:     PORTB = a;
  9834  1903  0871               	movf	Lcd_Write_Char@a,w
  9835  1904  0086               	movwf	6	;volatile
  9836                           
  9837                           ;funciones0.c: 89:     PORTDbits.RD7 = 1;
  9838  1905  1788               	bsf	8,7	;volatile
  9839                           
  9840                           ;funciones0.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9841  1906  300D               	movlw	13
  9842  1907  00F0               	movwf	??_Lcd_Write_Char
  9843  1908                     u6327:	
  9844  1908  0BF0               	decfsz	??_Lcd_Write_Char,f
  9845  1909  2908               	goto	u6327
  9846                           
  9847                           ;funciones0.c: 91:     PORTDbits.RD7 = 0;
  9848  190A  1283               	bcf	3,5	;RP0=0, select bank0
  9849  190B  1303               	bcf	3,6	;RP1=0, select bank0
  9850  190C  1388               	bcf	8,7	;volatile
  9851  190D  0008               	return
  9852  190E                     __end_of_Lcd_Write_Char:	
  9853                           
  9854                           	psect	text28
  9855  1942                     __ptext28:	
  9856 ;; *************** function _Lcd_Set_Cursor *****************
  9857 ;; Defined at:
  9858 ;;		line 68 in file "funciones0.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  a               2    4[COMMON] int 
  9861 ;;  b               2    6[COMMON] int 
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;  d               2    8[COMMON] int 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0, pclath, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9873 ;;      Params:         4       0       0       0       0
  9874 ;;      Locals:         2       0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0
  9876 ;;      Totals:         6       0       0       0       0
  9877 ;;Total ram usage:        6 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    1
  9880 ;; This function calls:
  9881 ;;		_Lcd_Cmd
  9882 ;; This function is called by:
  9883 ;;		_main
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           
  9888                           ;psect for function _Lcd_Set_Cursor
  9889  1942                     _Lcd_Set_Cursor:	
  9890                           
  9891                           ;funciones0.c: 68: void Lcd_Set_Cursor(int a, int b);funciones0.c: 69: {;funciones0.c: 7
      +                          0:  int d;;funciones0.c: 71:  if(a == 1)
  9892                           
  9893                           ;incstack = 0
  9894                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9895  1942  0374               	decf	Lcd_Set_Cursor@a,w
  9896  1943  0475               	iorwf	Lcd_Set_Cursor@a+1,w
  9897  1944  1D03               	btfss	3,2
  9898  1945  2956               	goto	l3456
  9899                           
  9900                           ;funciones0.c: 72:  {;funciones0.c: 73:         d = 0x80 + b - 1;
  9901  1946  0876               	movf	Lcd_Set_Cursor@b,w
  9902  1947  3E7F               	addlw	127
  9903  1948                     L26:	
  9904  1948  00F8               	movwf	Lcd_Set_Cursor@d
  9905  1949  0877               	movf	Lcd_Set_Cursor@b+1,w
  9906  194A  1803               	skipnc
  9907  194B  3E01               	addlw	1
  9908  194C  3E00               	addlw	0
  9909  194D  00F9               	movwf	Lcd_Set_Cursor@d+1
  9910                           
  9911                           ;funciones0.c: 74:   Lcd_Cmd(d);
  9912  194E  0879               	movf	Lcd_Set_Cursor@d+1,w
  9913  194F  00F1               	movwf	Lcd_Cmd@a+1
  9914  1950  0878               	movf	Lcd_Set_Cursor@d,w
  9915  1951  00F0               	movwf	Lcd_Cmd@a
  9916  1952  120A  118A  20C1   	fcall	_Lcd_Cmd
  9917                           
  9918                           ;funciones0.c: 75:  }
  9919  1955  0008               	return
  9920  1956                     l3456:	
  9921  1956  3002               	movlw	2
  9922  1957  0674               	xorwf	Lcd_Set_Cursor@a,w
  9923  1958  0475               	iorwf	Lcd_Set_Cursor@a+1,w
  9924  1959  1D03               	btfss	3,2
  9925  195A  0008               	return
  9926                           
  9927                           ;funciones0.c: 77:  {;funciones0.c: 78:   d = 0xC0 + b - 1;
  9928  195B  0876               	movf	Lcd_Set_Cursor@b,w
  9929  195C  3EBF               	addlw	191
  9930  195D  2948               	goto	L26
  9931  195E                     __end_of_Lcd_Set_Cursor:	
  9932                           
  9933                           	psect	text29
  9934  1CED                     __ptext29:	
  9935 ;; *************** function _Lcd_Init *****************
  9936 ;; Defined at:
  9937 ;;		line 30 in file "funciones0.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;		None
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;		None
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg, status,2, status,0, pclath, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9951 ;;      Params:         0       0       0       0       0
  9952 ;;      Locals:         0       0       0       0       0
  9953 ;;      Temps:          2       0       0       0       0
  9954 ;;      Totals:         2       0       0       0       0
  9955 ;;Total ram usage:        2 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    1
  9958 ;; This function calls:
  9959 ;;		_Lcd_Cmd
  9960 ;; This function is called by:
  9961 ;;		_main
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           
  9966                           ;psect for function _Lcd_Init
  9967  1CED                     _Lcd_Init:	
  9968                           
  9969                           ;funciones0.c: 31:     _delay((unsigned long)((20)*(4000000/4000.0)));
  9970                           
  9971                           ;incstack = 0
  9972                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9973  1CED  301A               	movlw	26
  9974  1CEE  00F5               	movwf	??_Lcd_Init+1
  9975  1CEF  30F8               	movlw	248
  9976  1CF0  00F4               	movwf	??_Lcd_Init
  9977  1CF1                     u6337:	
  9978  1CF1  0BF4               	decfsz	??_Lcd_Init,f
  9979  1CF2  2CF1               	goto	u6337
  9980  1CF3  0BF5               	decfsz	??_Lcd_Init+1,f
  9981  1CF4  2CF1               	goto	u6337
  9982  1CF5  0000               	nop
  9983                           
  9984                           ;funciones0.c: 32:     Lcd_Cmd(0x30);
  9985  1CF6  3030               	movlw	48
  9986  1CF7  00F0               	movwf	Lcd_Cmd@a
  9987  1CF8  3000               	movlw	0
  9988  1CF9  00F1               	movwf	Lcd_Cmd@a+1
  9989  1CFA  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
  9990                           
  9991                           ;funciones0.c: 33:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9992  1CFF  3007               	movlw	7
  9993  1D00  00F5               	movwf	??_Lcd_Init+1
  9994  1D01  307D               	movlw	125
  9995  1D02  00F4               	movwf	??_Lcd_Init
  9996  1D03                     u6347:	
  9997  1D03  0BF4               	decfsz	??_Lcd_Init,f
  9998  1D04  2D03               	goto	u6347
  9999  1D05  0BF5               	decfsz	??_Lcd_Init+1,f
 10000  1D06  2D03               	goto	u6347
 10001                           
 10002                           ;funciones0.c: 34:     Lcd_Cmd(0x30);
 10003  1D07  3030               	movlw	48
 10004  1D08  00F0               	movwf	Lcd_Cmd@a
 10005  1D09  3000               	movlw	0
 10006  1D0A  00F1               	movwf	Lcd_Cmd@a+1
 10007  1D0B  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10008                           
 10009                           ;funciones0.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 10010  1D10  3021               	movlw	33
 10011  1D11  00F4               	movwf	??_Lcd_Init
 10012  1D12                     u6357:	
 10013  1D12  0BF4               	decfsz	??_Lcd_Init,f
 10014  1D13  2D12               	goto	u6357
 10015                           
 10016                           ;funciones0.c: 36:     Lcd_Cmd(0x30);
 10017  1D14  3030               	movlw	48
 10018  1D15  00F0               	movwf	Lcd_Cmd@a
 10019  1D16  3000               	movlw	0
 10020  1D17  00F1               	movwf	Lcd_Cmd@a+1
 10021  1D18  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10022                           
 10023                           ;funciones0.c: 37:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 10024  1D1D  3021               	movlw	33
 10025  1D1E  00F4               	movwf	??_Lcd_Init
 10026  1D1F                     u6367:	
 10027  1D1F  0BF4               	decfsz	??_Lcd_Init,f
 10028  1D20  2D1F               	goto	u6367
 10029                           
 10030                           ;funciones0.c: 38:     Lcd_Cmd(0x38);
 10031  1D21  3038               	movlw	56
 10032  1D22  00F0               	movwf	Lcd_Cmd@a
 10033  1D23  3000               	movlw	0
 10034  1D24  00F1               	movwf	Lcd_Cmd@a+1
 10035  1D25  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10036                           
 10037                           ;funciones0.c: 39:     _delay((unsigned long)((53)*(4000000/4000000.0)));
 10038  1D2A  3011               	movlw	17
 10039  1D2B  00F4               	movwf	??_Lcd_Init
 10040  1D2C                     u6377:	
 10041  1D2C  0BF4               	decfsz	??_Lcd_Init,f
 10042  1D2D  2D2C               	goto	u6377
 10043  1D2E  0000               	nop
 10044                           
 10045                           ;funciones0.c: 40:     Lcd_Cmd(0x08);
 10046  1D2F  3008               	movlw	8
 10047  1D30  00F0               	movwf	Lcd_Cmd@a
 10048  1D31  3000               	movlw	0
 10049  1D32  00F1               	movwf	Lcd_Cmd@a+1
 10050  1D33  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10051                           
 10052                           ;funciones0.c: 41:     _delay((unsigned long)((53)*(4000000/4000000.0)));
 10053  1D38  3011               	movlw	17
 10054  1D39  00F4               	movwf	??_Lcd_Init
 10055  1D3A                     u6387:	
 10056  1D3A  0BF4               	decfsz	??_Lcd_Init,f
 10057  1D3B  2D3A               	goto	u6387
 10058  1D3C  0000               	nop
 10059                           
 10060                           ;funciones0.c: 42:     Lcd_Cmd(0x01);
 10061  1D3D  3001               	movlw	1
 10062  1D3E  00F0               	movwf	Lcd_Cmd@a
 10063  1D3F  3000               	movlw	0
 10064  1D40  00F1               	movwf	Lcd_Cmd@a+1
 10065  1D41  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10066                           
 10067                           ;funciones0.c: 43:     _delay((unsigned long)((3)*(4000000/4000.0)));
 10068  1D46  3004               	movlw	4
 10069  1D47  00F5               	movwf	??_Lcd_Init+1
 10070  1D48  30E4               	movlw	228
 10071  1D49  00F4               	movwf	??_Lcd_Init
 10072  1D4A                     u6397:	
 10073  1D4A  0BF4               	decfsz	??_Lcd_Init,f
 10074  1D4B  2D4A               	goto	u6397
 10075  1D4C  0BF5               	decfsz	??_Lcd_Init+1,f
 10076  1D4D  2D4A               	goto	u6397
 10077  1D4E  0000               	nop
 10078                           
 10079                           ;funciones0.c: 44:     Lcd_Cmd(0x06);
 10080  1D4F  3006               	movlw	6
 10081  1D50  00F0               	movwf	Lcd_Cmd@a
 10082  1D51  3000               	movlw	0
 10083  1D52  00F1               	movwf	Lcd_Cmd@a+1
 10084  1D53  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10085                           
 10086                           ;funciones0.c: 45:     _delay((unsigned long)((53)*(4000000/4000000.0)));
 10087  1D58  3011               	movlw	17
 10088  1D59  00F4               	movwf	??_Lcd_Init
 10089  1D5A                     u6407:	
 10090  1D5A  0BF4               	decfsz	??_Lcd_Init,f
 10091  1D5B  2D5A               	goto	u6407
 10092  1D5C  0000               	nop
 10093                           
 10094                           ;funciones0.c: 46:     Lcd_Cmd(0x0C);
 10095  1D5D  300C               	movlw	12
 10096  1D5E  00F0               	movwf	Lcd_Cmd@a
 10097  1D5F  3000               	movlw	0
 10098  1D60  00F1               	movwf	Lcd_Cmd@a+1
 10099  1D61  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10100                           
 10101                           ;funciones0.c: 47:     _delay((unsigned long)((53)*(4000000/4000000.0)));
 10102  1D66  3011               	movlw	17
 10103  1D67  00F4               	movwf	??_Lcd_Init
 10104  1D68                     u6417:	
 10105  1D68  0BF4               	decfsz	??_Lcd_Init,f
 10106  1D69  2D68               	goto	u6417
 10107  1D6A  0000               	nop
 10108  1D6B  0008               	return
 10109  1D6C                     __end_of_Lcd_Init:	
 10110                           
 10111                           	psect	text30
 10112  1927                     __ptext30:	
 10113 ;; *************** function _Lcd_Clear *****************
 10114 ;; Defined at:
 10115 ;;		line 61 in file "funciones0.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2, status,0, pclath, cstack
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10129 ;;      Params:         0       0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0
 10131 ;;      Temps:          2       0       0       0       0
 10132 ;;      Totals:         2       0       0       0       0
 10133 ;;Total ram usage:        2 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:    1
 10136 ;; This function calls:
 10137 ;;		_Lcd_Cmd
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _Lcd_Clear
 10145  1927                     _Lcd_Clear:	
 10146                           
 10147                           ;funciones0.c: 63:     Lcd_Cmd(0x00);
 10148                           
 10149                           ;incstack = 0
 10150                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10151  1927  3000               	movlw	0
 10152  1928  00F0               	movwf	Lcd_Cmd@a
 10153  1929  00F1               	movwf	Lcd_Cmd@a+1
 10154  192A  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10155                           
 10156                           ;funciones0.c: 64:     Lcd_Cmd(0x01);
 10157  192F  3001               	movlw	1
 10158  1930  00F0               	movwf	Lcd_Cmd@a
 10159  1931  3000               	movlw	0
 10160  1932  00F1               	movwf	Lcd_Cmd@a+1
 10161  1933  120A  118A  20C1  160A  158A  	fcall	_Lcd_Cmd
 10162                           
 10163                           ;funciones0.c: 65:     _delay((unsigned long)((4)*(4000000/4000.0)));
 10164  1938  3006               	movlw	6
 10165  1939  00F5               	movwf	??_Lcd_Clear+1
 10166  193A  3030               	movlw	48
 10167  193B  00F4               	movwf	??_Lcd_Clear
 10168  193C                     u6427:	
 10169  193C  0BF4               	decfsz	??_Lcd_Clear,f
 10170  193D  293C               	goto	u6427
 10171  193E  0BF5               	decfsz	??_Lcd_Clear+1,f
 10172  193F  293C               	goto	u6427
 10173  1940  0000               	nop
 10174  1941  0008               	return
 10175  1942                     __end_of_Lcd_Clear:	
 10176                           
 10177                           	psect	text31
 10178  00C1                     __ptext31:	
 10179 ;; *************** function _Lcd_Cmd *****************
 10180 ;; Defined at:
 10181 ;;		line 50 in file "funciones0.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  a               2    0[COMMON] int 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10195 ;;      Params:         2       0       0       0       0
 10196 ;;      Locals:         0       0       0       0       0
 10197 ;;      Temps:          2       0       0       0       0
 10198 ;;      Totals:         4       0       0       0       0
 10199 ;;Total ram usage:        4 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_Lcd_Init
 10205 ;;		_Lcd_Clear
 10206 ;;		_Lcd_Set_Cursor
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _Lcd_Cmd
 10212  00C1                     _Lcd_Cmd:	
 10213                           
 10214                           ;funciones0.c: 51:  PORTDbits.RD6 = 0;
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _Lcd_Cmd: [wreg]
 10218  00C1  1283               	bcf	3,5	;RP0=0, select bank0
 10219  00C2  1303               	bcf	3,6	;RP1=0, select bank0
 10220  00C3  1308               	bcf	8,6	;volatile
 10221                           
 10222                           ;funciones0.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10223  00C4  3007               	movlw	7
 10224  00C5  00F3               	movwf	??_Lcd_Cmd+1
 10225  00C6  307D               	movlw	125
 10226  00C7  00F2               	movwf	??_Lcd_Cmd
 10227  00C8                     u6437:	
 10228  00C8  0BF2               	decfsz	??_Lcd_Cmd,f
 10229  00C9  28C8               	goto	u6437
 10230  00CA  0BF3               	decfsz	??_Lcd_Cmd+1,f
 10231  00CB  28C8               	goto	u6437
 10232                           
 10233                           ;funciones0.c: 53:     PORTDbits.RD7 = 1;
 10234  00CC  1283               	bcf	3,5	;RP0=0, select bank0
 10235  00CD  1303               	bcf	3,6	;RP1=0, select bank0
 10236  00CE  1788               	bsf	8,7	;volatile
 10237                           
 10238                           ;funciones0.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10239  00CF  3007               	movlw	7
 10240  00D0  00F3               	movwf	??_Lcd_Cmd+1
 10241  00D1  307D               	movlw	125
 10242  00D2  00F2               	movwf	??_Lcd_Cmd
 10243  00D3                     u6447:	
 10244  00D3  0BF2               	decfsz	??_Lcd_Cmd,f
 10245  00D4  28D3               	goto	u6447
 10246  00D5  0BF3               	decfsz	??_Lcd_Cmd+1,f
 10247  00D6  28D3               	goto	u6447
 10248                           
 10249                           ;funciones0.c: 55:  PORTB = a;
 10250  00D7  0870               	movf	Lcd_Cmd@a,w
 10251  00D8  1283               	bcf	3,5	;RP0=0, select bank0
 10252  00D9  1303               	bcf	3,6	;RP1=0, select bank0
 10253  00DA  0086               	movwf	6	;volatile
 10254                           
 10255                           ;funciones0.c: 56:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10256  00DB  3007               	movlw	7
 10257  00DC  00F3               	movwf	??_Lcd_Cmd+1
 10258  00DD  307D               	movlw	125
 10259  00DE  00F2               	movwf	??_Lcd_Cmd
 10260  00DF                     u6457:	
 10261  00DF  0BF2               	decfsz	??_Lcd_Cmd,f
 10262  00E0  28DF               	goto	u6457
 10263  00E1  0BF3               	decfsz	??_Lcd_Cmd+1,f
 10264  00E2  28DF               	goto	u6457
 10265                           
 10266                           ;funciones0.c: 57:     PORTDbits.RD7 = 0;
 10267  00E3  1283               	bcf	3,5	;RP0=0, select bank0
 10268  00E4  1303               	bcf	3,6	;RP1=0, select bank0
 10269  00E5  1388               	bcf	8,7	;volatile
 10270                           
 10271                           ;funciones0.c: 58:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10272  00E6  3007               	movlw	7
 10273  00E7  00F3               	movwf	??_Lcd_Cmd+1
 10274  00E8  307D               	movlw	125
 10275  00E9  00F2               	movwf	??_Lcd_Cmd
 10276  00EA                     u6467:	
 10277  00EA  0BF2               	decfsz	??_Lcd_Cmd,f
 10278  00EB  28EA               	goto	u6467
 10279  00EC  0BF3               	decfsz	??_Lcd_Cmd+1,f
 10280  00ED  28EA               	goto	u6467
 10281  00EE  0008               	return
 10282  00EF                     __end_of_Lcd_Cmd:	
 10283                           
 10284                           	psect	text32
 10285  18CF                     __ptext32:	
 10286 ;; *************** function _I2C_Master_Write *****************
 10287 ;; Defined at:
 10288 ;;		line 151 in file "funciones0.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  d               2    0[COMMON] unsigned int 
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;		None
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      void 
 10295 ;; Registers used:
 10296 ;;		wreg, status,2, status,0, pclath, cstack
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10302 ;;      Params:         2       0       0       0       0
 10303 ;;      Locals:         0       0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0
 10305 ;;      Totals:         2       0       0       0       0
 10306 ;;Total ram usage:        2 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; Hardware stack levels required when called:    1
 10309 ;; This function calls:
 10310 ;;		_I2C_Master_Wait
 10311 ;; This function is called by:
 10312 ;;		_main
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           
 10317                           ;psect for function _I2C_Master_Write
 10318  18CF                     _I2C_Master_Write:	
 10319                           
 10320                           ;funciones0.c: 151: void I2C_Master_Write(unsigned d);funciones0.c: 152: {;funciones0.c:
      +                           153:     I2C_Master_Wait();
 10321                           
 10322                           ;incstack = 0
 10323                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10324  18CF  160A  158A  20DF   	fcall	_I2C_Master_Wait
 10325                           
 10326                           ;funciones0.c: 154:     SSPBUF = d;
 10327  18D2  0870               	movf	I2C_Master_Write@d,w
 10328  18D3  1283               	bcf	3,5	;RP0=0, select bank0
 10329  18D4  1303               	bcf	3,6	;RP1=0, select bank0
 10330  18D5  0093               	movwf	19	;volatile
 10331  18D6  0008               	return
 10332  18D7                     __end_of_I2C_Master_Write:	
 10333                           
 10334                           	psect	text33
 10335  18C8                     __ptext33:	
 10336 ;; *************** function _I2C_Master_Stop *****************
 10337 ;; Defined at:
 10338 ;;		line 141 in file "funciones0.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;		None
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;		None
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  1    wreg      void 
 10345 ;; Registers used:
 10346 ;;		wreg, status,2, status,0, pclath, cstack
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10352 ;;      Params:         0       0       0       0       0
 10353 ;;      Locals:         0       0       0       0       0
 10354 ;;      Temps:          0       0       0       0       0
 10355 ;;      Totals:         0       0       0       0       0
 10356 ;;Total ram usage:        0 bytes
 10357 ;; Hardware stack levels used:    1
 10358 ;; Hardware stack levels required when called:    1
 10359 ;; This function calls:
 10360 ;;		_I2C_Master_Wait
 10361 ;; This function is called by:
 10362 ;;		_main
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           
 10367                           ;psect for function _I2C_Master_Stop
 10368  18C8                     _I2C_Master_Stop:	
 10369                           
 10370                           ;funciones0.c: 143:     I2C_Master_Wait();
 10371                           
 10372                           ;incstack = 0
 10373                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10374  18C8  160A  158A  20DF   	fcall	_I2C_Master_Wait
 10375                           
 10376                           ;funciones0.c: 144:     SSPCON2bits.PEN = 1;
 10377  18CB  1683               	bsf	3,5	;RP0=1, select bank1
 10378  18CC  1303               	bcf	3,6	;RP1=0, select bank1
 10379  18CD  1511               	bsf	17,2	;volatile
 10380  18CE  0008               	return
 10381  18CF                     __end_of_I2C_Master_Stop:	
 10382                           
 10383                           	psect	text34
 10384  18C1                     __ptext34:	
 10385 ;; *************** function _I2C_Master_Start *****************
 10386 ;; Defined at:
 10387 ;;		line 125 in file "funciones0.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;		None
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      void 
 10394 ;; Registers used:
 10395 ;;		wreg, status,2, status,0, pclath, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10401 ;;      Params:         0       0       0       0       0
 10402 ;;      Locals:         0       0       0       0       0
 10403 ;;      Temps:          0       0       0       0       0
 10404 ;;      Totals:         0       0       0       0       0
 10405 ;;Total ram usage:        0 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; Hardware stack levels required when called:    1
 10408 ;; This function calls:
 10409 ;;		_I2C_Master_Wait
 10410 ;; This function is called by:
 10411 ;;		_main
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           
 10416                           ;psect for function _I2C_Master_Start
 10417  18C1                     _I2C_Master_Start:	
 10418                           
 10419                           ;funciones0.c: 127:     I2C_Master_Wait();
 10420                           
 10421                           ;incstack = 0
 10422                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10423  18C1  160A  158A  20DF   	fcall	_I2C_Master_Wait
 10424                           
 10425                           ;funciones0.c: 128:     SSPCON2bits.SEN = 1;
 10426  18C4  1683               	bsf	3,5	;RP0=1, select bank1
 10427  18C5  1303               	bcf	3,6	;RP1=0, select bank1
 10428  18C6  1411               	bsf	17,0	;volatile
 10429  18C7  0008               	return
 10430  18C8                     __end_of_I2C_Master_Start:	
 10431                           
 10432                           	psect	text35
 10433  19C4                     __ptext35:	
 10434 ;; *************** function _I2C_Master_Read *****************
 10435 ;; Defined at:
 10436 ;;		line 160 in file "funciones0.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  a               2    0[COMMON] short 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;  temp            2    4[COMMON] unsigned short 
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  2    0[COMMON] short 
 10443 ;; Registers used:
 10444 ;;		wreg, status,2, status,0, pclath, cstack
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10450 ;;      Params:         2       0       0       0       0
 10451 ;;      Locals:         2       0       0       0       0
 10452 ;;      Temps:          2       0       0       0       0
 10453 ;;      Totals:         6       0       0       0       0
 10454 ;;Total ram usage:        6 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    1
 10457 ;; This function calls:
 10458 ;;		_I2C_Master_Wait
 10459 ;; This function is called by:
 10460 ;;		_main
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           
 10465                           ;psect for function _I2C_Master_Read
 10466  19C4                     _I2C_Master_Read:	
 10467                           
 10468                           ;funciones0.c: 160: short I2C_Master_Read(short a);funciones0.c: 161: {;funciones0.c: 16
      +                          2:     unsigned short temp;;funciones0.c: 163:     I2C_Master_Wait();
 10469                           
 10470                           ;incstack = 0
 10471                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10472  19C4  160A  158A  20DF  160A  158A  	fcall	_I2C_Master_Wait
 10473                           
 10474                           ;funciones0.c: 164:     SSPCON2bits.RCEN = 1;
 10475  19C9  1683               	bsf	3,5	;RP0=1, select bank1
 10476  19CA  1303               	bcf	3,6	;RP1=0, select bank1
 10477  19CB  1591               	bsf	17,3	;volatile
 10478                           
 10479                           ;funciones0.c: 165:     I2C_Master_Wait();
 10480  19CC  160A  158A  20DF  160A  158A  	fcall	_I2C_Master_Wait
 10481                           
 10482                           ;funciones0.c: 166:     temp = SSPBUF;
 10483  19D1  1283               	bcf	3,5	;RP0=0, select bank0
 10484  19D2  1303               	bcf	3,6	;RP1=0, select bank0
 10485  19D3  0813               	movf	19,w	;volatile
 10486  19D4  00F2               	movwf	??_I2C_Master_Read
 10487  19D5  01F3               	clrf	??_I2C_Master_Read+1
 10488  19D6  0872               	movf	??_I2C_Master_Read,w
 10489  19D7  00F4               	movwf	I2C_Master_Read@temp
 10490  19D8  0873               	movf	??_I2C_Master_Read+1,w
 10491  19D9  00F5               	movwf	I2C_Master_Read@temp+1
 10492                           
 10493                           ;funciones0.c: 167:     I2C_Master_Wait();
 10494  19DA  160A  158A  20DF  160A  158A  	fcall	_I2C_Master_Wait
 10495                           
 10496                           ;funciones0.c: 168:     if(a == 1){
 10497  19DF  0370               	decf	I2C_Master_Read@a,w
 10498  19E0  0471               	iorwf	I2C_Master_Read@a+1,w
 10499  19E1  1D03               	btfss	3,2
 10500  19E2  29E7               	goto	l159
 10501                           
 10502                           ;funciones0.c: 169:         SSPCON2bits.ACKDT = 0;
 10503  19E3  1683               	bsf	3,5	;RP0=1, select bank1
 10504  19E4  1303               	bcf	3,6	;RP1=0, select bank1
 10505  19E5  1291               	bcf	17,5	;volatile
 10506                           
 10507                           ;funciones0.c: 170:     }else{
 10508  19E6  29EA               	goto	l160
 10509  19E7                     l159:	
 10510                           
 10511                           ;funciones0.c: 171:         SSPCON2bits.ACKDT = 1;
 10512  19E7  1683               	bsf	3,5	;RP0=1, select bank1
 10513  19E8  1303               	bcf	3,6	;RP1=0, select bank1
 10514  19E9  1691               	bsf	17,5	;volatile
 10515  19EA                     l160:	
 10516                           ;funciones0.c: 172:     }
 10517                           
 10518                           
 10519                           ;funciones0.c: 173:     SSPCON2bits.ACKEN = 1;
 10520  19EA  1611               	bsf	17,4	;volatile
 10521                           
 10522                           ;funciones0.c: 174:     return temp;
 10523  19EB  0875               	movf	I2C_Master_Read@temp+1,w
 10524  19EC  00F1               	movwf	?_I2C_Master_Read+1
 10525  19ED  0874               	movf	I2C_Master_Read@temp,w
 10526  19EE  00F0               	movwf	?_I2C_Master_Read
 10527  19EF  0008               	return
 10528  19F0                     __end_of_I2C_Master_Read:	
 10529                           
 10530                           	psect	text36
 10531  18DF                     __ptext36:	
 10532 ;; *************** function _I2C_Master_Wait *****************
 10533 ;; Defined at:
 10534 ;;		line 118 in file "funciones0.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      void 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10548 ;;      Params:         0       0       0       0       0
 10549 ;;      Locals:         0       0       0       0       0
 10550 ;;      Temps:          0       0       0       0       0
 10551 ;;      Totals:         0       0       0       0       0
 10552 ;;Total ram usage:        0 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; This function calls:
 10555 ;;		Nothing
 10556 ;; This function is called by:
 10557 ;;		_I2C_Master_Start
 10558 ;;		_I2C_Master_Stop
 10559 ;;		_I2C_Master_Write
 10560 ;;		_I2C_Master_Read
 10561 ;;		_I2C_Master_RepeatedStart
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _I2C_Master_Wait
 10567  18DF                     _I2C_Master_Wait:	
 10568  18DF                     l141:	
 10569                           ;funciones0.c: 120:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10570                           
 10571                           ;incstack = 0
 10572                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10573                           
 10574  18DF  1683               	bsf	3,5	;RP0=1, select bank1
 10575  18E0  1303               	bcf	3,6	;RP1=0, select bank1
 10576  18E1  1914               	btfsc	20,2	;volatile
 10577  18E2  28DF               	goto	l141
 10578  18E3  0811               	movf	17,w	;volatile
 10579  18E4  391F               	andlw	31
 10580  18E5  1903               	btfsc	3,2
 10581  18E6  0008               	return
 10582  18E7  28DF               	goto	l141
 10583  18E8                     __end_of_I2C_Master_Wait:	
 10584                           
 10585                           	psect	text37
 10586  1A22                     __ptext37:	
 10587 ;; *************** function _I2C_Master_Init *****************
 10588 ;; Defined at:
 10589 ;;		line 102 in file "funciones0.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;  c               4    0[BANK0 ] const unsigned long 
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;		None
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  1    wreg      void 
 10596 ;; Registers used:
 10597 ;;		wreg, status,2, status,0, pclath, cstack
 10598 ;; Tracked objects:
 10599 ;;		On entry : 0/0
 10600 ;;		On exit  : 0/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10603 ;;      Params:         0       4       0       0       0
 10604 ;;      Locals:         0       0       0       0       0
 10605 ;;      Temps:          0       4       0       0       0
 10606 ;;      Totals:         0       8       0       0       0
 10607 ;;Total ram usage:        8 bytes
 10608 ;; Hardware stack levels used:    1
 10609 ;; Hardware stack levels required when called:    1
 10610 ;; This function calls:
 10611 ;;		___lldiv
 10612 ;; This function is called by:
 10613 ;;		_main
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           
 10618                           ;psect for function _I2C_Master_Init
 10619  1A22                     _I2C_Master_Init:	
 10620                           
 10621                           ;funciones0.c: 102: void I2C_Master_Init(const unsigned long c);funciones0.c: 103: {;fun
      +                          ciones0.c: 104:     SSPCON = 0b00101000;
 10622                           
 10623                           ;incstack = 0
 10624                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10625  1A22  3028               	movlw	40
 10626  1A23  1283               	bcf	3,5	;RP0=0, select bank0
 10627  1A24  1303               	bcf	3,6	;RP1=0, select bank0
 10628  1A25  0094               	movwf	20	;volatile
 10629                           
 10630                           ;funciones0.c: 105:     SSPCON2 = 0;
 10631  1A26  1683               	bsf	3,5	;RP0=1, select bank1
 10632  1A27  1303               	bcf	3,6	;RP1=0, select bank1
 10633  1A28  0191               	clrf	17	;volatile
 10634                           
 10635                           ;funciones0.c: 106:     SSPADD = (4000000/(4*c))-1;
 10636  1A29  1283               	bcf	3,5	;RP0=0, select bank0
 10637  1A2A  1303               	bcf	3,6	;RP1=0, select bank0
 10638  1A2B  0820               	movf	I2C_Master_Init@c,w
 10639  1A2C  00A4               	movwf	??_I2C_Master_Init
 10640  1A2D  0821               	movf	I2C_Master_Init@c+1,w
 10641  1A2E  00A5               	movwf	??_I2C_Master_Init+1
 10642  1A2F  0822               	movf	I2C_Master_Init@c+2,w
 10643  1A30  00A6               	movwf	??_I2C_Master_Init+2
 10644  1A31  0823               	movf	I2C_Master_Init@c+3,w
 10645  1A32  00A7               	movwf	??_I2C_Master_Init+3
 10646  1A33  3002               	movlw	2
 10647  1A34                     u5445:	
 10648  1A34  1003               	clrc
 10649  1A35  0DA4               	rlf	??_I2C_Master_Init,f
 10650  1A36  0DA5               	rlf	??_I2C_Master_Init+1,f
 10651  1A37  0DA6               	rlf	??_I2C_Master_Init+2,f
 10652  1A38  0DA7               	rlf	??_I2C_Master_Init+3,f
 10653  1A39  3EFF               	addlw	-1
 10654  1A3A  1D03               	skipz
 10655  1A3B  2A34               	goto	u5445
 10656  1A3C  0827               	movf	??_I2C_Master_Init+3,w
 10657  1A3D  00F3               	movwf	___lldiv@divisor+3
 10658  1A3E  0826               	movf	??_I2C_Master_Init+2,w
 10659  1A3F  00F2               	movwf	___lldiv@divisor+2
 10660  1A40  0825               	movf	??_I2C_Master_Init+1,w
 10661  1A41  00F1               	movwf	___lldiv@divisor+1
 10662  1A42  0824               	movf	??_I2C_Master_Init,w
 10663  1A43  00F0               	movwf	___lldiv@divisor
 10664  1A44  3000               	movlw	0
 10665  1A45  00F7               	movwf	___lldiv@dividend+3
 10666  1A46  303D               	movlw	61
 10667  1A47  00F6               	movwf	___lldiv@dividend+2
 10668  1A48  3009               	movlw	9
 10669  1A49  00F5               	movwf	___lldiv@dividend+1
 10670  1A4A  3000               	movlw	0
 10671  1A4B  00F4               	movwf	___lldiv@dividend
 10672  1A4C  160A  158A  23BF   	fcall	___lldiv
 10673  1A4F  0870               	movf	?___lldiv,w
 10674  1A50  3EFF               	addlw	255
 10675  1A51  1683               	bsf	3,5	;RP0=1, select bank1
 10676  1A52  1303               	bcf	3,6	;RP1=0, select bank1
 10677  1A53  0093               	movwf	19	;volatile
 10678                           
 10679                           ;funciones0.c: 107:     SSPSTAT = 0;
 10680  1A54  0194               	clrf	20	;volatile
 10681                           
 10682                           ;funciones0.c: 108:     TRISCbits.TRISC3 = 1;
 10683  1A55  1587               	bsf	7,3	;volatile
 10684                           
 10685                           ;funciones0.c: 109:     TRISCbits.TRISC4 = 1;
 10686  1A56  1607               	bsf	7,4	;volatile
 10687  1A57  0008               	return
 10688  1A58                     __end_of_I2C_Master_Init:	
 10689                           
 10690                           	psect	text38
 10691  1BBF                     __ptext38:	
 10692 ;; *************** function ___lldiv *****************
 10693 ;; Defined at:
 10694 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  divisor         4    0[COMMON] unsigned long 
 10697 ;;  dividend        4    4[COMMON] unsigned long 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  quotient        4    9[COMMON] unsigned long 
 10700 ;;  counter         1   13[COMMON] unsigned char 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  4    0[COMMON] unsigned long 
 10703 ;; Registers used:
 10704 ;;		wreg, status,2, status,0
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10710 ;;      Params:         8       0       0       0       0
 10711 ;;      Locals:         5       0       0       0       0
 10712 ;;      Temps:          1       0       0       0       0
 10713 ;;      Totals:        14       0       0       0       0
 10714 ;;Total ram usage:       14 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_I2C_Master_Init
 10720 ;;		_sprintf
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           
 10725                           ;psect for function ___lldiv
 10726  1BBF                     ___lldiv:	
 10727                           
 10728                           ;incstack = 0
 10729                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10730  1BBF  3000               	movlw	0
 10731  1BC0  00FC               	movwf	___lldiv@quotient+3
 10732  1BC1  3000               	movlw	0
 10733  1BC2  00FB               	movwf	___lldiv@quotient+2
 10734  1BC3  3000               	movlw	0
 10735  1BC4  00FA               	movwf	___lldiv@quotient+1
 10736  1BC5  3000               	movlw	0
 10737  1BC6  00F9               	movwf	___lldiv@quotient
 10738  1BC7  0873               	movf	___lldiv@divisor+3,w
 10739  1BC8  0472               	iorwf	___lldiv@divisor+2,w
 10740  1BC9  0471               	iorwf	___lldiv@divisor+1,w
 10741  1BCA  0470               	iorwf	___lldiv@divisor,w
 10742  1BCB  1903               	skipnz
 10743  1BCC  2C14               	goto	l3270
 10744  1BCD  01FD               	clrf	___lldiv@counter
 10745  1BCE  0AFD               	incf	___lldiv@counter,f
 10746  1BCF                     l3256:	
 10747  1BCF  1BF3               	btfsc	___lldiv@divisor+3,7
 10748  1BD0  2BDF               	goto	l3258
 10749  1BD1  3001               	movlw	1
 10750  1BD2  00F8               	movwf	??___lldiv
 10751  1BD3                     u4925:	
 10752  1BD3  1003               	clrc
 10753  1BD4  0DF0               	rlf	___lldiv@divisor,f
 10754  1BD5  0DF1               	rlf	___lldiv@divisor+1,f
 10755  1BD6  0DF2               	rlf	___lldiv@divisor+2,f
 10756  1BD7  0DF3               	rlf	___lldiv@divisor+3,f
 10757  1BD8  0BF8               	decfsz	??___lldiv,f
 10758  1BD9  2BD3               	goto	u4925
 10759  1BDA  3001               	movlw	1
 10760  1BDB  00F8               	movwf	??___lldiv
 10761  1BDC  0878               	movf	??___lldiv,w
 10762  1BDD  07FD               	addwf	___lldiv@counter,f
 10763  1BDE  2BCF               	goto	l3256
 10764  1BDF                     l3258:	
 10765  1BDF  3001               	movlw	1
 10766  1BE0  00F8               	movwf	??___lldiv
 10767  1BE1                     u4945:	
 10768  1BE1  1003               	clrc
 10769  1BE2  0DF9               	rlf	___lldiv@quotient,f
 10770  1BE3  0DFA               	rlf	___lldiv@quotient+1,f
 10771  1BE4  0DFB               	rlf	___lldiv@quotient+2,f
 10772  1BE5  0DFC               	rlf	___lldiv@quotient+3,f
 10773  1BE6  0BF8               	decfsz	??___lldiv,f
 10774  1BE7  2BE1               	goto	u4945
 10775  1BE8  0873               	movf	___lldiv@divisor+3,w
 10776  1BE9  0277               	subwf	___lldiv@dividend+3,w
 10777  1BEA  1D03               	skipz
 10778  1BEB  2BF6               	goto	u4955
 10779  1BEC  0872               	movf	___lldiv@divisor+2,w
 10780  1BED  0276               	subwf	___lldiv@dividend+2,w
 10781  1BEE  1D03               	skipz
 10782  1BEF  2BF6               	goto	u4955
 10783  1BF0  0871               	movf	___lldiv@divisor+1,w
 10784  1BF1  0275               	subwf	___lldiv@dividend+1,w
 10785  1BF2  1D03               	skipz
 10786  1BF3  2BF6               	goto	u4955
 10787  1BF4  0870               	movf	___lldiv@divisor,w
 10788  1BF5  0274               	subwf	___lldiv@dividend,w
 10789  1BF6                     u4955:	
 10790  1BF6  1C03               	skipc
 10791  1BF7  2C07               	goto	l3266
 10792  1BF8  0870               	movf	___lldiv@divisor,w
 10793  1BF9  02F4               	subwf	___lldiv@dividend,f
 10794  1BFA  0871               	movf	___lldiv@divisor+1,w
 10795  1BFB  1C03               	skipc
 10796  1BFC  0F71               	incfsz	___lldiv@divisor+1,w
 10797  1BFD  02F5               	subwf	___lldiv@dividend+1,f
 10798  1BFE  0872               	movf	___lldiv@divisor+2,w
 10799  1BFF  1C03               	skipc
 10800  1C00  0F72               	incfsz	___lldiv@divisor+2,w
 10801  1C01  02F6               	subwf	___lldiv@dividend+2,f
 10802  1C02  0873               	movf	___lldiv@divisor+3,w
 10803  1C03  1C03               	skipc
 10804  1C04  0F73               	incfsz	___lldiv@divisor+3,w
 10805  1C05  02F7               	subwf	___lldiv@dividend+3,f
 10806  1C06  1479               	bsf	___lldiv@quotient,0
 10807  1C07                     l3266:	
 10808  1C07  3001               	movlw	1
 10809  1C08                     u4965:	
 10810  1C08  1003               	clrc
 10811  1C09  0CF3               	rrf	___lldiv@divisor+3,f
 10812  1C0A  0CF2               	rrf	___lldiv@divisor+2,f
 10813  1C0B  0CF1               	rrf	___lldiv@divisor+1,f
 10814  1C0C  0CF0               	rrf	___lldiv@divisor,f
 10815  1C0D  3EFF               	addlw	-1
 10816  1C0E  1D03               	skipz
 10817  1C0F  2C08               	goto	u4965
 10818  1C10  3001               	movlw	1
 10819  1C11  02FD               	subwf	___lldiv@counter,f
 10820  1C12  1D03               	btfss	3,2
 10821  1C13  2BDF               	goto	l3258
 10822  1C14                     l3270:	
 10823  1C14  087C               	movf	___lldiv@quotient+3,w
 10824  1C15  00F3               	movwf	?___lldiv+3
 10825  1C16  087B               	movf	___lldiv@quotient+2,w
 10826  1C17  00F2               	movwf	?___lldiv+2
 10827  1C18  087A               	movf	___lldiv@quotient+1,w
 10828  1C19  00F1               	movwf	?___lldiv+1
 10829  1C1A  0879               	movf	___lldiv@quotient,w
 10830  1C1B  00F0               	movwf	?___lldiv
 10831  1C1C  0008               	return
 10832  1C1D                     __end_of___lldiv:	
 10833  007E                     btemp	set	126	;btemp
 10834  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    144
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     40      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    valor2	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_5(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> print_lcd(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(COMMON[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[2]), print_lcd(BANK1[16]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[3]), STR_1(CODE[13]), 

    sp__mapear	PTR unsigned int  size(1) Largest target is 6
		 -> mapear@resultado(BANK0[6]), 

    valor1	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), mapear@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    _mapear->___wmul
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->___fldiv
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___fladd

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   50187
                                             37 BANK1      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                             _config
                             _mapear
                            _sprintf
                       _uint_to_char
 ---------------------------------------------------------------------------------
 (1) _uint_to_char                                         4     4      0      62
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33603
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7864
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1668
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             50 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _mapear                                              15    13      2    2113
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1460
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             70 BANK0      8     0      8
                                              0 BANK1     18    18      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     568
                                              2 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     2      4    1676
                                              4 COMMON     6     2      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     934
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            2     2      0     934
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              4     2      2     934
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     425
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___fldiv
     ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _config
   _mapear
     ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _uint_to_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AD       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AD      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 23 22:40:15 2020

             ___fldiv@aexp 00B1               ___fldiv@bexp 00B0                          pc 0002  
             ___fldiv@sign 00A9                __CFG_CP$OFF 0000               ___awdiv@sign 0021  
          mapear@resultado 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l141 18DF                        l160 19EA  
                      l401 1968                        l159 19E7                        l336 01AD  
                      l611 1CCF                        l382 074D                        l367 055B  
                      l732 122D                        l629 08E0                        l806 17E2  
                      l734 120B                        l582 098A                        l808 17F4  
                      l592 1D86                        l728 1194                        l770 1366  
                      l762 134E                        l587 1AEB                        l595 1DEC  
                      l588 1B05                        l836 0CAA                        l749 12E6  
                      l862 10BC                        l784 1617                        l890 19B3  
                      l875 1112                        l876 111C                        l868 10FC  
                      _GIE 005F                        _PEC 00DA               __CFG_CPD$OFF 0000  
             _uint_to_char 1C1D                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0036               ___flmul@bexp 0037  
              _sprintf$967 00AA               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038               __CFG_LVP$OFF 0000               ___fltol@exp1 005B  
                     l3000 0C19                       l3010 0C32                       l3020 0C64  
                     l3030 0C93                       l3006 0C30                       l3110 0F4A  
                     l3102 0E5F                       l3024 0C7A                       l3212 0962  
                     l3204 093A                       l3116 0FD5                       l3222 0976  
                     l3134 0860                       l3070 1F11                       l3320 1C94  
                     l3232 0999                       l3224 0986                       l3160 08B9  
                     l3152 0899                       l3128 18FD                       l3402 1110  
                     l3170 08CC                       l3138 0869                       l2610 1BA7  
                     l2602 1B83                       l3316 1C8B                       l3404 1101  
                     l3180 08EF                       l3172 08DC                       l2700 1A12  
                     l3076 1FBE                       l2604 1B91                       l3092 0DA9  
                     l4132 1C4C                       l3270 1C14                       l3238 1960  
                     l3190 090C                       l2614 1BB2                       l2630 1B23  
                     l4134 01C3                       l3256 1BCF                       l3336 1CBB  
                     l3416 1139                       l2704 1A1D                       l3266 1C07  
                     l3258 1BDF                       l3530 109D                       l3522 1054  
                     l3282 1B17                       l2722 115F                       l3346 1CDE  
                     l3338 1CCB                       l3362 0839                       l3186 0903  
                     l2618 1BBA                       l2642 1B30                       l2634 1B2A  
                     l3098 0E34                       l3602 015C                       l3524 106F  
                     l3516 1026                       l3292 1DA0                       l2820 125C  
                     l2812 123B                       l2804 1227                       l3356 080B  
                     l2644 1B3E                       l2652 1B57                       l3700 04BE  
                     l3540 1C23                       l3518 1041                       l2822 125E  
                     l2830 126E                       l2750 118C                       l2726 1162  
                     l3358 081B                       l3366 0846                       l3382 10B4  
                     l2670 1A60                       l3630 01DB                       l3622 01AF  
                     l3614 016F                       l3550 1C2D                       l3542 1C25  
                     l3456 1956                       l3528 1082                       l3296 1DC6  
                     l2840 12D8                       l2728 116A                       l3392 10CF  
                     l2568 19AB                       l2920 09C9                       l2672 1A6E  
                     l2592 1B7B                       l2656 1B5F                       l2648 1B4C  
                     l3800 0789                       l3712 04FC                       l3640 0221  
                     l3624 01CB                       l3616 01A9                       l3560 1C37  
                     l3552 1C2F                       l3544 1C27                       l3536 1C1F  
                     l2746 1189                       l3394 10E1                       l2682 1A8F  
                     l2586 1B70                       l3706 04C0                       l3562 1C39  
                     l3554 1C31                       l3546 1C29                       l3538 1C21  
                     l3570 1C44                       l3468 1A96                       l2756 119E  
                     l3388 10CB                       l2916 09BF                       l3812 07B9  
                     l3740 05BD                       l3716 051B                       l3564 1C3B  
                     l3556 1C33                       l3548 1C2B                       l3572 1C7E  
                     l2870 1319                       l2862 130E                       l2934 09E4  
                     l2918 09C1                       l2678 1A84                       l2694 19F6  
                     l3822 07D6                       l3814 07BD                       l3806 07A0  
                     l3718 053D                       l3726 0525                       l3830 07EC  
                     l3566 1C3D                       l3558 1C35                       l3920 16FF  
                     l3912 16AB                       l2856 1307                       l2848 12F8  
                     l2864 1310                       l2936 09E6                       l2696 1A04  
                     l3816 07C1                       l3808 07A4                       l3760 0609  
                     l3752 05EC                       l3728 0544                       l3680 03D1  
                     l3672 0379                       l3664 0304                       l3656 027B  
                     l3568 1C3F                       l3914 16B6                       l3922 1689  
                     l2874 131B                       l2794 1216                       l2786 11DA  
                     l2946 09FC                       l2938 09EE                       l3746 05D0  
                     l3594 0122                       l3940 1734                       l3924 1704  
                     l3860 15DF                       l2892 135E                       l2796 1218  
                     l3780 0738                       l3684 03EC                       l3668 0325  
                     l3588 010C                       l3828 00F6                       l3950 1753  
                     l3934 1722                       l3854 15D1                       l3790 075D  
                     l3774 0727                       l3694 043A                       l3782 073D  
                     l3960 17A7                       l3848 15BF                       l2896 1362  
                     l3946 174F                       l3938 170A                       l3874 1609  
                     l3858 15D5                       l3794 0773                       l3964 17C4  
                     l3868 15F7                       l3894 164A                       l3878 160D  
                     l2998 0BFC                       l3976 17EE                       l3888 163A  
                     l3994 13A5                       STR_1 00A3                       STR_2 00B6  
                     STR_3 00B9                       STR_4 00BD                       STR_5 00B0  
                     STR_6 00BB                       u3205 1B86                       u4105 0B09  
                     u3225 1B92                       u3305 1B33                       u3155 19B4  
                     u3235 1B9E                       u5005 1B13                       u3405 1A7B  
                     u3245 1BA8                       u3325 1B44                       u4215 0C0B  
                     u3415 1A85                       u3335 1B4D                       u3600 11FB  
                     u5041 1DB1                       u5105 1C9D                       u4305 0C85  
                     u4145 0BA5                       u5042 1DB2                       u5043 1DB7  
                     u4075 0AAC                       u5044 1DB8                       u5061 1DD7  
                     u5045 1DBD                       u5205 080F                       u4165 0BCA  
                     u3445 19F9                       u4405 1F7F                       u6110 16FB  
                     u5062 1DD8                       u5046 1DBE                       u5063 1DDD  
                     u5135 1CBC                       u3375 1A63                       u4415 1FC9  
                     u5064 1DDE                       u6105 16D4                       u5065 1DE3  
                     u5225 0829                       u5305 10F4                       u4185 0BE8  
                     u3465 1A0A                       u4505 0E37                       u5066 1DE4  
                     u6115 16E4                       u3731 1299                       u3723 1280  
                     u3715 1262                       u3635 121C                       u5235 083A  
                     u4195 0C00                       u3395 1A6F                       u3475 1A13  
                     u4355 1E23                       _PEIE 005E                       u6116 16E7  
                     u3740 12AD                       u3732 129A                       u6117 16EE  
                     u3741 12AE                       u3733 129F                       u5165 1CD4  
                     u5325 1109                       u4285 0C4F                       u4365 1E7D  
                     u4525 0E84                       u4445 0CE3                       u6118 16F1  
                     u3742 12B3                       u3734 12A0                       u3590 11FA  
                     u6119 16F8                       u3743 12B4                       u3735 12A5  
                     u4295 0C6D                       u4375 1ED2                       u4535 0EC0  
                     u4455 0D1F                       u3736 12A6                       u6145 1712  
                     u6065 1692                       u3585 11EE                       u4545 0F0B  
                     u4465 0D6A                       u6235 1782                       u6075 169B  
                     u4635 089B                       u4395 1F32                       u6307 1469  
                     u5460 1008                       u5445 1A34                       u6245 17B2  
                     u6165 1726                       u5365 1124                       u5285 10D8  
                     u4725 08E5                       u4645 08AC                       u4565 0F62  
                     u4485 0DC1                       u6317 1496                       u6407 1D5A  
                     u6327 1908                       u6255 17CF                       u6095 16AF  
                     u4655 08BA                       u4575 0F9E                       u4495 0DFD  
                     u6417 1D68                       u6337 1CF1                       u3785 12FA  
                     u4825 0977                       u4585 0FD8                       u5625 0330  
                     u6427 193C                       u6347 1D03                       u5475 102F  
                     u5635 0384                       u4925 1BD3                       u6437 00C8  
                     u6357 1D12                       u5485 105D                       u3885 1338  
                     u4765 093C                       u5805 0689                       u6447 00D3  
                     u6367 1D1F                       u5495 108B                       u4855 098F  
                     u4775 0951                       u4695 08CD                       u5815 06EF  
                     u5735 052E                       u6287 13CC                       u4945 1BE1  
                     u6457 00DF                       u6377 1D2C                       u4785 0964  
                     u5665 03CF                       u6297 13F7                       u4955 1BF6  
                     u6467 00EA                       u6387 1D3A                       u5915 0795  
                     u5755 0563                       u4965 1C08                       u6397 1D4A  
                     u4885 1969                       u5925 07AB                       u5685 04C3  
                     u4895 1970                       u5775 05D9                       u5695 04F2  
                     u5865 0754                       u5785 05E6                       u5875 0768  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0072                       _main 1371  
                     _temp 00D4                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0074              __CFG_IESO$OFF 0000            ___fldiv@new_exp 00AA  
          __end_of_Lcd_Cmd 00EF           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070              ___fltol@sign1 005A  
          __end_of___fladd 1371                      ?_main 0070            __end_of___fldiv 1800  
          __end_of___awdiv 1BBF            __end_of___flneg 18F1              __CFG_WDTE$OFF 0000  
          __end_of___awmod 1B64            __end_of___flmul 0CB7            __end_of___flsub 19A1  
          __end_of___fltol 1CED         uint_to_char@numChr 0073                      _ANSEL 0188  
          __end_of___lldiv 1C1D            ___awdiv@divisor 0077            __end_of___llmod 084F  
          __end_of___lwdiv 1A94            __end_of___lwmod 1A22         uint_to_char@numero 0072  
          ___awdiv@counter 0020                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 001C                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063             __CFG_FCMEN$OFF 0000                mapear@F1362 00C8  
          __end_of_dpowers 00A3                      _scale 0CB7            __end_of_isdigit 18FF  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F1                mapear@valor 0020  
         __end_of_Lcd_Init 1D6C             __CFG_MCLRE$OFF 0000            __initialization 07F1  
             __end_of_main 15A5                     ??_main 00C5         __size_of_Lcd_Clear 001B  
     __size_of__tdiv_to_l_ 00A9          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___llmod@dividend 0074  
                   ?_scale 003E           ___awdiv@dividend 0079                     _ANSELH 0189  
                ??_Lcd_Cmd 0072    __size_of_Lcd_Write_Char 000F                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C         uint_to_array@F1354 00CE  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 1142  
           __CFG_PWRTE$OFF 0000           __end_of__powers_ 0047                     ___flge 1D6C  
                   ___fleq 1AD1                  ??___fladd 005A                     ___wmul 195E  
                ??___fldiv 00A0                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _config 190E  
                   _mapear 1001                     _fround 1DFF           ___awdiv@quotient 0022  
          ___awmod@divisor 0070                     _valor1 00DC                     _valor2 006E  
          ___awmod@counter 0075                  ??_isdigit 0070         __size_of__Umul8_16 0023  
                ??_sprintf 00A5            Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0076  
          Lcd_Set_Cursor@d 0078                 ___flge@ff1 0070                 ___flge@ff2 0074  
             mapear@limSup 0077               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 1942  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 1000  
           _Lcd_Set_Cursor 1942                 __div_to_l_ 08F8                  ?_Lcd_Init 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020               sprintf@width 00B5                 __pbssBANK0 006E  
               __pbssBANK1 00C8              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 19C4                 __pmaintext 1371                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070                    ?_config 0070  
                  ?_mapear 0076                    ?_fround 003E  __size_of_Lcd_Write_String 003D  
   __end_of_Lcd_Set_Cursor 195E                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 18FF                    _Lcd_Cmd 00C1          __end_of__npowers_ 007B  
          __size_of___flge 0093            __size_of___fleq 0048                    ___fladd 1142  
                  ___fldiv 15A5                    ___awdiv 1B64                    ___flneg 18E8  
                  ___awmod 1B19                    ___flmul 09A2                    ___flsub 197F  
                  ___fltol 1C80                    ___lldiv 1BBF            __size_of___wmul 0021  
                  ___llmod 0803                    ___lwdiv 1A58                 _fround$964 004D  
               _fround$965 0049                    ___lwmod 19F0            __size_of_config 0019  
          __size_of_mapear 009E            __size_of_fround 0201            ?_Lcd_Set_Cursor 0074  
                  __ptext1 1C1D                    __ptext2 00EF                    __ptext3 0CB7  
                  __ptext4 1B19                    __ptext5 1B64                    __ptext6 18F1  
                  __ptext7 1DFF                    __ptext8 19F0                    __ptext9 1A58  
              ?__div_to_l_ 0070                    _dpowers 007B                    _isdigit 18F1  
               ??___xxtofl 0074           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0036  
 __size_of_I2C_Master_Read 002C   __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007  
                  _sprintf 00EF                    clrloop0 18D8     __end_of_Lcd_Write_Char 190E  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0007  __size_of_I2C_Master_Write 0008  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
            ??__tdiv_to_l_ 0078                  _PORTDbits 0008              mapear@limReal 0076  
              ___fladd@grs 0065              ___xxtofl@sign 0078                  _TRISCbits 0087  
              ___fldiv@grs 00AC                ___fldiv@rem 00A5            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0072          Lcd_Write_String@n 0077                ___flmul@grs 0032  
      __size_of__div_to_l_ 00AA                  _Lcd_Clear 1927             __end_of___flge 1DFF  
           __end_of___fleq 1B19             __end_of___wmul 197F           _Lcd_Write_String 1A94  
           __end_of_config 1927             __end_of_mapear 109F             __end_of_fround 2000  
            ?_uint_to_char 0070        start_initialization 07F1        __end_of__tdiv_to_l_ 08F8  
        __size_of_Lcd_Init 007F          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070            ___llmod@divisor 0070  
          ___llmod@counter 0079   __CFG_FOSC$INTRC_NOCLKOUT 0000                 ?_Lcd_Clear 0070  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 19A1                   ??_config 0070                   ??_mapear 0078  
          Lcd_Write_Char@a 0071                   ??_fround 0042              sprintf@tmpval 00B7  
           ??_uint_to_char 0070                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 0066                  ___fldiv@b 006A  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00A3                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B3                sprintf@eexp 00BB                sprintf@fval 00BD  
              sprintf@prec 00C2           _I2C_Master_Start 18C1           _I2C_Master_Write 18CF  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0078                   ?___fladd 0052  
                 ?___fldiv 0066                   ?___awdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0024                   ?___flsub 0066  
                 ?___fltol 0051                   ?___lldiv 0070                   ?___llmod 0070  
                __npowers_ 0047                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                  __pstrings 0003                __tdiv_to_l_ 084F  
                _contador1 00DE               ??__div_to_l_ 0078                   ?_isdigit 0070  
                _scale$966 004C           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 0349             ___wmul@product 0074                  clear_ram0 18D7  
                 Lcd_Cmd@a 0070         __end_of__div_to_l_ 09A2                ??_Lcd_Clear 0074  
                _valor_adc 00DD                  _print_lcd 00DF                __stringbase 0012  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0070                   _Lcd_Init 1CED  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 1AD1           __size_of_Lcd_Cmd 002E  
     __end_of_uint_to_char 1C80                ??__Umul8_16 0072           __size_of___fladd 022F  
         __size_of___fldiv 025B           __size_of___awdiv 005B           __size_of___flneg 0009  
         __size_of___awmod 004B           __size_of___flmul 0315           __size_of___flsub 0022  
         __size_of___fltol 006D           __size_of___lldiv 005E           __size_of___llmod 004C  
         __size_of___lwdiv 003C           __size_of___lwmod 0032         __end_of__stringtab 0013  
              _isdigit$784 0070                 sprintf@val 00AF            _I2C_Master_Init 1A22  
          _I2C_Master_Read 19C4                   ___xxtofl 109F            _I2C_Master_Wait 18DF  
          _I2C_Master_Stop 18C8           __size_of_isdigit 000E            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 09A2                   __ptext11 19A1  
                 __ptext20 1D6C                   __ptext12 084F                   __ptext21 1AD1  
                 __ptext13 08F8                   __ptext30 1927                   __ptext22 1001  
                 __ptext14 109F                   __ptext31 00C1                   __ptext23 195E  
                 __ptext15 0803                   __ptext32 18CF                   __ptext24 190E  
                 __ptext16 1C80                   __ptext33 18C8                   __ptext25 15A5  
                 __ptext17 197F                   __ptext34 18C1                   __ptext26 1A94  
                 __ptext18 1142                   __ptext35 19C4                   __ptext27 18FF  
                 __ptext19 18E8                   __ptext36 18DF                   __ptext28 1942  
                 __ptext37 1A22                   __ptext29 1CED                   __ptext38 1BBF  
        __CFG_BOR4V$BOR40V 0000                   __powers_ 0013                   _contador 006F  
         __size_of_sprintf 0702              __size_of_main 0234                   _temp_LSB 00DB  
                 _temp_MSB 00D8   __end_of_I2C_Master_Start 18C8   __end_of_I2C_Master_Write 18D7  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00AE  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 000D    __end_of_I2C_Master_Init 1A58    __end_of_I2C_Master_Read 19F0  
  __end_of_I2C_Master_Wait 18E8    __end_of_I2C_Master_Stop 18CF               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070            mapear@dividendo 0027                   sprintf@c 00C4  
                 sprintf@f 00A0           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091              ___fladd@signs 0062  
    __size_of_uint_to_char 0063               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
