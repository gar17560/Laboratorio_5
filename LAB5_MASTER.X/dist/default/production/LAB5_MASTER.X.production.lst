

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 22 19:39:25 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.05
    31                           ; Generated 20/12/2018 GMT
    32                           ; 
    33                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0013                     _SSPBUF	set	19
   299  0014                     _SSPCON	set	20
   300  0008                     _PORTDbits	set	8
   301  0005                     _PORTA	set	5
   302  0008                     _PORTD	set	8
   303  0006                     _PORTB	set	6
   304  0063                     _SSPIF	set	99
   305  005E                     _PEIE	set	94
   306  005F                     _GIE	set	95
   307  0091                     _SSPCON2bits	set	145
   308  0087                     _TRISCbits	set	135
   309  0094                     _SSPSTAT	set	148
   310  0093                     _SSPADD	set	147
   311  0091                     _SSPCON2	set	145
   312  0085                     _TRISA	set	133
   313  0088                     _TRISD	set	136
   314  0086                     _TRISB	set	134
   315  0463                     _SSPIE	set	1123
   316  043C                     _TRISC4	set	1084
   317  043B                     _TRISC3	set	1083
   318  0188                     _ANSEL	set	392
   319  0189                     _ANSELH	set	393
   320                           
   321                           	psect	strings
   322  0003                     __pstrings:	
   323  0003                     stringtab:	
   324  0003                     __stringtab:	
   325  0003                     stringcode:	
   326                           ;	String table - string pointers are 1 byte each
   327                           
   328  0003                     stringdir:	
   329  0003  3000               	movlw	high stringdir
   330  0004  008A               	movwf	10
   331  0005  0804               	movf	4,w
   332  0006  0A84               	incf	4,f
   333  0007  0782               	addwf	2,f
   334  0008                     __stringbase:	
   335  0008  3400               	retlw	0
   336  0009                     __end_of__stringtab:	
   337  0009                     STR_1:	
   338  0009  3453               	retlw	83	;'S'
   339  000A  3431               	retlw	49	;'1'
   340  000B  3420               	retlw	32	;' '
   341  000C  3420               	retlw	32	;' '
   342  000D  3420               	retlw	32	;' '
   343  000E  3453               	retlw	83	;'S'
   344  000F  3432               	retlw	50	;'2'
   345  0010  3420               	retlw	32	;' '
   346  0011  3420               	retlw	32	;' '
   347  0012  3420               	retlw	32	;' '
   348  0013  3420               	retlw	32	;' '
   349  0014  3420               	retlw	32	;' '
   350  0015  3453               	retlw	83	;'S'
   351  0016  3433               	retlw	51	;'3'
   352  0017  3400               	retlw	0
   353  0018                     STR_2:	
   354  0018  3430               	retlw	48	;'0'
   355  0019  3478               	retlw	120	;'x'
   356  001A  3400               	retlw	0
   357  001B                     STR_3:	
   358  001B  342E               	retlw	46	;'.'
   359  001C  3400               	retlw	0
   360  001D                     STR_5:	
   361  001D  3443               	retlw	67	;'C'
   362  001E  3400               	retlw	0
   363  001F                     STR_4:	
   364  001F  3456               	retlw	86	;'V'
   365  0020  3400               	retlw	0
   366                           
   367                           ; #config settings
   368  0000                     
   369                           	psect	cinit
   370  07F5                     start_initialization:	
   371  07F5                     __initialization:	
   372                           
   373                           ; Clear objects allocated to BANK0
   374  07F5  1383               	bcf	3,7	;select IRP bank0
   375  07F6  3020               	movlw	low __pbssBANK0
   376  07F7  0084               	movwf	4
   377  07F8  3033               	movlw	low (__pbssBANK0+19)
   378  07F9  120A  118A  2337   	fcall	clear_ram0
   379  07FC                     end_of_initialization:	
   380                           ;End of C runtime variable initialization code
   381                           
   382  07FC                     __end_of__initialization:	
   383  07FC  0183               	clrf	3
   384  07FD  120A  118A  2E58   	ljmp	_main	;jump to C main() function
   385                           
   386                           	psect	bssBANK0
   387  0020                     __pbssBANK0:	
   388  0020                     mapear@F1362:	
   389  0020                     	ds	6
   390  0026                     uint_to_array@F1354:	
   391  0026                     	ds	6
   392  002C                     _temp:	
   393  002C                     	ds	2
   394  002E                     _valor2:	
   395  002E                     	ds	1
   396  002F                     _valor1:	
   397  002F                     	ds	1
   398  0030                     _contador:	
   399  0030                     	ds	1
   400  0031                     _valor_adc:	
   401  0031                     	ds	1
   402  0032                     _contador1:	
   403  0032                     	ds	1
   404                           
   405                           	psect	clrtext
   406  0337                     clear_ram0:	
   407                           ;	Called with FSR containing the base address, and
   408                           ;	W with the last address+1
   409                           
   410  0337  0064               	clrwdt	;clear the watchdog before getting into this loop
   411  0338                     clrloop0:	
   412  0338  0180               	clrf	0	;clear RAM location pointed to by FSR
   413  0339  0A84               	incf	4,f	;increment pointer
   414  033A  0604               	xorwf	4,w	;XOR with final address
   415  033B  1903               	btfsc	3,2	;have we reached the end yet?
   416  033C  3400               	retlw	0	;all done for this memory range, return
   417  033D  0604               	xorwf	4,w	;XOR again to restore value
   418  033E  2B38               	goto	clrloop0	;do the next byte
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:	
   422  0070                     ?_config:	
   423  0070                     ??_config:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_Lcd_Init:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_Lcd_Clear:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_Lcd_Write_String:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_I2C_Master_Start:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ??_I2C_Master_Start:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_I2C_Master_Write:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_I2C_Master_Stop:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_I2C_Master_Stop:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_Lcd_Write_Char:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_Lcd_Write_Char:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_uint_to_char:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ??_uint_to_char:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_Lcd_Cmd:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_I2C_Master_Wait:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ??_I2C_Master_Wait:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_I2C_Master_Read:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?___wmul:	
   478                           ; 2 bytes @ 0x0
   479                           
   480  0070                     ?___lldiv:	
   481                           ; 2 bytes @ 0x0
   482                           
   483  0070                     Lcd_Cmd@a:	
   484                           ; 4 bytes @ 0x0
   485                           
   486  0070                     I2C_Master_Write@d:	
   487                           ; 2 bytes @ 0x0
   488                           
   489  0070                     I2C_Master_Read@a:	
   490                           ; 2 bytes @ 0x0
   491                           
   492  0070                     ___wmul@multiplier:	
   493                           ; 2 bytes @ 0x0
   494                           
   495  0070                     ___lldiv@divisor:	
   496                           ; 2 bytes @ 0x0
   497                           
   498                           
   499                           ; 4 bytes @ 0x0
   500  0070                     	ds	1
   501  0071                     Lcd_Write_Char@a:	
   502                           
   503                           ; 1 bytes @ 0x1
   504  0071                     	ds	1
   505  0072                     ??_Lcd_Write_String:	
   506  0072                     ??_I2C_Master_Write:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0072                     ??_I2C_Master_Read:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0072                     ??_Lcd_Cmd:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0072                     uint_to_char@numero:	
   516                           ; 1 bytes @ 0x2
   517                           
   518  0072                     Lcd_Write_String@n:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0072                     ___wmul@multiplicand:	
   522                           ; 2 bytes @ 0x2
   523                           
   524                           
   525                           ; 2 bytes @ 0x2
   526  0072                     	ds	1
   527  0073                     uint_to_char@numChr:	
   528                           
   529                           ; 1 bytes @ 0x3
   530  0073                     	ds	1
   531  0074                     ??_Lcd_Init:	
   532  0074                     ??_Lcd_Clear:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  0074                     ?_Lcd_Set_Cursor:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0074                     ??___wmul:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  0074                     Lcd_Write_String@a:	
   542                           ; 1 bytes @ 0x4
   543                           
   544  0074                     Lcd_Set_Cursor@a:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  0074                     I2C_Master_Read@temp:	
   548                           ; 2 bytes @ 0x4
   549                           
   550  0074                     ___wmul@product:	
   551                           ; 2 bytes @ 0x4
   552                           
   553  0074                     ___lldiv@dividend:	
   554                           ; 2 bytes @ 0x4
   555                           
   556                           
   557                           ; 4 bytes @ 0x4
   558  0074                     	ds	2
   559  0076                     ?_mapear:	
   560  0076                     mapear@limReal:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0076                     Lcd_Set_Cursor@b:	
   564                           ; 1 bytes @ 0x6
   565                           
   566                           
   567                           ; 2 bytes @ 0x6
   568  0076                     	ds	1
   569  0077                     mapear@limSup:	
   570                           
   571                           ; 1 bytes @ 0x7
   572  0077                     	ds	1
   573  0078                     ??_Lcd_Set_Cursor:	
   574  0078                     ??_mapear:	
   575                           ; 1 bytes @ 0x8
   576                           
   577  0078                     ??___lldiv:	
   578                           ; 1 bytes @ 0x8
   579                           
   580  0078                     Lcd_Set_Cursor@d:	
   581                           ; 1 bytes @ 0x8
   582                           
   583                           
   584                           ; 2 bytes @ 0x8
   585  0078                     	ds	1
   586  0079                     ___lldiv@quotient:	
   587                           
   588                           ; 4 bytes @ 0x9
   589  0079                     	ds	4
   590  007D                     ___lldiv@counter:	
   591                           
   592                           ; 1 bytes @ 0xD
   593  007D                     	ds	1
   594                           
   595                           	psect	cstackBANK0
   596  0033                     __pcstackBANK0:	
   597  0033                     ?_I2C_Master_Init:	
   598  0033                     mapear@valor:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0033                     I2C_Master_Init@c:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 4 bytes @ 0x0
   606  0033                     	ds	1
   607  0034                     mapear@resultado:	
   608                           
   609                           ; 6 bytes @ 0x1
   610  0034                     	ds	3
   611  0037                     ??_I2C_Master_Init:	
   612                           
   613                           ; 1 bytes @ 0x4
   614  0037                     	ds	3
   615  003A                     mapear@dividendo:	
   616                           
   617                           ; 2 bytes @ 0x7
   618  003A                     	ds	2
   619  003C                     ??_main:	
   620                           
   621                           ; 1 bytes @ 0x9
   622  003C                     	ds	3
   623                           
   624                           	psect	maintext
   625  0658                     __pmaintext:	
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 38 in file "LAB_5_MASTER.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : B00/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          0       3       0       0       0
   648 ;;      Totals:         0       3       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels required when called:    2
   651 ;; This function calls:
   652 ;;		_I2C_Master_Init
   653 ;;		_I2C_Master_Read
   654 ;;		_I2C_Master_Start
   655 ;;		_I2C_Master_Stop
   656 ;;		_I2C_Master_Write
   657 ;;		_Lcd_Clear
   658 ;;		_Lcd_Init
   659 ;;		_Lcd_Set_Cursor
   660 ;;		_Lcd_Write_Char
   661 ;;		_Lcd_Write_String
   662 ;;		_config
   663 ;;		_mapear
   664 ;;		_uint_to_char
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _main
   672  0658                     _main:	
   673                           
   674                           ;LAB_5_MASTER.c: 39:     config();
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   678  0658  120A  118A  2357  120A  118A  	fcall	_config
   679                           
   680                           ;LAB_5_MASTER.c: 40:     Lcd_Init();
   681  065D  120A  118A  253B  120A  118A  	fcall	_Lcd_Init
   682                           
   683                           ;LAB_5_MASTER.c: 41:     Lcd_Clear();
   684  0662  120A  118A  2370  120A  118A  	fcall	_Lcd_Clear
   685                           
   686                           ;LAB_5_MASTER.c: 42:     Lcd_Set_Cursor(1,1);
   687  0667  3001               	movlw	1
   688  0668  00F4               	movwf	Lcd_Set_Cursor@a
   689  0669  3000               	movlw	0
   690  066A  00F5               	movwf	Lcd_Set_Cursor@a+1
   691  066B  3001               	movlw	1
   692  066C  00F6               	movwf	Lcd_Set_Cursor@b
   693  066D  3000               	movlw	0
   694  066E  00F7               	movwf	Lcd_Set_Cursor@b+1
   695  066F  120A  118A  238B  120A  118A  	fcall	_Lcd_Set_Cursor
   696                           
   697                           ;LAB_5_MASTER.c: 43:     Lcd_Write_String("S1   S2     S3");
   698  0674  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   699  0675  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
   700                           
   701                           ;LAB_5_MASTER.c: 44:     I2C_Master_Init(100000);
   702  067A  3000               	movlw	0
   703  067B  1283               	bcf	3,5	;RP0=0, select bank0
   704  067C  1303               	bcf	3,6	;RP1=0, select bank0
   705  067D  00B6               	movwf	I2C_Master_Init@c+3
   706  067E  3001               	movlw	1
   707  067F  00B5               	movwf	I2C_Master_Init@c+2
   708  0680  3086               	movlw	134
   709  0681  00B4               	movwf	I2C_Master_Init@c+1
   710  0682  30A0               	movlw	160
   711  0683  00B3               	movwf	I2C_Master_Init@c
   712  0684  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Init
   713  0689                     l1365:	
   714                           
   715                           ;LAB_5_MASTER.c: 46:         I2C_Master_Start();
   716  0689  120A  118A  2321  120A  118A  	fcall	_I2C_Master_Start
   717                           
   718                           ;LAB_5_MASTER.c: 47:         I2C_Master_Write(0x31);
   719  068E  3031               	movlw	49
   720  068F  00F0               	movwf	I2C_Master_Write@d
   721  0690  3000               	movlw	0
   722  0691  00F1               	movwf	I2C_Master_Write@d+1
   723  0692  120A  118A  232F  120A  118A  	fcall	_I2C_Master_Write
   724                           
   725                           ;LAB_5_MASTER.c: 48:         contador1 = I2C_Master_Read(0);
   726  0697  3000               	movlw	0
   727  0698  00F0               	movwf	I2C_Master_Read@a
   728  0699  00F1               	movwf	I2C_Master_Read@a+1
   729  069A  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   730  069F  0870               	movf	?_I2C_Master_Read,w
   731  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   732  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   733  06A2  00BC               	movwf	??_main
   734  06A3  083C               	movf	??_main,w
   735  06A4  00B2               	movwf	_contador1
   736                           
   737                           ;LAB_5_MASTER.c: 49:         I2C_Master_Stop();
   738  06A5  120A  118A  2328  120A  118A  	fcall	_I2C_Master_Stop
   739                           
   740                           ;LAB_5_MASTER.c: 50:         _delay((unsigned long)((50)*(8000000/4000.0)));
   741  06AA  3082               	movlw	130
   742  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   743  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   744  06AD  00BD               	movwf	??_main+1
   745  06AE  30DD               	movlw	221
   746  06AF  00BC               	movwf	??_main
   747  06B0                     u577:	
   748  06B0  0BBC               	decfsz	??_main,f
   749  06B1  2EB0               	goto	u577
   750  06B2  0BBD               	decfsz	??_main+1,f
   751  06B3  2EB0               	goto	u577
   752                           
   753                           ;LAB_5_MASTER.c: 53:         I2C_Master_Start();
   754  06B4  120A  118A  2321  120A  118A  	fcall	_I2C_Master_Start
   755                           
   756                           ;LAB_5_MASTER.c: 54:         I2C_Master_Write(0x51);
   757  06B9  3051               	movlw	81
   758  06BA  00F0               	movwf	I2C_Master_Write@d
   759  06BB  3000               	movlw	0
   760  06BC  00F1               	movwf	I2C_Master_Write@d+1
   761  06BD  120A  118A  232F  120A  118A  	fcall	_I2C_Master_Write
   762                           
   763                           ;LAB_5_MASTER.c: 55:         valor_adc = I2C_Master_Read(0);
   764  06C2  3000               	movlw	0
   765  06C3  00F0               	movwf	I2C_Master_Read@a
   766  06C4  00F1               	movwf	I2C_Master_Read@a+1
   767  06C5  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   768  06CA  0870               	movf	?_I2C_Master_Read,w
   769  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   770  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   771  06CD  00BC               	movwf	??_main
   772  06CE  083C               	movf	??_main,w
   773  06CF  00B1               	movwf	_valor_adc
   774                           
   775                           ;LAB_5_MASTER.c: 56:         I2C_Master_Stop();
   776  06D0  120A  118A  2328  120A  118A  	fcall	_I2C_Master_Stop
   777                           
   778                           ;LAB_5_MASTER.c: 57:         _delay((unsigned long)((50)*(8000000/4000.0)));
   779  06D5  3082               	movlw	130
   780  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   781  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   782  06D8  00BD               	movwf	??_main+1
   783  06D9  30DD               	movlw	221
   784  06DA  00BC               	movwf	??_main
   785  06DB                     u587:	
   786  06DB  0BBC               	decfsz	??_main,f
   787  06DC  2EDB               	goto	u587
   788  06DD  0BBD               	decfsz	??_main+1,f
   789  06DE  2EDB               	goto	u587
   790                           
   791                           ;LAB_5_MASTER.c: 58:         valor1 = mapear(valor_adc, 255, 5);
   792  06DF  30FF               	movlw	255
   793  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   794  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   795  06E2  00BC               	movwf	??_main
   796  06E3  083C               	movf	??_main,w
   797  06E4  00F6               	movwf	mapear@limReal
   798  06E5  3005               	movlw	5
   799  06E6  00BD               	movwf	??_main+1
   800  06E7  083D               	movf	??_main+1,w
   801  06E8  00F7               	movwf	mapear@limSup
   802  06E9  0831               	movf	_valor_adc,w
   803  06EA  120A  118A  25BA  120A  118A  	fcall	_mapear
   804  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   805  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   806  06F1  00BE               	movwf	??_main+2
   807  06F2  083E               	movf	??_main+2,w
   808  06F3  00AF               	movwf	_valor1
   809                           
   810                           ;LAB_5_MASTER.c: 61:         I2C_Master_Start();
   811  06F4  120A  118A  2321  120A  118A  	fcall	_I2C_Master_Start
   812                           
   813                           ;LAB_5_MASTER.c: 62:         I2C_Master_Write(0x07);
   814  06F9  3007               	movlw	7
   815  06FA  00F0               	movwf	I2C_Master_Write@d
   816  06FB  3000               	movlw	0
   817  06FC  00F1               	movwf	I2C_Master_Write@d+1
   818  06FD  120A  118A  232F  120A  118A  	fcall	_I2C_Master_Write
   819                           
   820                           ;LAB_5_MASTER.c: 63:         temp = I2C_Master_Read(0);
   821  0702  3000               	movlw	0
   822  0703  00F0               	movwf	I2C_Master_Read@a
   823  0704  00F1               	movwf	I2C_Master_Read@a+1
   824  0705  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   825  070A  0871               	movf	?_I2C_Master_Read+1,w
   826  070B  1283               	bcf	3,5	;RP0=0, select bank0
   827  070C  1303               	bcf	3,6	;RP1=0, select bank0
   828  070D  00AD               	movwf	_temp+1
   829  070E  0870               	movf	?_I2C_Master_Read,w
   830  070F  00AC               	movwf	_temp
   831                           
   832                           ;LAB_5_MASTER.c: 64:         I2C_Master_Stop();
   833  0710  120A  118A  2328  120A  118A  	fcall	_I2C_Master_Stop
   834                           
   835                           ;LAB_5_MASTER.c: 65:         _delay((unsigned long)((50)*(8000000/4000.0)));
   836  0715  3082               	movlw	130
   837  0716  1283               	bcf	3,5	;RP0=0, select bank0
   838  0717  1303               	bcf	3,6	;RP1=0, select bank0
   839  0718  00BD               	movwf	??_main+1
   840  0719  30DD               	movlw	221
   841  071A  00BC               	movwf	??_main
   842  071B                     u597:	
   843  071B  0BBC               	decfsz	??_main,f
   844  071C  2F1B               	goto	u597
   845  071D  0BBD               	decfsz	??_main+1,f
   846  071E  2F1B               	goto	u597
   847                           
   848                           ;LAB_5_MASTER.c: 71:         Lcd_Set_Cursor(2,1);
   849  071F  3002               	movlw	2
   850  0720  00F4               	movwf	Lcd_Set_Cursor@a
   851  0721  3000               	movlw	0
   852  0722  00F5               	movwf	Lcd_Set_Cursor@a+1
   853  0723  3001               	movlw	1
   854  0724  00F6               	movwf	Lcd_Set_Cursor@b
   855  0725  3000               	movlw	0
   856  0726  00F7               	movwf	Lcd_Set_Cursor@b+1
   857  0727  120A  118A  238B  120A  118A  	fcall	_Lcd_Set_Cursor
   858                           
   859                           ;LAB_5_MASTER.c: 72:         Lcd_Write_String("0x");
   860  072C  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   861  072D  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
   862                           
   863                           ;LAB_5_MASTER.c: 73:         Lcd_Write_Char(uint_to_char(contador1));
   864  0732  1283               	bcf	3,5	;RP0=0, select bank0
   865  0733  1303               	bcf	3,6	;RP1=0, select bank0
   866  0734  0832               	movf	_contador1,w
   867  0735  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   868  073A  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   869                           
   870                           ;LAB_5_MASTER.c: 74:         _delay((unsigned long)((50)*(8000000/4000.0)));
   871  073F  3082               	movlw	130
   872  0740  1283               	bcf	3,5	;RP0=0, select bank0
   873  0741  1303               	bcf	3,6	;RP1=0, select bank0
   874  0742  00BD               	movwf	??_main+1
   875  0743  30DD               	movlw	221
   876  0744  00BC               	movwf	??_main
   877  0745                     u607:	
   878  0745  0BBC               	decfsz	??_main,f
   879  0746  2F45               	goto	u607
   880  0747  0BBD               	decfsz	??_main+1,f
   881  0748  2F45               	goto	u607
   882                           
   883                           ;LAB_5_MASTER.c: 76:         Lcd_Set_Cursor(2,6);
   884  0749  3002               	movlw	2
   885  074A  00F4               	movwf	Lcd_Set_Cursor@a
   886  074B  3000               	movlw	0
   887  074C  00F5               	movwf	Lcd_Set_Cursor@a+1
   888  074D  3006               	movlw	6
   889  074E  00F6               	movwf	Lcd_Set_Cursor@b
   890  074F  3000               	movlw	0
   891  0750  00F7               	movwf	Lcd_Set_Cursor@b+1
   892  0751  120A  118A  238B  120A  118A  	fcall	_Lcd_Set_Cursor
   893                           
   894                           ;LAB_5_MASTER.c: 77:         Lcd_Write_Char(uint_to_char(valor1[0]));
   895  0756  1283               	bcf	3,5	;RP0=0, select bank0
   896  0757  1303               	bcf	3,6	;RP1=0, select bank0
   897  0758  082F               	movf	_valor1,w
   898  0759  0084               	movwf	4
   899  075A  1383               	bcf	3,7	;select IRP bank0
   900  075B  0800               	movf	0,w
   901  075C  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   902  0761  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   903                           
   904                           ;LAB_5_MASTER.c: 78:         Lcd_Write_String(".");
   905  0766  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   906  0767  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
   907                           
   908                           ;LAB_5_MASTER.c: 79:         Lcd_Write_Char(uint_to_char(valor1[1]));
   909  076C  1283               	bcf	3,5	;RP0=0, select bank0
   910  076D  1303               	bcf	3,6	;RP1=0, select bank0
   911  076E  082F               	movf	_valor1,w
   912  076F  3E02               	addlw	2
   913  0770  0084               	movwf	4
   914  0771  1383               	bcf	3,7	;select IRP bank0
   915  0772  0800               	movf	0,w
   916  0773  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   917  0778  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   918                           
   919                           ;LAB_5_MASTER.c: 80:         Lcd_Write_Char(uint_to_char(valor1[2]));
   920  077D  1283               	bcf	3,5	;RP0=0, select bank0
   921  077E  1303               	bcf	3,6	;RP1=0, select bank0
   922  077F  082F               	movf	_valor1,w
   923  0780  3E04               	addlw	4
   924  0781  0084               	movwf	4
   925  0782  1383               	bcf	3,7	;select IRP bank0
   926  0783  0800               	movf	0,w
   927  0784  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   928  0789  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   929                           
   930                           ;LAB_5_MASTER.c: 81:         Lcd_Write_String("V");
   931  078E  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   932  078F  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
   933                           
   934                           ;LAB_5_MASTER.c: 84:         valor2 = mapear(temp, -38.2, 125);
   935  0794  30DA               	movlw	218
   936  0795  1283               	bcf	3,5	;RP0=0, select bank0
   937  0796  1303               	bcf	3,6	;RP1=0, select bank0
   938  0797  00BC               	movwf	??_main
   939  0798  083C               	movf	??_main,w
   940  0799  00F6               	movwf	mapear@limReal
   941  079A  307D               	movlw	125
   942  079B  00BD               	movwf	??_main+1
   943  079C  083D               	movf	??_main+1,w
   944  079D  00F7               	movwf	mapear@limSup
   945  079E  082C               	movf	_temp,w
   946  079F  120A  118A  25BA  120A  118A  	fcall	_mapear
   947  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   948  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   949  07A6  00BE               	movwf	??_main+2
   950  07A7  083E               	movf	??_main+2,w
   951  07A8  00AE               	movwf	_valor2
   952                           
   953                           ;LAB_5_MASTER.c: 85:         Lcd_Set_Cursor(2,12);
   954  07A9  3002               	movlw	2
   955  07AA  00F4               	movwf	Lcd_Set_Cursor@a
   956  07AB  3000               	movlw	0
   957  07AC  00F5               	movwf	Lcd_Set_Cursor@a+1
   958  07AD  300C               	movlw	12
   959  07AE  00F6               	movwf	Lcd_Set_Cursor@b
   960  07AF  3000               	movlw	0
   961  07B0  00F7               	movwf	Lcd_Set_Cursor@b+1
   962  07B1  120A  118A  238B  120A  118A  	fcall	_Lcd_Set_Cursor
   963                           
   964                           ;LAB_5_MASTER.c: 86:         Lcd_Write_Char(uint_to_char(valor2[0]));
   965  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   966  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   967  07B8  082E               	movf	_valor2,w
   968  07B9  0084               	movwf	4
   969  07BA  1383               	bcf	3,7	;select IRP bank0
   970  07BB  0800               	movf	0,w
   971  07BC  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   972  07C1  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   973                           
   974                           ;LAB_5_MASTER.c: 87:         Lcd_Write_Char(uint_to_char(valor2[1]));
   975  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   976  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   977  07C8  082E               	movf	_valor2,w
   978  07C9  3E02               	addlw	2
   979  07CA  0084               	movwf	4
   980  07CB  1383               	bcf	3,7	;select IRP bank0
   981  07CC  0800               	movf	0,w
   982  07CD  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   983  07D2  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   984                           
   985                           ;LAB_5_MASTER.c: 88:         Lcd_Write_Char(uint_to_char(valor2[2]));
   986  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   987  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   988  07D9  082E               	movf	_valor2,w
   989  07DA  3E04               	addlw	4
   990  07DB  0084               	movwf	4
   991  07DC  1383               	bcf	3,7	;select IRP bank0
   992  07DD  0800               	movf	0,w
   993  07DE  120A  118A  24D8  120A  118A  	fcall	_uint_to_char
   994  07E3  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   995                           
   996                           ;LAB_5_MASTER.c: 89:         Lcd_Write_Char(0xDF);
   997  07E8  30DF               	movlw	223
   998  07E9  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
   999                           
  1000                           ;LAB_5_MASTER.c: 90:         Lcd_Write_String("C");
  1001  07EE  3015               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1002  07EF  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
  1003  07F4  2E89               	goto	l1365
  1004  07F5                     __end_of_main:	
  1005                           
  1006                           	psect	text1
  1007  04D8                     __ptext1:	
  1008 ;; *************** function _uint_to_char *****************
  1009 ;; Defined at:
  1010 ;;		line 193 in file "funciones0.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  numero          1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  numero          1    2[COMMON] unsigned char 
  1015 ;;  numChr          1    3[COMMON] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      unsigned char 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         2       0       0       0       0
  1027 ;;      Temps:          2       0       0       0       0
  1028 ;;      Totals:         4       0       0       0       0
  1029 ;;Total ram usage:        4 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _uint_to_char
  1040  04D8                     _uint_to_char:	
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _uint_to_char: [wreg-fsr0h+status,2+status,0]
  1044                           ;uint_to_char@numero stored from wreg
  1045  04D8  00F2               	movwf	uint_to_char@numero
  1046                           
  1047                           ;funciones0.c: 195:     switch (numero){
  1048  04D9  2CFF               	goto	l1343
  1049  04DA                     l1309:	
  1050                           
  1051                           ;funciones0.c: 197:             numChr = 48;
  1052  04DA  3030               	movlw	48
  1053  04DB  2CFB               	goto	L16
  1054  04DC                     l1311:	
  1055                           ;funciones0.c: 198:             break;
  1056                           
  1057                           
  1058                           ;funciones0.c: 200:             numChr = 49;
  1059  04DC  3031               	movlw	49
  1060  04DD  2CFB               	goto	L16
  1061  04DE                     l1313:	
  1062                           ;funciones0.c: 201:             break;
  1063                           
  1064                           
  1065                           ;funciones0.c: 203:             numChr = 50;
  1066  04DE  3032               	movlw	50
  1067  04DF  2CFB               	goto	L16
  1068  04E0                     l1315:	
  1069                           ;funciones0.c: 204:             break;
  1070                           
  1071                           
  1072                           ;funciones0.c: 206:             numChr = 51;
  1073  04E0  3033               	movlw	51
  1074  04E1  2CFB               	goto	L16
  1075  04E2                     l1317:	
  1076                           ;funciones0.c: 207:             break;
  1077                           
  1078                           
  1079                           ;funciones0.c: 209:             numChr = 52;
  1080  04E2  3034               	movlw	52
  1081  04E3  2CFB               	goto	L16
  1082  04E4                     l1319:	
  1083                           ;funciones0.c: 210:             break;
  1084                           
  1085                           
  1086                           ;funciones0.c: 212:             numChr = 53;
  1087  04E4  3035               	movlw	53
  1088  04E5  2CFB               	goto	L16
  1089  04E6                     l1321:	
  1090                           ;funciones0.c: 213:             break;
  1091                           
  1092                           
  1093                           ;funciones0.c: 215:             numChr = 54;
  1094  04E6  3036               	movlw	54
  1095  04E7  2CFB               	goto	L16
  1096  04E8                     l1323:	
  1097                           ;funciones0.c: 216:             break;
  1098                           
  1099                           
  1100                           ;funciones0.c: 218:             numChr = 55;
  1101  04E8  3037               	movlw	55
  1102  04E9  2CFB               	goto	L16
  1103  04EA                     l1325:	
  1104                           ;funciones0.c: 219:             break;
  1105                           
  1106                           
  1107                           ;funciones0.c: 221:             numChr = 56;
  1108  04EA  3038               	movlw	56
  1109  04EB  2CFB               	goto	L16
  1110  04EC                     l1327:	
  1111                           ;funciones0.c: 222:             break;
  1112                           
  1113                           
  1114                           ;funciones0.c: 224:             numChr = 57;
  1115  04EC  3039               	movlw	57
  1116  04ED  2CFB               	goto	L16
  1117  04EE                     l1329:	
  1118                           ;funciones0.c: 225:             break;
  1119                           
  1120                           
  1121                           ;funciones0.c: 227:             numChr = 65;
  1122  04EE  3041               	movlw	65
  1123  04EF  2CFB               	goto	L16
  1124  04F0                     l1331:	
  1125                           ;funciones0.c: 228:             break;
  1126                           
  1127                           
  1128                           ;funciones0.c: 230:             numChr = 66;
  1129  04F0  3042               	movlw	66
  1130  04F1  2CFB               	goto	L16
  1131  04F2                     l1333:	
  1132                           ;funciones0.c: 231:             break;
  1133                           
  1134                           
  1135                           ;funciones0.c: 233:             numChr = 67;
  1136  04F2  3043               	movlw	67
  1137  04F3  2CFB               	goto	L16
  1138  04F4                     l1335:	
  1139                           ;funciones0.c: 234:             break;
  1140                           
  1141                           
  1142                           ;funciones0.c: 236:             numChr = 68;
  1143  04F4  3044               	movlw	68
  1144  04F5  2CFB               	goto	L16
  1145  04F6                     l1337:	
  1146                           ;funciones0.c: 237:             break;
  1147                           
  1148                           
  1149                           ;funciones0.c: 239:             numChr = 69;
  1150  04F6  3045               	movlw	69
  1151  04F7  2CFB               	goto	L16
  1152  04F8                     l1339:	
  1153                           ;funciones0.c: 240:             break;
  1154                           
  1155                           
  1156                           ;funciones0.c: 242:             numChr = 70;
  1157  04F8  3046               	movlw	70
  1158  04F9  2CFB               	goto	L16
  1159  04FA                     l1341:	
  1160                           ;funciones0.c: 243:             break;
  1161                           
  1162                           
  1163                           ;funciones0.c: 245:             numChr = 214;
  1164  04FA  30D6               	movlw	214
  1165  04FB                     L16:	
  1166  04FB  00F0               	movwf	??_uint_to_char
  1167  04FC  0870               	movf	??_uint_to_char,w
  1168  04FD  00F3               	movwf	uint_to_char@numChr
  1169                           
  1170                           ;funciones0.c: 246:     }
  1171  04FE  2D39               	goto	l1345
  1172  04FF                     l1343:	
  1173  04FF  0872               	movf	uint_to_char@numero,w
  1174  0500  00F0               	movwf	??_uint_to_char
  1175  0501  01F1               	clrf	??_uint_to_char+1
  1176                           
  1177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 1, Range of values is 0 to 0
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte            4     3 (average)
  1183                           ; direct_byte           11     8 (fixed)
  1184                           ; jumptable            260     6 (fixed)
  1185                           ;	Chosen strategy is simple_byte
  1186  0502  0871               	movf	??_uint_to_char+1,w
  1187  0503  3A00               	xorlw	0	; case 0
  1188  0504  1903               	skipnz
  1189  0505  2D07               	goto	l1513
  1190  0506  2CFA               	goto	l1341
  1191  0507                     l1513:	
  1192                           
  1193                           ; Switch size 1, requested type "simple"
  1194                           ; Number of cases is 16, Range of values is 0 to 15
  1195                           ; switch strategies available:
  1196                           ; Name         Instructions Cycles
  1197                           ; simple_byte           49    25 (average)
  1198                           ; direct_byte           56     8 (fixed)
  1199                           ; jumptable            260     6 (fixed)
  1200                           ;	Chosen strategy is simple_byte
  1201  0507  0870               	movf	??_uint_to_char,w
  1202  0508  3A00               	xorlw	0	; case 0
  1203  0509  1903               	skipnz
  1204  050A  2CDA               	goto	l1309
  1205  050B  3A01               	xorlw	1	; case 1
  1206  050C  1903               	skipnz
  1207  050D  2CDC               	goto	l1311
  1208  050E  3A03               	xorlw	3	; case 2
  1209  050F  1903               	skipnz
  1210  0510  2CDE               	goto	l1313
  1211  0511  3A01               	xorlw	1	; case 3
  1212  0512  1903               	skipnz
  1213  0513  2CE0               	goto	l1315
  1214  0514  3A07               	xorlw	7	; case 4
  1215  0515  1903               	skipnz
  1216  0516  2CE2               	goto	l1317
  1217  0517  3A01               	xorlw	1	; case 5
  1218  0518  1903               	skipnz
  1219  0519  2CE4               	goto	l1319
  1220  051A  3A03               	xorlw	3	; case 6
  1221  051B  1903               	skipnz
  1222  051C  2CE6               	goto	l1321
  1223  051D  3A01               	xorlw	1	; case 7
  1224  051E  1903               	skipnz
  1225  051F  2CE8               	goto	l1323
  1226  0520  3A0F               	xorlw	15	; case 8
  1227  0521  1903               	skipnz
  1228  0522  2CEA               	goto	l1325
  1229  0523  3A01               	xorlw	1	; case 9
  1230  0524  1903               	skipnz
  1231  0525  2CEC               	goto	l1327
  1232  0526  3A03               	xorlw	3	; case 10
  1233  0527  1903               	skipnz
  1234  0528  2CEE               	goto	l1329
  1235  0529  3A01               	xorlw	1	; case 11
  1236  052A  1903               	skipnz
  1237  052B  2CF0               	goto	l1331
  1238  052C  3A07               	xorlw	7	; case 12
  1239  052D  1903               	skipnz
  1240  052E  2CF2               	goto	l1333
  1241  052F  3A01               	xorlw	1	; case 13
  1242  0530  1903               	skipnz
  1243  0531  2CF4               	goto	l1335
  1244  0532  3A03               	xorlw	3	; case 14
  1245  0533  1903               	skipnz
  1246  0534  2CF6               	goto	l1337
  1247  0535  3A01               	xorlw	1	; case 15
  1248  0536  1903               	skipnz
  1249  0537  2CF8               	goto	l1339
  1250  0538  2CFA               	goto	l1341
  1251  0539                     l1345:	
  1252                           
  1253                           ;funciones0.c: 247:     return(numChr);
  1254  0539  0873               	movf	uint_to_char@numChr,w
  1255  053A  0008               	return
  1256  053B                     __end_of_uint_to_char:	
  1257                           
  1258                           	psect	text2
  1259  05BA                     __ptext2:	
  1260 ;; *************** function _mapear *****************
  1261 ;; Defined at:
  1262 ;;		line 264 in file "funciones0.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  valor           1    wreg     unsigned char 
  1265 ;;  limReal         1    6[COMMON] unsigned char 
  1266 ;;  limSup          1    7[COMMON] unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  valor           1    0[BANK0 ] unsigned char 
  1269 ;;  resultado       6    1[BANK0 ] unsigned int [3]
  1270 ;;  dividendo       2    7[BANK0 ] unsigned int 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      PTR unsigned int 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         2       0       0       0       0
  1281 ;;      Locals:         0       9       0       0       0
  1282 ;;      Temps:          4       0       0       0       0
  1283 ;;      Totals:         6       9       0       0       0
  1284 ;;Total ram usage:       15 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    1
  1287 ;; This function calls:
  1288 ;;		___wmul
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _mapear
  1296  05BA                     _mapear:	
  1297                           
  1298                           ;incstack = 0
  1299                           ; Regs used in _mapear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1300                           ;mapear@valor stored from wreg
  1301  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1302  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1303  05BC  00B3               	movwf	mapear@valor
  1304                           
  1305                           ;funciones0.c: 265:     uint16_t resultado[3] = {0,0,0};
  1306  05BD  3034               	movlw	mapear@resultado& (0+255)
  1307  05BE  0084               	movwf	4
  1308  05BF  3006               	movlw	6
  1309  05C0  00FF               	movwf	127
  1310  05C1                     u420:	
  1311  05C1  1383               	bcf	3,7	;select IRP bank0
  1312  05C2  0180               	clrf	0
  1313  05C3  0A84               	incf	4,f
  1314  05C4  0BFF               	decfsz	127,f
  1315  05C5  2DC1               	goto	u420
  1316                           
  1317                           ;funciones0.c: 266:     uint16_t dividendo = valor*limSup;
  1318  05C6  0833               	movf	mapear@valor,w
  1319  05C7  00F8               	movwf	??_mapear
  1320  05C8  01F9               	clrf	??_mapear+1
  1321  05C9  0878               	movf	??_mapear,w
  1322  05CA  00F0               	movwf	___wmul@multiplier
  1323  05CB  0879               	movf	??_mapear+1,w
  1324  05CC  00F1               	movwf	___wmul@multiplier+1
  1325  05CD  0877               	movf	mapear@limSup,w
  1326  05CE  00FA               	movwf	??_mapear+2
  1327  05CF  01FB               	clrf	??_mapear+3
  1328  05D0  087A               	movf	??_mapear+2,w
  1329  05D1  00F2               	movwf	___wmul@multiplicand
  1330  05D2  087B               	movf	??_mapear+3,w
  1331  05D3  00F3               	movwf	___wmul@multiplicand+1
  1332  05D4  120A  118A  23A7  120A  118A  	fcall	___wmul
  1333  05D9  0871               	movf	?___wmul+1,w
  1334  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1335  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1336  05DC  00BB               	movwf	mapear@dividendo+1
  1337  05DD  0870               	movf	?___wmul,w
  1338  05DE  00BA               	movwf	mapear@dividendo
  1339  05DF                     l1289:	
  1340                           ;funciones0.c: 267:     while (limReal <= dividendo){
  1341                           
  1342                           
  1343                           ;funciones0.c: 267:     while (limReal <= dividendo){
  1344  05DF  0876               	movf	mapear@limReal,w
  1345  05E0  00F8               	movwf	??_mapear
  1346  05E1  01F9               	clrf	??_mapear+1
  1347  05E2  0879               	movf	??_mapear+1,w
  1348  05E3  023B               	subwf	mapear@dividendo+1,w
  1349  05E4  1D03               	skipz
  1350  05E5  2DE8               	goto	u435
  1351  05E6  0878               	movf	??_mapear,w
  1352  05E7  023A               	subwf	mapear@dividendo,w
  1353  05E8                     u435:	
  1354  05E8  1C03               	btfss	3,0
  1355  05E9  2DFA               	goto	l1291
  1356                           
  1357                           ;funciones0.c: 268:         resultado[0] = resultado[0] + 1;
  1358  05EA  0834               	movf	mapear@resultado,w
  1359  05EB  3E01               	addlw	1
  1360  05EC  00B4               	movwf	mapear@resultado
  1361  05ED  0835               	movf	mapear@resultado+1,w
  1362  05EE  1803               	skipnc
  1363  05EF  3E01               	addlw	1
  1364  05F0  3E00               	addlw	0
  1365  05F1  00B5               	movwf	mapear@resultado+1
  1366                           
  1367                           ;funciones0.c: 269:         dividendo = dividendo - limReal;
  1368  05F2  0876               	movf	mapear@limReal,w
  1369  05F3  023A               	subwf	mapear@dividendo,w
  1370  05F4  00BA               	movwf	mapear@dividendo
  1371  05F5  083B               	movf	mapear@dividendo+1,w
  1372  05F6  1C03               	skipc
  1373  05F7  033B               	decf	mapear@dividendo+1,w
  1374  05F8  00BB               	movwf	mapear@dividendo+1
  1375  05F9  2DDF               	goto	l1289
  1376  05FA                     l1291:	
  1377                           
  1378                           ;funciones0.c: 271:     dividendo = dividendo *10;
  1379  05FA  083B               	movf	mapear@dividendo+1,w
  1380  05FB  00F1               	movwf	___wmul@multiplier+1
  1381  05FC  083A               	movf	mapear@dividendo,w
  1382  05FD  00F0               	movwf	___wmul@multiplier
  1383  05FE  300A               	movlw	10
  1384  05FF  00F2               	movwf	___wmul@multiplicand
  1385  0600  3000               	movlw	0
  1386  0601  00F3               	movwf	___wmul@multiplicand+1
  1387  0602  120A  118A  23A7  120A  118A  	fcall	___wmul
  1388  0607  0871               	movf	?___wmul+1,w
  1389  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1391  060A  00BB               	movwf	mapear@dividendo+1
  1392  060B  0870               	movf	?___wmul,w
  1393  060C  00BA               	movwf	mapear@dividendo
  1394  060D                     l1295:	
  1395                           ;funciones0.c: 272:     while (limReal <= dividendo){
  1396                           
  1397                           
  1398                           ;funciones0.c: 272:     while (limReal <= dividendo){
  1399  060D  0876               	movf	mapear@limReal,w
  1400  060E  00F8               	movwf	??_mapear
  1401  060F  01F9               	clrf	??_mapear+1
  1402  0610  0879               	movf	??_mapear+1,w
  1403  0611  023B               	subwf	mapear@dividendo+1,w
  1404  0612  1D03               	skipz
  1405  0613  2E16               	goto	u445
  1406  0614  0878               	movf	??_mapear,w
  1407  0615  023A               	subwf	mapear@dividendo,w
  1408  0616                     u445:	
  1409  0616  1C03               	btfss	3,0
  1410  0617  2E28               	goto	l1297
  1411                           
  1412                           ;funciones0.c: 273:         resultado[1] = resultado[1] +1;
  1413  0618  0836               	movf	mapear@resultado+2,w
  1414  0619  3E01               	addlw	1
  1415  061A  00B6               	movwf	mapear@resultado+2
  1416  061B  0837               	movf	mapear@resultado+3,w
  1417  061C  1803               	skipnc
  1418  061D  3E01               	addlw	1
  1419  061E  3E00               	addlw	0
  1420  061F  00B7               	movwf	mapear@resultado+3
  1421                           
  1422                           ;funciones0.c: 274:         dividendo = dividendo - limReal;
  1423  0620  0876               	movf	mapear@limReal,w
  1424  0621  023A               	subwf	mapear@dividendo,w
  1425  0622  00BA               	movwf	mapear@dividendo
  1426  0623  083B               	movf	mapear@dividendo+1,w
  1427  0624  1C03               	skipc
  1428  0625  033B               	decf	mapear@dividendo+1,w
  1429  0626  00BB               	movwf	mapear@dividendo+1
  1430  0627  2E0D               	goto	l1295
  1431  0628                     l1297:	
  1432                           
  1433                           ;funciones0.c: 276:     dividendo = dividendo *10;
  1434  0628  083B               	movf	mapear@dividendo+1,w
  1435  0629  00F1               	movwf	___wmul@multiplier+1
  1436  062A  083A               	movf	mapear@dividendo,w
  1437  062B  00F0               	movwf	___wmul@multiplier
  1438  062C  300A               	movlw	10
  1439  062D  00F2               	movwf	___wmul@multiplicand
  1440  062E  3000               	movlw	0
  1441  062F  00F3               	movwf	___wmul@multiplicand+1
  1442  0630  120A  118A  23A7  120A  118A  	fcall	___wmul
  1443  0635  0871               	movf	?___wmul+1,w
  1444  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0638  00BB               	movwf	mapear@dividendo+1
  1447  0639  0870               	movf	?___wmul,w
  1448  063A  00BA               	movwf	mapear@dividendo
  1449  063B                     l1301:	
  1450                           ;funciones0.c: 277:     while (limReal <= dividendo){
  1451                           
  1452                           
  1453                           ;funciones0.c: 277:     while (limReal <= dividendo){
  1454  063B  0876               	movf	mapear@limReal,w
  1455  063C  00F8               	movwf	??_mapear
  1456  063D  01F9               	clrf	??_mapear+1
  1457  063E  0879               	movf	??_mapear+1,w
  1458  063F  023B               	subwf	mapear@dividendo+1,w
  1459  0640  1D03               	skipz
  1460  0641  2E44               	goto	u455
  1461  0642  0878               	movf	??_mapear,w
  1462  0643  023A               	subwf	mapear@dividendo,w
  1463  0644                     u455:	
  1464  0644  1C03               	btfss	3,0
  1465  0645  2E56               	goto	l1303
  1466                           
  1467                           ;funciones0.c: 278:         resultado[2] = resultado[2] +1;
  1468  0646  0838               	movf	mapear@resultado+4,w
  1469  0647  3E01               	addlw	1
  1470  0648  00B8               	movwf	mapear@resultado+4
  1471  0649  0839               	movf	mapear@resultado+5,w
  1472  064A  1803               	skipnc
  1473  064B  3E01               	addlw	1
  1474  064C  3E00               	addlw	0
  1475  064D  00B9               	movwf	mapear@resultado+5
  1476                           
  1477                           ;funciones0.c: 279:         dividendo = dividendo - limReal;
  1478  064E  0876               	movf	mapear@limReal,w
  1479  064F  023A               	subwf	mapear@dividendo,w
  1480  0650  00BA               	movwf	mapear@dividendo
  1481  0651  083B               	movf	mapear@dividendo+1,w
  1482  0652  1C03               	skipc
  1483  0653  033B               	decf	mapear@dividendo+1,w
  1484  0654  00BB               	movwf	mapear@dividendo+1
  1485  0655  2E3B               	goto	l1301
  1486  0656                     l1303:	
  1487                           
  1488                           ;funciones0.c: 282:     return resultado;
  1489  0656  3034               	movlw	(low (mapear@resultado| 0))& (0+255)
  1490  0657  0008               	return
  1491  0658                     __end_of_mapear:	
  1492                           
  1493                           	psect	text3
  1494  03A7                     __ptext3:	
  1495 ;; *************** function ___wmul *****************
  1496 ;; Defined at:
  1497 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  multiplier      2    0[COMMON] unsigned int 
  1500 ;;  multiplicand    2    2[COMMON] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  product         2    4[COMMON] unsigned int 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  2    0[COMMON] unsigned int 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         4       0       0       0       0
  1513 ;;      Locals:         2       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0
  1515 ;;      Totals:         6       0       0       0       0
  1516 ;;Total ram usage:        6 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_mapear
  1522 ;;		_uint_to_array
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function ___wmul
  1528  03A7                     ___wmul:	
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1532  03A7  01F4               	clrf	___wmul@product
  1533  03A8  01F5               	clrf	___wmul@product+1
  1534  03A9                     l1157:	
  1535  03A9  1C70               	btfss	___wmul@multiplier,0
  1536  03AA  2BB1               	goto	l281
  1537  03AB  0872               	movf	___wmul@multiplicand,w
  1538  03AC  07F4               	addwf	___wmul@product,f
  1539  03AD  1803               	skipnc
  1540  03AE  0AF5               	incf	___wmul@product+1,f
  1541  03AF  0873               	movf	___wmul@multiplicand+1,w
  1542  03B0  07F5               	addwf	___wmul@product+1,f
  1543  03B1                     l281:	
  1544  03B1  3001               	movlw	1
  1545  03B2                     u275:	
  1546  03B2  1003               	clrc
  1547  03B3  0DF2               	rlf	___wmul@multiplicand,f
  1548  03B4  0DF3               	rlf	___wmul@multiplicand+1,f
  1549  03B5  3EFF               	addlw	-1
  1550  03B6  1D03               	skipz
  1551  03B7  2BB2               	goto	u275
  1552  03B8  3001               	movlw	1
  1553  03B9                     u285:	
  1554  03B9  1003               	clrc
  1555  03BA  0CF1               	rrf	___wmul@multiplier+1,f
  1556  03BB  0CF0               	rrf	___wmul@multiplier,f
  1557  03BC  3EFF               	addlw	-1
  1558  03BD  1D03               	skipz
  1559  03BE  2BB9               	goto	u285
  1560  03BF  0870               	movf	___wmul@multiplier,w
  1561  03C0  0471               	iorwf	___wmul@multiplier+1,w
  1562  03C1  1D03               	btfss	3,2
  1563  03C2  2BA9               	goto	l1157
  1564  03C3  0875               	movf	___wmul@product+1,w
  1565  03C4  00F1               	movwf	?___wmul+1
  1566  03C5  0874               	movf	___wmul@product,w
  1567  03C6  00F0               	movwf	?___wmul
  1568  03C7  0008               	return
  1569  03C8                     __end_of___wmul:	
  1570                           
  1571                           	psect	text4
  1572  0357                     __ptext4:	
  1573 ;; *************** function _config *****************
  1574 ;; Defined at:
  1575 ;;		line 97 in file "LAB_5_MASTER.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _config
  1604  0357                     _config:	
  1605                           
  1606                           ;LAB_5_MASTER.c: 99:     PORTB = 0x00;
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _config: [status,2]
  1610  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0359  0186               	clrf	6	;volatile
  1613                           
  1614                           ;LAB_5_MASTER.c: 100:     ANSELH = 0x00;
  1615  035A  1683               	bsf	3,5	;RP0=1, select bank3
  1616  035B  1703               	bsf	3,6	;RP1=1, select bank3
  1617  035C  0189               	clrf	9	;volatile
  1618                           
  1619                           ;LAB_5_MASTER.c: 101:     TRISB = 0x00;
  1620  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1621  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1622  035F  0186               	clrf	6	;volatile
  1623                           
  1624                           ;LAB_5_MASTER.c: 103:     PORTD = 0x00;
  1625  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0362  0188               	clrf	8	;volatile
  1628                           
  1629                           ;LAB_5_MASTER.c: 104:     TRISD = 0x00;
  1630  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0365  0188               	clrf	8	;volatile
  1633                           
  1634                           ;LAB_5_MASTER.c: 105:     PORTA = 0;
  1635  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0368  0185               	clrf	5	;volatile
  1638                           
  1639                           ;LAB_5_MASTER.c: 106:     TRISA = 0;
  1640  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1641  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1642  036B  0185               	clrf	5	;volatile
  1643                           
  1644                           ;LAB_5_MASTER.c: 107:     ANSEL = 0;
  1645  036C  1683               	bsf	3,5	;RP0=1, select bank3
  1646  036D  1703               	bsf	3,6	;RP1=1, select bank3
  1647  036E  0188               	clrf	8	;volatile
  1648  036F  0008               	return
  1649  0370                     __end_of_config:	
  1650                           
  1651                           	psect	text5
  1652  03C8                     __ptext5:	
  1653 ;; *************** function _Lcd_Write_String *****************
  1654 ;; Defined at:
  1655 ;;		line 94 in file "funciones0.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  a               1    wreg     PTR unsigned char 
  1658 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(3), 
  1659 ;;		 -> STR_1(15), 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  a               1    4[COMMON] PTR unsigned char 
  1662 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(3), 
  1663 ;;		 -> STR_1(15), 
  1664 ;;  n               2    2[COMMON] int 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         3       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         3       0       0       0       0
  1678 ;;Total ram usage:        3 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    1
  1681 ;; This function calls:
  1682 ;;		_Lcd_Write_Char
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _Lcd_Write_String
  1690  03C8                     _Lcd_Write_String:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1694                           ;Lcd_Write_String@a stored from wreg
  1695  03C8  00F4               	movwf	Lcd_Write_String@a
  1696                           
  1697                           ;funciones0.c: 94: void Lcd_Write_String(char *a);funciones0.c: 95: {;funciones0.c: 96: 
      +                              int n;;funciones0.c: 97:     for(n = 0; a[n] != '\0'; n++){
  1698  03C9  01F2               	clrf	Lcd_Write_String@n
  1699  03CA  01F3               	clrf	Lcd_Write_String@n+1
  1700  03CB                     l1241:	
  1701  03CB  0872               	movf	Lcd_Write_String@n,w
  1702  03CC  0774               	addwf	Lcd_Write_String@a,w
  1703  03CD  0084               	movwf	4
  1704  03CE  120A  118A  2003  120A  118A  	fcall	stringdir
  1705  03D3  3A00               	xorlw	0
  1706  03D4  1903               	btfsc	3,2
  1707  03D5  0008               	return
  1708                           
  1709                           ;funciones0.c: 98:         Lcd_Write_Char(a[n]);
  1710  03D6  0872               	movf	Lcd_Write_String@n,w
  1711  03D7  0774               	addwf	Lcd_Write_String@a,w
  1712  03D8  0084               	movwf	4
  1713  03D9  120A  118A  2003  120A  118A  	fcall	stringdir
  1714  03DE  120A  118A  2348  120A  118A  	fcall	_Lcd_Write_Char
  1715                           
  1716                           ;funciones0.c: 99:     }
  1717  03E3  3001               	movlw	1
  1718  03E4  07F2               	addwf	Lcd_Write_String@n,f
  1719  03E5  1803               	skipnc
  1720  03E6  0AF3               	incf	Lcd_Write_String@n+1,f
  1721  03E7  3000               	movlw	0
  1722  03E8  07F3               	addwf	Lcd_Write_String@n+1,f
  1723  03E9  2BCB               	goto	l1241
  1724  03EA                     __end_of_Lcd_Write_String:	
  1725                           
  1726                           	psect	text6
  1727  0348                     __ptext6:	
  1728 ;; *************** function _Lcd_Write_Char *****************
  1729 ;; Defined at:
  1730 ;;		line 84 in file "funciones0.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  a               1    wreg     unsigned char 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  a               1    1[COMMON] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         1       0       0       0       0
  1746 ;;      Temps:          1       0       0       0       0
  1747 ;;      Totals:         2       0       0       0       0
  1748 ;;Total ram usage:        2 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;;		_Lcd_Write_String
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _Lcd_Write_Char
  1760  0348                     _Lcd_Write_Char:	
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _Lcd_Write_Char: [wreg]
  1764                           ;Lcd_Write_Char@a stored from wreg
  1765  0348  00F1               	movwf	Lcd_Write_Char@a
  1766                           
  1767                           ;funciones0.c: 84: void Lcd_Write_Char(char a);funciones0.c: 85: {;funciones0.c: 86:    
      +                           PORTDbits.RD6 = 1;
  1768  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1769  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1770  034B  1708               	bsf	8,6	;volatile
  1771                           
  1772                           ;funciones0.c: 88:     PORTB = a;
  1773  034C  0871               	movf	Lcd_Write_Char@a,w
  1774  034D  0086               	movwf	6	;volatile
  1775                           
  1776                           ;funciones0.c: 89:     PORTDbits.RD7 = 1;
  1777  034E  1788               	bsf	8,7	;volatile
  1778                           
  1779                           ;funciones0.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1780  034F  300D               	movlw	13
  1781  0350  00F0               	movwf	??_Lcd_Write_Char
  1782  0351                     u617:	
  1783  0351  0BF0               	decfsz	??_Lcd_Write_Char,f
  1784  0352  2B51               	goto	u617
  1785                           
  1786                           ;funciones0.c: 91:     PORTDbits.RD7 = 0;
  1787  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0355  1388               	bcf	8,7	;volatile
  1790  0356  0008               	return
  1791  0357                     __end_of_Lcd_Write_Char:	
  1792                           
  1793                           	psect	text7
  1794  038B                     __ptext7:	
  1795 ;; *************** function _Lcd_Set_Cursor *****************
  1796 ;; Defined at:
  1797 ;;		line 68 in file "funciones0.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  a               2    4[COMMON] int 
  1800 ;;  b               2    6[COMMON] int 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  d               2    8[COMMON] int 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0, pclath, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         4       0       0       0       0
  1813 ;;      Locals:         2       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         6       0       0       0       0
  1816 ;;Total ram usage:        6 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		_Lcd_Cmd
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _Lcd_Set_Cursor
  1828  038B                     _Lcd_Set_Cursor:	
  1829                           
  1830                           ;funciones0.c: 68: void Lcd_Set_Cursor(int a, int b);funciones0.c: 69: {;funciones0.c: 7
      +                          0:  int d;;funciones0.c: 71:  if(a == 1)
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1834  038B  0374               	decf	Lcd_Set_Cursor@a,w
  1835  038C  0475               	iorwf	Lcd_Set_Cursor@a+1,w
  1836  038D  1D03               	btfss	3,2
  1837  038E  2B9F               	goto	l1229
  1838                           
  1839                           ;funciones0.c: 72:  {;funciones0.c: 73:         d = 0x80 + b - 1;
  1840  038F  0876               	movf	Lcd_Set_Cursor@b,w
  1841  0390  3E7F               	addlw	127
  1842  0391                     L17:	
  1843  0391  00F8               	movwf	Lcd_Set_Cursor@d
  1844  0392  0877               	movf	Lcd_Set_Cursor@b+1,w
  1845  0393  1803               	skipnc
  1846  0394  3E01               	addlw	1
  1847  0395  3E00               	addlw	0
  1848  0396  00F9               	movwf	Lcd_Set_Cursor@d+1
  1849                           
  1850                           ;funciones0.c: 74:   Lcd_Cmd(d);
  1851  0397  0879               	movf	Lcd_Set_Cursor@d+1,w
  1852  0398  00F1               	movwf	Lcd_Cmd@a+1
  1853  0399  0878               	movf	Lcd_Set_Cursor@d,w
  1854  039A  00F0               	movwf	Lcd_Cmd@a
  1855  039B  120A  118A  2416   	fcall	_Lcd_Cmd
  1856                           
  1857                           ;funciones0.c: 75:  }
  1858  039E  0008               	return
  1859  039F                     l1229:	
  1860  039F  3002               	movlw	2
  1861  03A0  0674               	xorwf	Lcd_Set_Cursor@a,w
  1862  03A1  0475               	iorwf	Lcd_Set_Cursor@a+1,w
  1863  03A2  1D03               	btfss	3,2
  1864  03A3  0008               	return
  1865                           
  1866                           ;funciones0.c: 77:  {;funciones0.c: 78:   d = 0xC0 + b - 1;
  1867  03A4  0876               	movf	Lcd_Set_Cursor@b,w
  1868  03A5  3EBF               	addlw	191
  1869  03A6  2B91               	goto	L17
  1870  03A7                     __end_of_Lcd_Set_Cursor:	
  1871                           
  1872                           	psect	text8
  1873  053B                     __ptext8:	
  1874 ;; *************** function _Lcd_Init *****************
  1875 ;; Defined at:
  1876 ;;		line 30 in file "funciones0.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          2       0       0       0       0
  1893 ;;      Totals:         2       0       0       0       0
  1894 ;;Total ram usage:        2 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    1
  1897 ;; This function calls:
  1898 ;;		_Lcd_Cmd
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _Lcd_Init
  1906  053B                     _Lcd_Init:	
  1907                           
  1908                           ;funciones0.c: 31:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1912  053B  301A               	movlw	26
  1913  053C  00F5               	movwf	??_Lcd_Init+1
  1914  053D  30F8               	movlw	248
  1915  053E  00F4               	movwf	??_Lcd_Init
  1916  053F                     u627:	
  1917  053F  0BF4               	decfsz	??_Lcd_Init,f
  1918  0540  2D3F               	goto	u627
  1919  0541  0BF5               	decfsz	??_Lcd_Init+1,f
  1920  0542  2D3F               	goto	u627
  1921  0543  0000               	nop
  1922                           
  1923                           ;funciones0.c: 32:     Lcd_Cmd(0x30);
  1924  0544  3030               	movlw	48
  1925  0545  00F0               	movwf	Lcd_Cmd@a
  1926  0546  3000               	movlw	0
  1927  0547  00F1               	movwf	Lcd_Cmd@a+1
  1928  0548  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  1929                           
  1930                           ;funciones0.c: 33:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1931  054D  3007               	movlw	7
  1932  054E  00F5               	movwf	??_Lcd_Init+1
  1933  054F  307D               	movlw	125
  1934  0550  00F4               	movwf	??_Lcd_Init
  1935  0551                     u637:	
  1936  0551  0BF4               	decfsz	??_Lcd_Init,f
  1937  0552  2D51               	goto	u637
  1938  0553  0BF5               	decfsz	??_Lcd_Init+1,f
  1939  0554  2D51               	goto	u637
  1940                           
  1941                           ;funciones0.c: 34:     Lcd_Cmd(0x30);
  1942  0555  3030               	movlw	48
  1943  0556  00F0               	movwf	Lcd_Cmd@a
  1944  0557  3000               	movlw	0
  1945  0558  00F1               	movwf	Lcd_Cmd@a+1
  1946  0559  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  1947                           
  1948                           ;funciones0.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1949  055E  3021               	movlw	33
  1950  055F  00F4               	movwf	??_Lcd_Init
  1951  0560                     u647:	
  1952  0560  0BF4               	decfsz	??_Lcd_Init,f
  1953  0561  2D60               	goto	u647
  1954                           
  1955                           ;funciones0.c: 36:     Lcd_Cmd(0x30);
  1956  0562  3030               	movlw	48
  1957  0563  00F0               	movwf	Lcd_Cmd@a
  1958  0564  3000               	movlw	0
  1959  0565  00F1               	movwf	Lcd_Cmd@a+1
  1960  0566  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  1961                           
  1962                           ;funciones0.c: 37:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1963  056B  3021               	movlw	33
  1964  056C  00F4               	movwf	??_Lcd_Init
  1965  056D                     u657:	
  1966  056D  0BF4               	decfsz	??_Lcd_Init,f
  1967  056E  2D6D               	goto	u657
  1968                           
  1969                           ;funciones0.c: 38:     Lcd_Cmd(0x38);
  1970  056F  3038               	movlw	56
  1971  0570  00F0               	movwf	Lcd_Cmd@a
  1972  0571  3000               	movlw	0
  1973  0572  00F1               	movwf	Lcd_Cmd@a+1
  1974  0573  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  1975                           
  1976                           ;funciones0.c: 39:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  1977  0578  3011               	movlw	17
  1978  0579  00F4               	movwf	??_Lcd_Init
  1979  057A                     u667:	
  1980  057A  0BF4               	decfsz	??_Lcd_Init,f
  1981  057B  2D7A               	goto	u667
  1982  057C  0000               	nop
  1983                           
  1984                           ;funciones0.c: 40:     Lcd_Cmd(0x08);
  1985  057D  3008               	movlw	8
  1986  057E  00F0               	movwf	Lcd_Cmd@a
  1987  057F  3000               	movlw	0
  1988  0580  00F1               	movwf	Lcd_Cmd@a+1
  1989  0581  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  1990                           
  1991                           ;funciones0.c: 41:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  1992  0586  3011               	movlw	17
  1993  0587  00F4               	movwf	??_Lcd_Init
  1994  0588                     u677:	
  1995  0588  0BF4               	decfsz	??_Lcd_Init,f
  1996  0589  2D88               	goto	u677
  1997  058A  0000               	nop
  1998                           
  1999                           ;funciones0.c: 42:     Lcd_Cmd(0x01);
  2000  058B  3001               	movlw	1
  2001  058C  00F0               	movwf	Lcd_Cmd@a
  2002  058D  3000               	movlw	0
  2003  058E  00F1               	movwf	Lcd_Cmd@a+1
  2004  058F  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  2005                           
  2006                           ;funciones0.c: 43:     _delay((unsigned long)((3)*(4000000/4000.0)));
  2007  0594  3004               	movlw	4
  2008  0595  00F5               	movwf	??_Lcd_Init+1
  2009  0596  30E4               	movlw	228
  2010  0597  00F4               	movwf	??_Lcd_Init
  2011  0598                     u687:	
  2012  0598  0BF4               	decfsz	??_Lcd_Init,f
  2013  0599  2D98               	goto	u687
  2014  059A  0BF5               	decfsz	??_Lcd_Init+1,f
  2015  059B  2D98               	goto	u687
  2016  059C  0000               	nop
  2017                           
  2018                           ;funciones0.c: 44:     Lcd_Cmd(0x06);
  2019  059D  3006               	movlw	6
  2020  059E  00F0               	movwf	Lcd_Cmd@a
  2021  059F  3000               	movlw	0
  2022  05A0  00F1               	movwf	Lcd_Cmd@a+1
  2023  05A1  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  2024                           
  2025                           ;funciones0.c: 45:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2026  05A6  3011               	movlw	17
  2027  05A7  00F4               	movwf	??_Lcd_Init
  2028  05A8                     u697:	
  2029  05A8  0BF4               	decfsz	??_Lcd_Init,f
  2030  05A9  2DA8               	goto	u697
  2031  05AA  0000               	nop
  2032                           
  2033                           ;funciones0.c: 46:     Lcd_Cmd(0x0C);
  2034  05AB  300C               	movlw	12
  2035  05AC  00F0               	movwf	Lcd_Cmd@a
  2036  05AD  3000               	movlw	0
  2037  05AE  00F1               	movwf	Lcd_Cmd@a+1
  2038  05AF  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  2039                           
  2040                           ;funciones0.c: 47:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2041  05B4  3011               	movlw	17
  2042  05B5  00F4               	movwf	??_Lcd_Init
  2043  05B6                     u707:	
  2044  05B6  0BF4               	decfsz	??_Lcd_Init,f
  2045  05B7  2DB6               	goto	u707
  2046  05B8  0000               	nop
  2047  05B9  0008               	return
  2048  05BA                     __end_of_Lcd_Init:	
  2049                           
  2050                           	psect	text9
  2051  0370                     __ptext9:	
  2052 ;; *************** function _Lcd_Clear *****************
  2053 ;; Defined at:
  2054 ;;		line 61 in file "funciones0.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0
  2070 ;;      Temps:          2       0       0       0       0
  2071 ;;      Totals:         2       0       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    1
  2075 ;; This function calls:
  2076 ;;		_Lcd_Cmd
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _Lcd_Clear
  2084  0370                     _Lcd_Clear:	
  2085                           
  2086                           ;funciones0.c: 63:     Lcd_Cmd(0x00);
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2090  0370  3000               	movlw	0
  2091  0371  00F0               	movwf	Lcd_Cmd@a
  2092  0372  00F1               	movwf	Lcd_Cmd@a+1
  2093  0373  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  2094                           
  2095                           ;funciones0.c: 64:     Lcd_Cmd(0x01);
  2096  0378  3001               	movlw	1
  2097  0379  00F0               	movwf	Lcd_Cmd@a
  2098  037A  3000               	movlw	0
  2099  037B  00F1               	movwf	Lcd_Cmd@a+1
  2100  037C  120A  118A  2416  120A  118A  	fcall	_Lcd_Cmd
  2101                           
  2102                           ;funciones0.c: 65:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2103  0381  3006               	movlw	6
  2104  0382  00F5               	movwf	??_Lcd_Clear+1
  2105  0383  3030               	movlw	48
  2106  0384  00F4               	movwf	??_Lcd_Clear
  2107  0385                     u717:	
  2108  0385  0BF4               	decfsz	??_Lcd_Clear,f
  2109  0386  2B85               	goto	u717
  2110  0387  0BF5               	decfsz	??_Lcd_Clear+1,f
  2111  0388  2B85               	goto	u717
  2112  0389  0000               	nop
  2113  038A  0008               	return
  2114  038B                     __end_of_Lcd_Clear:	
  2115                           
  2116                           	psect	text10
  2117  0416                     __ptext10:	
  2118 ;; *************** function _Lcd_Cmd *****************
  2119 ;; Defined at:
  2120 ;;		line 50 in file "funciones0.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  a               2    0[COMMON] int 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         2       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0
  2136 ;;      Temps:          2       0       0       0       0
  2137 ;;      Totals:         4       0       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_Lcd_Init
  2144 ;;		_Lcd_Clear
  2145 ;;		_Lcd_Set_Cursor
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _Lcd_Cmd
  2151  0416                     _Lcd_Cmd:	
  2152                           
  2153                           ;funciones0.c: 51:  PORTDbits.RD6 = 0;
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _Lcd_Cmd: [wreg]
  2157  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0418  1308               	bcf	8,6	;volatile
  2160                           
  2161                           ;funciones0.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2162  0419  3007               	movlw	7
  2163  041A  00F3               	movwf	??_Lcd_Cmd+1
  2164  041B  307D               	movlw	125
  2165  041C  00F2               	movwf	??_Lcd_Cmd
  2166  041D                     u727:	
  2167  041D  0BF2               	decfsz	??_Lcd_Cmd,f
  2168  041E  2C1D               	goto	u727
  2169  041F  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2170  0420  2C1D               	goto	u727
  2171                           
  2172                           ;funciones0.c: 53:     PORTDbits.RD7 = 1;
  2173  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0423  1788               	bsf	8,7	;volatile
  2176                           
  2177                           ;funciones0.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2178  0424  3007               	movlw	7
  2179  0425  00F3               	movwf	??_Lcd_Cmd+1
  2180  0426  307D               	movlw	125
  2181  0427  00F2               	movwf	??_Lcd_Cmd
  2182  0428                     u737:	
  2183  0428  0BF2               	decfsz	??_Lcd_Cmd,f
  2184  0429  2C28               	goto	u737
  2185  042A  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2186  042B  2C28               	goto	u737
  2187                           
  2188                           ;funciones0.c: 55:  PORTB = a;
  2189  042C  0870               	movf	Lcd_Cmd@a,w
  2190  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2191  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2192  042F  0086               	movwf	6	;volatile
  2193                           
  2194                           ;funciones0.c: 56:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2195  0430  3007               	movlw	7
  2196  0431  00F3               	movwf	??_Lcd_Cmd+1
  2197  0432  307D               	movlw	125
  2198  0433  00F2               	movwf	??_Lcd_Cmd
  2199  0434                     u747:	
  2200  0434  0BF2               	decfsz	??_Lcd_Cmd,f
  2201  0435  2C34               	goto	u747
  2202  0436  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2203  0437  2C34               	goto	u747
  2204                           
  2205                           ;funciones0.c: 57:     PORTDbits.RD7 = 0;
  2206  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2208  043A  1388               	bcf	8,7	;volatile
  2209                           
  2210                           ;funciones0.c: 58:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2211  043B  3007               	movlw	7
  2212  043C  00F3               	movwf	??_Lcd_Cmd+1
  2213  043D  307D               	movlw	125
  2214  043E  00F2               	movwf	??_Lcd_Cmd
  2215  043F                     u757:	
  2216  043F  0BF2               	decfsz	??_Lcd_Cmd,f
  2217  0440  2C3F               	goto	u757
  2218  0441  0BF3               	decfsz	??_Lcd_Cmd+1,f
  2219  0442  2C3F               	goto	u757
  2220  0443  0008               	return
  2221  0444                     __end_of_Lcd_Cmd:	
  2222                           
  2223                           	psect	text11
  2224  032F                     __ptext11:	
  2225 ;; *************** function _I2C_Master_Write *****************
  2226 ;; Defined at:
  2227 ;;		line 151 in file "funciones0.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  d               2    0[COMMON] unsigned int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         2       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         2       0       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    1
  2248 ;; This function calls:
  2249 ;;		_I2C_Master_Wait
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _I2C_Master_Write
  2257  032F                     _I2C_Master_Write:	
  2258                           
  2259                           ;funciones0.c: 151: void I2C_Master_Write(unsigned d);funciones0.c: 152: {;funciones0.c:
      +                           153:     I2C_Master_Wait();
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2263  032F  120A  118A  233F   	fcall	_I2C_Master_Wait
  2264                           
  2265                           ;funciones0.c: 154:     SSPBUF = d;
  2266  0332  0870               	movf	I2C_Master_Write@d,w
  2267  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0335  0093               	movwf	19	;volatile
  2270  0336  0008               	return
  2271  0337                     __end_of_I2C_Master_Write:	
  2272                           
  2273                           	psect	text12
  2274  0328                     __ptext12:	
  2275 ;; *************** function _I2C_Master_Stop *****************
  2276 ;; Defined at:
  2277 ;;		line 141 in file "funciones0.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    1
  2298 ;; This function calls:
  2299 ;;		_I2C_Master_Wait
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _I2C_Master_Stop
  2307  0328                     _I2C_Master_Stop:	
  2308                           
  2309                           ;funciones0.c: 143:     I2C_Master_Wait();
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2313  0328  120A  118A  233F   	fcall	_I2C_Master_Wait
  2314                           
  2315                           ;funciones0.c: 144:     SSPCON2bits.PEN = 1;
  2316  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2317  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2318  032D  1511               	bsf	17,2	;volatile
  2319  032E  0008               	return
  2320  032F                     __end_of_I2C_Master_Stop:	
  2321                           
  2322                           	psect	text13
  2323  0321                     __ptext13:	
  2324 ;; *************** function _I2C_Master_Start *****************
  2325 ;; Defined at:
  2326 ;;		line 125 in file "funciones0.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    1
  2347 ;; This function calls:
  2348 ;;		_I2C_Master_Wait
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _I2C_Master_Start
  2356  0321                     _I2C_Master_Start:	
  2357                           
  2358                           ;funciones0.c: 127:     I2C_Master_Wait();
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2362  0321  120A  118A  233F   	fcall	_I2C_Master_Wait
  2363                           
  2364                           ;funciones0.c: 128:     SSPCON2bits.SEN = 1;
  2365  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0326  1411               	bsf	17,0	;volatile
  2368  0327  0008               	return
  2369  0328                     __end_of_I2C_Master_Start:	
  2370                           
  2371                           	psect	text14
  2372  03EA                     __ptext14:	
  2373 ;; *************** function _I2C_Master_Read *****************
  2374 ;; Defined at:
  2375 ;;		line 160 in file "funciones0.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  a               2    0[COMMON] short 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  temp            2    4[COMMON] unsigned short 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2    0[COMMON] short 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         2       0       0       0       0
  2390 ;;      Locals:         2       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0
  2392 ;;      Totals:         6       0       0       0       0
  2393 ;;Total ram usage:        6 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    1
  2396 ;; This function calls:
  2397 ;;		_I2C_Master_Wait
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _I2C_Master_Read
  2405  03EA                     _I2C_Master_Read:	
  2406                           
  2407                           ;funciones0.c: 160: short I2C_Master_Read(short a);funciones0.c: 161: {;funciones0.c: 16
      +                          2:     unsigned short temp;;funciones0.c: 163:     I2C_Master_Wait();
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2411  03EA  120A  118A  233F  120A  118A  	fcall	_I2C_Master_Wait
  2412                           
  2413                           ;funciones0.c: 164:     SSPCON2bits.RCEN = 1;
  2414  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2415  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2416  03F1  1591               	bsf	17,3	;volatile
  2417                           
  2418                           ;funciones0.c: 165:     I2C_Master_Wait();
  2419  03F2  120A  118A  233F  120A  118A  	fcall	_I2C_Master_Wait
  2420                           
  2421                           ;funciones0.c: 166:     temp = SSPBUF;
  2422  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2423  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2424  03F9  0813               	movf	19,w	;volatile
  2425  03FA  00F2               	movwf	??_I2C_Master_Read
  2426  03FB  01F3               	clrf	??_I2C_Master_Read+1
  2427  03FC  0872               	movf	??_I2C_Master_Read,w
  2428  03FD  00F4               	movwf	I2C_Master_Read@temp
  2429  03FE  0873               	movf	??_I2C_Master_Read+1,w
  2430  03FF  00F5               	movwf	I2C_Master_Read@temp+1
  2431                           
  2432                           ;funciones0.c: 167:     I2C_Master_Wait();
  2433  0400  120A  118A  233F  120A  118A  	fcall	_I2C_Master_Wait
  2434                           
  2435                           ;funciones0.c: 168:     if(a == 1){
  2436  0405  0370               	decf	I2C_Master_Read@a,w
  2437  0406  0471               	iorwf	I2C_Master_Read@a+1,w
  2438  0407  1D03               	btfss	3,2
  2439  0408  2C0D               	goto	l149
  2440                           
  2441                           ;funciones0.c: 169:         SSPCON2bits.ACKDT = 0;
  2442  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2443  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2444  040B  1291               	bcf	17,5	;volatile
  2445                           
  2446                           ;funciones0.c: 170:     }else{
  2447  040C  2C10               	goto	l150
  2448  040D                     l149:	
  2449                           
  2450                           ;funciones0.c: 171:         SSPCON2bits.ACKDT = 1;
  2451  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2452  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2453  040F  1691               	bsf	17,5	;volatile
  2454  0410                     l150:	
  2455                           ;funciones0.c: 172:     }
  2456                           
  2457                           
  2458                           ;funciones0.c: 173:     SSPCON2bits.ACKEN = 1;
  2459  0410  1611               	bsf	17,4	;volatile
  2460                           
  2461                           ;funciones0.c: 174:     return temp;
  2462  0411  0875               	movf	I2C_Master_Read@temp+1,w
  2463  0412  00F1               	movwf	?_I2C_Master_Read+1
  2464  0413  0874               	movf	I2C_Master_Read@temp,w
  2465  0414  00F0               	movwf	?_I2C_Master_Read
  2466  0415  0008               	return
  2467  0416                     __end_of_I2C_Master_Read:	
  2468                           
  2469                           	psect	text15
  2470  033F                     __ptext15:	
  2471 ;; *************** function _I2C_Master_Wait *****************
  2472 ;; Defined at:
  2473 ;;		line 118 in file "funciones0.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       0       0
  2488 ;;      Locals:         0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0
  2490 ;;      Totals:         0       0       0       0       0
  2491 ;;Total ram usage:        0 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_I2C_Master_Start
  2497 ;;		_I2C_Master_Stop
  2498 ;;		_I2C_Master_Write
  2499 ;;		_I2C_Master_Read
  2500 ;;		_I2C_Master_RepeatedStart
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _I2C_Master_Wait
  2506  033F                     _I2C_Master_Wait:	
  2507  033F                     l131:	
  2508                           ;funciones0.c: 120:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2512                           
  2513  033F  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0340  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0341  1914               	btfsc	20,2	;volatile
  2516  0342  2B3F               	goto	l131
  2517  0343  0811               	movf	17,w	;volatile
  2518  0344  391F               	andlw	31
  2519  0345  1903               	btfsc	3,2
  2520  0346  0008               	return
  2521  0347  2B3F               	goto	l131
  2522  0348                     __end_of_I2C_Master_Wait:	
  2523                           
  2524                           	psect	text16
  2525  0444                     __ptext16:	
  2526 ;; *************** function _I2C_Master_Init *****************
  2527 ;; Defined at:
  2528 ;;		line 102 in file "funciones0.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  c               4    0[BANK0 ] const unsigned long 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       4       0       0       0
  2543 ;;      Locals:         0       0       0       0       0
  2544 ;;      Temps:          0       4       0       0       0
  2545 ;;      Totals:         0       8       0       0       0
  2546 ;;Total ram usage:        8 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    1
  2549 ;; This function calls:
  2550 ;;		___lldiv
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _I2C_Master_Init
  2558  0444                     _I2C_Master_Init:	
  2559                           
  2560                           ;funciones0.c: 102: void I2C_Master_Init(const unsigned long c);funciones0.c: 103: {;fun
      +                          ciones0.c: 104:     SSPCON = 0b00101000;
  2561                           
  2562                           ;incstack = 0
  2563                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2564  0444  3028               	movlw	40
  2565  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0447  0094               	movwf	20	;volatile
  2568                           
  2569                           ;funciones0.c: 105:     SSPCON2 = 0;
  2570  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2571  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2572  044A  0191               	clrf	17	;volatile
  2573                           
  2574                           ;funciones0.c: 106:     SSPADD = (4000000/(4*c))-1;
  2575  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2576  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2577  044D  0833               	movf	I2C_Master_Init@c,w
  2578  044E  00B7               	movwf	??_I2C_Master_Init
  2579  044F  0834               	movf	I2C_Master_Init@c+1,w
  2580  0450  00B8               	movwf	??_I2C_Master_Init+1
  2581  0451  0835               	movf	I2C_Master_Init@c+2,w
  2582  0452  00B9               	movwf	??_I2C_Master_Init+2
  2583  0453  0836               	movf	I2C_Master_Init@c+3,w
  2584  0454  00BA               	movwf	??_I2C_Master_Init+3
  2585  0455  3002               	movlw	2
  2586  0456                     u405:	
  2587  0456  1003               	clrc
  2588  0457  0DB7               	rlf	??_I2C_Master_Init,f
  2589  0458  0DB8               	rlf	??_I2C_Master_Init+1,f
  2590  0459  0DB9               	rlf	??_I2C_Master_Init+2,f
  2591  045A  0DBA               	rlf	??_I2C_Master_Init+3,f
  2592  045B  3EFF               	addlw	-1
  2593  045C  1D03               	skipz
  2594  045D  2C56               	goto	u405
  2595  045E  083A               	movf	??_I2C_Master_Init+3,w
  2596  045F  00F3               	movwf	___lldiv@divisor+3
  2597  0460  0839               	movf	??_I2C_Master_Init+2,w
  2598  0461  00F2               	movwf	___lldiv@divisor+2
  2599  0462  0838               	movf	??_I2C_Master_Init+1,w
  2600  0463  00F1               	movwf	___lldiv@divisor+1
  2601  0464  0837               	movf	??_I2C_Master_Init,w
  2602  0465  00F0               	movwf	___lldiv@divisor
  2603  0466  3000               	movlw	0
  2604  0467  00F7               	movwf	___lldiv@dividend+3
  2605  0468  303D               	movlw	61
  2606  0469  00F6               	movwf	___lldiv@dividend+2
  2607  046A  3009               	movlw	9
  2608  046B  00F5               	movwf	___lldiv@dividend+1
  2609  046C  3000               	movlw	0
  2610  046D  00F4               	movwf	___lldiv@dividend
  2611  046E  120A  118A  247A   	fcall	___lldiv
  2612  0471  0870               	movf	?___lldiv,w
  2613  0472  3EFF               	addlw	255
  2614  0473  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0474  1303               	bcf	3,6	;RP1=0, select bank1
  2616  0475  0093               	movwf	19	;volatile
  2617                           
  2618                           ;funciones0.c: 107:     SSPSTAT = 0;
  2619  0476  0194               	clrf	20	;volatile
  2620                           
  2621                           ;funciones0.c: 108:     TRISCbits.TRISC3 = 1;
  2622  0477  1587               	bsf	7,3	;volatile
  2623                           
  2624                           ;funciones0.c: 109:     TRISCbits.TRISC4 = 1;
  2625  0478  1607               	bsf	7,4	;volatile
  2626  0479  0008               	return
  2627  047A                     __end_of_I2C_Master_Init:	
  2628                           
  2629                           	psect	text17
  2630  047A                     __ptext17:	
  2631 ;; *************** function ___lldiv *****************
  2632 ;; Defined at:
  2633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  divisor         4    0[COMMON] unsigned long 
  2636 ;;  dividend        4    4[COMMON] unsigned long 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  quotient        4    9[COMMON] unsigned long 
  2639 ;;  counter         1   13[COMMON] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  4    0[COMMON] unsigned long 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         8       0       0       0       0
  2650 ;;      Locals:         5       0       0       0       0
  2651 ;;      Temps:          1       0       0       0       0
  2652 ;;      Totals:        14       0       0       0       0
  2653 ;;Total ram usage:       14 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_I2C_Master_Init
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function ___lldiv
  2664  047A                     ___lldiv:	
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2668  047A  3000               	movlw	0
  2669  047B  00FC               	movwf	___lldiv@quotient+3
  2670  047C  3000               	movlw	0
  2671  047D  00FB               	movwf	___lldiv@quotient+2
  2672  047E  3000               	movlw	0
  2673  047F  00FA               	movwf	___lldiv@quotient+1
  2674  0480  3000               	movlw	0
  2675  0481  00F9               	movwf	___lldiv@quotient
  2676  0482  0873               	movf	___lldiv@divisor+3,w
  2677  0483  0472               	iorwf	___lldiv@divisor+2,w
  2678  0484  0471               	iorwf	___lldiv@divisor+1,w
  2679  0485  0470               	iorwf	___lldiv@divisor,w
  2680  0486  1903               	skipnz
  2681  0487  2CCF               	goto	l1189
  2682  0488  01FD               	clrf	___lldiv@counter
  2683  0489  0AFD               	incf	___lldiv@counter,f
  2684  048A                     l1175:	
  2685  048A  1BF3               	btfsc	___lldiv@divisor+3,7
  2686  048B  2C9A               	goto	l1177
  2687  048C  3001               	movlw	1
  2688  048D  00F8               	movwf	??___lldiv
  2689  048E                     u315:	
  2690  048E  1003               	clrc
  2691  048F  0DF0               	rlf	___lldiv@divisor,f
  2692  0490  0DF1               	rlf	___lldiv@divisor+1,f
  2693  0491  0DF2               	rlf	___lldiv@divisor+2,f
  2694  0492  0DF3               	rlf	___lldiv@divisor+3,f
  2695  0493  0BF8               	decfsz	??___lldiv,f
  2696  0494  2C8E               	goto	u315
  2697  0495  3001               	movlw	1
  2698  0496  00F8               	movwf	??___lldiv
  2699  0497  0878               	movf	??___lldiv,w
  2700  0498  07FD               	addwf	___lldiv@counter,f
  2701  0499  2C8A               	goto	l1175
  2702  049A                     l1177:	
  2703  049A  3001               	movlw	1
  2704  049B  00F8               	movwf	??___lldiv
  2705  049C                     u335:	
  2706  049C  1003               	clrc
  2707  049D  0DF9               	rlf	___lldiv@quotient,f
  2708  049E  0DFA               	rlf	___lldiv@quotient+1,f
  2709  049F  0DFB               	rlf	___lldiv@quotient+2,f
  2710  04A0  0DFC               	rlf	___lldiv@quotient+3,f
  2711  04A1  0BF8               	decfsz	??___lldiv,f
  2712  04A2  2C9C               	goto	u335
  2713  04A3  0873               	movf	___lldiv@divisor+3,w
  2714  04A4  0277               	subwf	___lldiv@dividend+3,w
  2715  04A5  1D03               	skipz
  2716  04A6  2CB1               	goto	u345
  2717  04A7  0872               	movf	___lldiv@divisor+2,w
  2718  04A8  0276               	subwf	___lldiv@dividend+2,w
  2719  04A9  1D03               	skipz
  2720  04AA  2CB1               	goto	u345
  2721  04AB  0871               	movf	___lldiv@divisor+1,w
  2722  04AC  0275               	subwf	___lldiv@dividend+1,w
  2723  04AD  1D03               	skipz
  2724  04AE  2CB1               	goto	u345
  2725  04AF  0870               	movf	___lldiv@divisor,w
  2726  04B0  0274               	subwf	___lldiv@dividend,w
  2727  04B1                     u345:	
  2728  04B1  1C03               	skipc
  2729  04B2  2CC2               	goto	l1185
  2730  04B3  0870               	movf	___lldiv@divisor,w
  2731  04B4  02F4               	subwf	___lldiv@dividend,f
  2732  04B5  0871               	movf	___lldiv@divisor+1,w
  2733  04B6  1C03               	skipc
  2734  04B7  0F71               	incfsz	___lldiv@divisor+1,w
  2735  04B8  02F5               	subwf	___lldiv@dividend+1,f
  2736  04B9  0872               	movf	___lldiv@divisor+2,w
  2737  04BA  1C03               	skipc
  2738  04BB  0F72               	incfsz	___lldiv@divisor+2,w
  2739  04BC  02F6               	subwf	___lldiv@dividend+2,f
  2740  04BD  0873               	movf	___lldiv@divisor+3,w
  2741  04BE  1C03               	skipc
  2742  04BF  0F73               	incfsz	___lldiv@divisor+3,w
  2743  04C0  02F7               	subwf	___lldiv@dividend+3,f
  2744  04C1  1479               	bsf	___lldiv@quotient,0
  2745  04C2                     l1185:	
  2746  04C2  3001               	movlw	1
  2747  04C3                     u355:	
  2748  04C3  1003               	clrc
  2749  04C4  0CF3               	rrf	___lldiv@divisor+3,f
  2750  04C5  0CF2               	rrf	___lldiv@divisor+2,f
  2751  04C6  0CF1               	rrf	___lldiv@divisor+1,f
  2752  04C7  0CF0               	rrf	___lldiv@divisor,f
  2753  04C8  3EFF               	addlw	-1
  2754  04C9  1D03               	skipz
  2755  04CA  2CC3               	goto	u355
  2756  04CB  3001               	movlw	1
  2757  04CC  02FD               	subwf	___lldiv@counter,f
  2758  04CD  1D03               	btfss	3,2
  2759  04CE  2C9A               	goto	l1177
  2760  04CF                     l1189:	
  2761  04CF  087C               	movf	___lldiv@quotient+3,w
  2762  04D0  00F3               	movwf	?___lldiv+3
  2763  04D1  087B               	movf	___lldiv@quotient+2,w
  2764  04D2  00F2               	movwf	?___lldiv+2
  2765  04D3  087A               	movf	___lldiv@quotient+1,w
  2766  04D4  00F1               	movwf	?___lldiv+1
  2767  04D5  0879               	movf	___lldiv@quotient,w
  2768  04D6  00F0               	movwf	?___lldiv
  2769  04D7  0008               	return
  2770  04D8                     __end_of___lldiv:	
  2771  007E                     btemp	set	126	;btemp
  2772  007E                     wtemp0	set	126


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(COMMON[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[3]), 
		 -> STR_1(CODE[15]), 

    valor2	PTR short  size(1) Largest target is 6
		 -> NULL(NULL[0]), mapear@resultado(BANK0[6]), 

    sp__mapear	PTR unsigned int  size(1) Largest target is 6
		 -> mapear@resultado(BANK0[6]), 

    valor1	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), mapear@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _mapear->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_mapear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6652
                                              9 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             _config
                             _mapear
                       _uint_to_char
 ---------------------------------------------------------------------------------
 (1) _uint_to_char                                         4     4      0      62
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _mapear                                              15    13      2    1812
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     277
                                              2 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     2      4    1676
                                              4 COMMON     6     2      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     934
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            2     2      0     934
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              4     2      2     934
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
   _mapear
     ___wmul
   _uint_to_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 22 19:39:25 2020

                        pc 0002                __CFG_CP$OFF 0000            mapear@resultado 0034  
                       fsr 0004        ___wmul@multiplicand 0072                        l131 033F  
                      l150 0410                        l149 040D                        l281 03B1  
                      _GIE 005F                        u315 048E                        u420 05C1  
                      u405 0456                        u335 049C                        u345 04B1  
             __CFG_CPD$OFF 0000                        u355 04C3                        u275 03B2  
                      u435 05E8                        u285 03B9                        u445 0616  
                      u455 0644                        u607 0745                        u617 0351  
                      u707 05B6                        u627 053F                        u717 0385  
                      u637 0551                        u727 041D                        u647 0560  
                      u737 0428                        u657 056D                        u577 06B0  
                      u747 0434                        u667 057A                        u587 06DB  
                      u757 043F                        u677 0588                        u597 071B  
                      u687 0598                        u697 05A8               _uint_to_char 04D8  
                      fsr0 0004                        indf 0000               __CFG_LVP$OFF 0000  
                     l1301 063B                       l1303 0656                       l1311 04DC  
                     l1241 03CB                       l1321 04E6                       l1313 04DE  
                     l1331 04F0                       l1323 04E8                       l1315 04E0  
                     l1229 039F                       l1157 03A9                       l1341 04FA  
                     l1333 04F2                       l1325 04EA                       l1317 04E2  
                     l1309 04DA                       l1175 048A                       l1335 04F4  
                     l1327 04EC                       l1319 04E4                       l1343 04FF  
                     l1185 04C2                       l1177 049A                       l1513 0507  
                     l1337 04F6                       l1329 04EE                       l1345 0539  
                     l1291 05FA                       l1339 04F8                       l1189 04CF  
                     l1365 0689                       l1295 060D                       l1297 0628  
                     l1289 05DF                       STR_1 0009                       STR_2 0018  
                     STR_3 001B                       STR_4 001F                       STR_5 001D  
                     _PEIE 005E               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 0658                       _temp 002C                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0072              __CFG_IESO$OFF 0000  
          __end_of_Lcd_Cmd 0444           ?_I2C_Master_Init 0033           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
            __CFG_WDTE$OFF 0000         uint_to_char@numChr 0073                      _ANSEL 0188  
          __end_of___lldiv 04D8         uint_to_char@numero 0072                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001C  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
              mapear@F1362 0020             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E                mapear@valor 0033  
         __end_of_Lcd_Init 05BA             __CFG_MCLRE$OFF 0000            __initialization 07F5  
             __end_of_main 07F5                     ??_main 003C         __size_of_Lcd_Clear 001B  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     _ANSELH 0189                  ??_Lcd_Cmd 0072  
  __size_of_Lcd_Write_Char 000F                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C         uint_to_array@F1354 0026                     _SSPCON 0014  
                   _SSPBUF 0013             __CFG_PWRTE$OFF 0000                     ___wmul 03A7  
                ??___lldiv 0078                     _config 0357                     _mapear 05BA  
                   _valor1 002F                     _valor2 002E            Lcd_Set_Cursor@a 0074  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@d 0078               mapear@limSup 0077  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 038B             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 038B                  ?_Lcd_Init 0070                 __pbssBANK0 0020  
               __pmaintext 0658                    ?___wmul 0070                    ?_config 0070  
                  ?_mapear 0076  __size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 03A7  
               ??_Lcd_Init 0074                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 0348                    _Lcd_Cmd 0416  
                  ___lldiv 047A            __size_of___wmul 0021            __size_of_config 0019  
          __size_of_mapear 009E            ?_Lcd_Set_Cursor 0074                    __ptext1 04D8  
                  __ptext2 05BA                    __ptext3 03A7                    __ptext4 0357  
                  __ptext5 03C8                    __ptext6 0348                    __ptext7 038B  
                  __ptext8 053B                    __ptext9 0370   __size_of_I2C_Master_Init 0036  
 __size_of_I2C_Master_Read 002C   __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007  
                  clrloop0 0338     __end_of_Lcd_Write_Char 0357       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0007  __size_of_I2C_Master_Write 0008            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0033           I2C_Master_Read@a 0070  
                _PORTDbits 0008              mapear@limReal 0076                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0074          Lcd_Write_String@n 0072  
                _Lcd_Clear 0370             __end_of___wmul 03C8           _Lcd_Write_String 03C8  
           __end_of_config 0370             __end_of_mapear 0658              ?_uint_to_char 0070  
      start_initialization 07F5          __size_of_Lcd_Init 007F          ??_I2C_Master_Init 0037  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                 ?_Lcd_Clear 0070                   ??___wmul 0074  
                 ??_config 0070                   ??_mapear 0078            Lcd_Write_Char@a 0071  
           ??_uint_to_char 0070                  ___latbits 0002              __pcstackBANK0 0033  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 0321           _I2C_Master_Write 032F  
         ??_Lcd_Set_Cursor 0078                   ?___lldiv 0070                  __pstrings 0003  
                _contador1 0032             ___wmul@product 0074                  clear_ram0 0337  
                 Lcd_Cmd@a 0070                ??_Lcd_Clear 0074                  _valor_adc 0031  
              __stringbase 0008          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0070  
                 _Lcd_Init 053B        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 03EA  
         __size_of_Lcd_Cmd 002E       __end_of_uint_to_char 053B           __size_of___lldiv 005E  
       __end_of__stringtab 0009            _I2C_Master_Init 0444            _I2C_Master_Read 03EA  
          _I2C_Master_Wait 033F            _I2C_Master_Stop 0328                   __ptext10 0416  
                 __ptext11 032F                   __ptext12 0328                   __ptext13 0321  
                 __ptext14 03EA                   __ptext15 033F                   __ptext16 0444  
                 __ptext17 047A          __CFG_BOR4V$BOR40V 0000                   _contador 0030  
            __size_of_main 019D   __end_of_I2C_Master_Start 0328   __end_of_I2C_Master_Write 0337  
         ___lldiv@dividend 0074                  stringcode 0003    __end_of_I2C_Master_Init 047A  
  __end_of_I2C_Master_Read 0416    __end_of_I2C_Master_Wait 0348    __end_of_I2C_Master_Stop 032F  
          mapear@dividendo 003A           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
    __size_of_uint_to_char 0063  
